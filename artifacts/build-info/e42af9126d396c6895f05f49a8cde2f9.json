{"id":"e42af9126d396c6895f05f49a8cde2f9","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/community/Pool.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"../helpers/Oracle.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"../interfaces/IWETH.sol\";\r\nimport \"../interfaces/IVault.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract Pool is ReentrancyGuard {\r\n\tOracle public oracle;\r\n\r\n\tenum Coin {\r\n\t\tMATIC\r\n\t}\r\n\r\n\tstruct Prediction {\r\n\t\taddress predictor;\r\n\t\tCoin token;\r\n\t\tuint256 predictedPrice;\r\n\t\tuint256 actualPrice;\r\n\t\tuint256 resolvedPrice;\r\n\t\tuint256 difference;\r\n\t\tuint256 timestamp;\r\n\t\tuint256 endTime;\r\n\t\tbool resolved;\r\n\t}\r\n\r\n\tPrediction[] public predictions;\r\n\r\n\tIWETH public wnative;\r\n\tIVault public yearnVault;\r\n\r\n\tuint256 public submissionBaseFee = 0.01 ether;\r\n\tuint256 public submissionStepFee = 0.001 ether;\r\n\tuint256 public predictionDuration = 1 days;\r\n\tuint256 public resolutionLimit = 10 minutes;\r\n\tuint256 public exitLimit = 7 days;\r\n\tuint256 public totalPredictions = 0;\r\n\tuint256 public totalDistribution = 0;\r\n\r\n\tmapping(address => uint256) public distributionCounter;\r\n\tmapping(address => uint256) public lastWithdraw;\r\n\tmapping(address => uint256) public userSubmissionFees;\r\n\r\n\tevent PredictionRegistered(\r\n\t\taddress indexed predictor,\r\n\t\tCoin token,\r\n\t\tuint256 predictedPrice,\r\n\t\tuint256 actualPrice,\r\n\t\tuint256 timestamp,\r\n\t\tuint256 endTime\r\n\t);\r\n\tevent RewardWithdrawn(address indexed predictor, uint256 amount);\r\n\r\n\tconstructor(\r\n\t\taddress _oracleAddress,\r\n\t\taddress _wnative,\r\n\t\taddress _yearnVault\r\n\t) ReentrancyGuard() {\r\n\t\toracle = Oracle(_oracleAddress);\r\n\t\twnative = IWETH(_wnative);\r\n\t\tyearnVault = IVault(_yearnVault);\r\n\t}\r\n\r\n\tfunction getSubmissionFee() public view returns (uint256) {\r\n\t\treturn userSubmissionFees[msg.sender];\r\n\t}\r\n\r\n\tfunction submit(Coin _token, uint256 _predictedPrice) public payable {\r\n\t\trequire(msg.value >= submissionBaseFee, \"Invalid fee amount\");\r\n\t\trequire(\r\n\t\t\tmsg.value >= userSubmissionFees[msg.sender],\r\n\t\t\t\"Invalid fee amount\"\r\n\t\t);\r\n\r\n\t\tuserSubmissionFees[msg.sender] = msg.value;\r\n\t\tuserSubmissionFees[msg.sender] += submissionStepFee;\r\n\r\n\t\tuint256 price = oracle.getLatestPrice() * 1e10;\r\n\r\n\t\tpredictions.push(\r\n\t\t\tPrediction(\r\n\t\t\t\tmsg.sender,\r\n\t\t\t\t_token,\r\n\t\t\t\t_predictedPrice,\r\n\t\t\t\tprice,\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tblock.timestamp,\r\n\t\t\t\tblock.timestamp + predictionDuration,\r\n\t\t\t\tfalse\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\ttotalPredictions++;\r\n\t\twnative.deposit{ value: msg.value }();\r\n\t\tIERC20(address(wnative)).approve(address(yearnVault), msg.value);\r\n\t\tyearnVault.deposit(msg.value, address(this));\r\n\r\n\t\temit PredictionRegistered(\r\n\t\t\tmsg.sender,\r\n\t\t\t_token,\r\n\t\t\t_predictedPrice,\r\n\t\t\tprice,\r\n\t\t\tblock.timestamp,\r\n\t\t\tblock.timestamp + predictionDuration\r\n\t\t);\r\n\t}\r\n\r\n\tfunction exit() public {\r\n\t\trequire(\r\n\t\t\tblock.timestamp - lastWithdraw[msg.sender] >= exitLimit,\r\n\t\t\t\"Wait for exitLimit before next withdraw\"\r\n\t\t);\r\n\r\n\t\tuint256 reward = calculateReward(msg.sender);\r\n\r\n\t\trequire(reward > 0, \"No reward available\");\r\n\r\n\t\tIERC20(address(yearnVault)).approve(address(yearnVault), reward);\r\n\r\n\t\tuint256 ctxBalanceB4 = address(this).balance;\r\n\t\tyearnVault.withdraw(reward, address(this), address(this), 200);\r\n\t\tuint256 ctxBalanceAfter = address(this).balance;\r\n\t\tuint256 rewardToTransfer = ctxBalanceAfter - ctxBalanceB4;\r\n\r\n\t\twnative.withdraw(rewardToTransfer);\r\n\r\n\t\t// Aggiornamento dello stato prima della trasferimento per prevenire reentrancy\r\n\t\ttotalPredictions -= distributionCounter[msg.sender];\r\n\t\tdistributionCounter[msg.sender] = 0;\r\n\t\tlastWithdraw[msg.sender] = block.timestamp;\r\n\r\n\t\tuserSubmissionFees[msg.sender] = submissionBaseFee;\r\n\r\n\t\tAddress.sendValue(payable(msg.sender), rewardToTransfer);\r\n\r\n\t\temit RewardWithdrawn(msg.sender, rewardToTransfer);\r\n\t}\r\n\r\n\tfunction calculateReward(address user) public view returns (uint256) {\r\n\t\trequire(distributionCounter[user] > 0, \"No predictions made\");\r\n\t\trequire(totalDistribution > 0, \"No rewards available\");\r\n\t\tuint256 userShare = (distributionCounter[user] * 1e18) /\r\n\t\t\ttotalDistribution;\r\n\t\tuint256 yeanBalance = IERC20(address(yearnVault)).balanceOf(\r\n\t\t\taddress(this)\r\n\t\t);\r\n\t\tuint256 userBalance = (yeanBalance * userShare) / 1e18;\r\n\t\tuint256 userReward = userBalance - userBalance / 2;\r\n\t\treturn userReward;\r\n\t}\r\n\r\n\tfunction last10Predictions() public view returns (Prediction[] memory) {\r\n\t\tuint256 length = predictions.length;\r\n\t\tuint256 start = length > 10 ? length - 10 : 0;\r\n\t\tPrediction[] memory result = new Prediction[](length - start);\r\n\t\tfor (uint256 i = start; i < length; i++) {\r\n\t\t\tresult[i - start] = predictions[i];\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction getPrediction(\r\n\t\tuint256 index\r\n\t) public view returns (Prediction memory) {\r\n\t\trequire(index < predictions.length, \"Invalid index\");\r\n\t\treturn predictions[index];\r\n\t}\r\n\r\n\tfunction getPredictionFromTo(\r\n\t\tuint256 from,\r\n\t\tuint256 to\r\n\t) public view returns (Prediction[] memory) {\r\n\t\trequire(from < to, \"Invalid range\");\r\n\t\trequire(to <= predictions.length, \"Invalid range\");\r\n\t\tPrediction[] memory result = new Prediction[](to - from);\r\n\t\tfor (uint256 i = from; i < to; i++) {\r\n\t\t\tresult[i - from] = predictions[i];\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction getPredictionCount() public view returns (uint256) {\r\n\t\treturn predictions.length;\r\n\t}\r\n\r\n\tfunction getTotalPredictions() public view returns (uint256) {\r\n\t\treturn totalPredictions;\r\n\t}\r\n\r\n\tfunction hasAnyUnresolvedPastEndTime() public view returns (bool) {\r\n\t\tfor (uint256 i = 0; i < predictions.length; i++) {\r\n\t\t\tif (\r\n\t\t\t\t!predictions[i].resolved &&\r\n\t\t\t\tblock.timestamp > predictions[i].endTime\r\n\t\t\t) {\r\n\t\t\t\treturn true; // Restituisce true alla prima occorrenza di una previsione non risolta superata da endTime\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // Se nessuna previsione non risolta ha superato endTime, restituisce false\r\n\t}\r\n\r\n\tfunction resolve() public {\r\n\t\tuint256 latestPrice = oracle.getLatestPrice() * 1e10;\r\n\r\n\t\tfor (uint256 i = 0; i < predictions.length; i++) {\r\n\t\t\tif (\r\n\t\t\t\t!predictions[i].resolved &&\r\n\t\t\t\tblock.timestamp >= predictions[i].endTime\r\n\t\t\t) {\r\n\t\t\t\tuint256 predictedPrice = predictions[i].predictedPrice;\r\n\t\t\t\tuint256 priceDifference = predictedPrice > latestPrice\r\n\t\t\t\t\t? predictedPrice - latestPrice\r\n\t\t\t\t\t: latestPrice - predictedPrice;\r\n\t\t\t\tuint256 score = calculateScore(predictedPrice, latestPrice);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tblock.timestamp <= predictions[i].endTime + resolutionLimit\r\n\t\t\t\t) {\r\n\t\t\t\t\tdistributionCounter[predictions[i].predictor] += 0; // Assumi che esista questo campo\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdistributionCounter[predictions[i].predictor] += score; // Assumi che esista questo campo\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpredictions[i].difference = priceDifference;\r\n\t\t\t\tpredictions[i].resolved = true;\r\n\t\t\t\tpredictions[i].resolvedPrice = latestPrice;\r\n\t\t\t\ttotalDistribution += score;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdistributionCounter[msg.sender]++;\r\n\t\ttotalDistribution++;\r\n\t}\r\n\r\n\tfunction calculateScore(\r\n\t\tuint256 predictedPrice,\r\n\t\tuint256 resolvedPrice\r\n\t) private pure returns (uint256) {\r\n\t\tif (resolvedPrice == 0) return 1; // Evita divisione per zero\r\n\t\tuint256 priceDifference = predictedPrice > resolvedPrice\r\n\t\t\t? predictedPrice - resolvedPrice\r\n\t\t\t: resolvedPrice - predictedPrice;\r\n\t\tuint256 differencePercentage = (priceDifference * 100) / resolvedPrice;\r\n\r\n\t\t// Il punteggio diminuisce all'aumentare della differenza percentuale\r\n\t\tif (differencePercentage == 0) {\r\n\t\t\treturn 10; // Puntaeggio massimo per previsione perfetta\r\n\t\t} else if (differencePercentage <= 5) {\r\n\t\t\treturn 9;\r\n\t\t} else if (differencePercentage <= 10) {\r\n\t\t\treturn 8;\r\n\t\t} else if (differencePercentage <= 15) {\r\n\t\t\treturn 7;\r\n\t\t} else if (differencePercentage <= 20) {\r\n\t\t\treturn 6;\r\n\t\t} else if (differencePercentage <= 25) {\r\n\t\t\treturn 5;\r\n\t\t} else if (differencePercentage <= 30) {\r\n\t\t\treturn 4;\r\n\t\t} else if (differencePercentage <= 35) {\r\n\t\t\treturn 3;\r\n\t\t} else if (differencePercentage <= 40) {\r\n\t\t\treturn 2;\r\n\t\t} else {\r\n\t\t\treturn 1; // Punteggio minimo per grande differenza\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hasUnresolvedPredictions() public view returns (bool) {\r\n\t\tfor (uint256 i = 0; i < predictions.length; i++) {\r\n\t\t\tif (!predictions[i].resolved) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Permetti al contratto di ricevere ETH\r\n\treceive() external payable {}\r\n}\r\n"},"contracts/community/Tournament.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"../helpers/Oracle.sol\";\r\n\r\ncontract Tournament is ReentrancyGuard {\r\n\tOracle public oracle;\r\n\r\n\tuint256 public keeperPercentageFee = 100;\r\n\tuint256 public submissionEndTime = 8 hours;\r\n\tuint256 public verificationEndTime = 1 days;\r\n\tuint256 public resolutionEndTime = 1 hours;\r\n\r\n\tstruct Prediction {\r\n\t\tuint256 round;\r\n\t\taddress predictor;\r\n\t\tuint256 predictedPrice;\r\n\t\tuint256 amount;\r\n\t}\r\n\r\n\tuint256 public maxParticipants;\r\n\r\n\tuint256 public lastRoundPrice;\r\n\r\n\tPrediction[] public predictions;\r\n\r\n\tuint256 public verificationTime;\r\n\taddress public priceFeedAddress;\r\n\tuint256 public prizePool;\r\n\tuint256 public currentRound = 0;\r\n\r\n\tmapping(uint256 => uint256) scores;\r\n\tmapping(uint256 => uint256) prizePerScore;\r\n\r\n\taddress[] public roundWinners;\r\n\r\n\tstruct WinnerInfo {\r\n\t\tuint256 index;\r\n\t\tuint256 difference;\r\n\t\tbool exists;\r\n\t}\r\n\r\n\tevent PredictionSubmitted(\r\n\t\tuint256 round,\r\n\t\taddress indexed predictor,\r\n\t\tuint256 predictedPrice,\r\n\t\tuint256 amount\r\n\t);\r\n\r\n\tevent TournamentResolved(\r\n\t\tuint256 round,\r\n\t\taddress[] winners,\r\n\t\tuint256[] prizeAmounts\r\n\t);\r\n\r\n\tconstructor(\r\n\t\taddress _oracleAddress,\r\n\t\tuint256 _maxParticipants\r\n\t) ReentrancyGuard() {\r\n\t\toracle = Oracle(_oracleAddress);\r\n\t\tmaxParticipants = _maxParticipants;\r\n\t\tverificationTime = block.timestamp + verificationEndTime;\r\n\t}\r\n\r\n\tfunction isRoundOpen() public view returns (bool) {\r\n\t\treturn block.timestamp <= verificationTime - 4 hours;\r\n\t}\r\n\r\n\tfunction submitPrediction(uint256 _predictedPrice) external payable {\r\n\t\trequire(msg.value >= 0.01 ether, \"Entry fee is 0.01 ether\");\r\n\t\trequire(\r\n\t\t\tpredictions.length < maxParticipants,\r\n\t\t\t\"Participant limit reached\"\r\n\t\t);\r\n\t\trequire(\r\n\t\t\tblock.timestamp <= verificationTime - submissionEndTime,\r\n\t\t\t\"Submissions closed 4 hours before round ends\"\r\n\t\t);\r\n\r\n\t\tpredictions.push(\r\n\t\t\tPrediction(currentRound, msg.sender, _predictedPrice, msg.value)\r\n\t\t);\r\n\t\tprizePool += msg.value;\r\n\t\temit PredictionSubmitted(\r\n\t\t\tcurrentRound,\r\n\t\t\tmsg.sender,\r\n\t\t\t_predictedPrice,\r\n\t\t\tmsg.value\r\n\t\t);\r\n\t}\r\n\r\n\tfunction _resetTournament() private {\r\n\t\tdelete predictions;\r\n\t\tprizePool = 0;\r\n\t\tverificationTime = block.timestamp + verificationEndTime;\r\n\t\tcurrentRound += 1;\r\n\t}\r\n\r\n\tfunction resolveTournament() external nonReentrant {\r\n\t\trequire(\r\n\t\t\tblock.timestamp >= verificationTime,\r\n\t\t\t\"Tournament cannot be resolved yet\"\r\n\t\t);\r\n\r\n\t\tif (block.timestamp >= verificationTime + resolutionEndTime) {\r\n\t\t\tfor (uint256 i = 0; i < predictions.length; i++) {\r\n\t\t\t\tAddress.sendValue(\r\n\t\t\t\t\tpayable(predictions[i].predictor),\r\n\t\t\t\t\tpredictions[i].amount\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\temit TournamentResolved(\r\n\t\t\t\tcurrentRound,\r\n\t\t\t\tnew address[](0),\r\n\t\t\t\tnew uint256[](0)\r\n\t\t\t);\r\n\t\t\t_resetTournament();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tuint256 actualPrice = oracle.getLatestPrice();\r\n\t\tuint256 actualPriceUint = actualPrice * 1e10;\r\n\t\tlastRoundPrice = actualPriceUint;\r\n\r\n\t\tif (predictions.length == 0) {\r\n\t\t\temit TournamentResolved(\r\n\t\t\t\tcurrentRound,\r\n\t\t\t\tnew address[](0),\r\n\t\t\t\tnew uint256[](0)\r\n\t\t\t);\r\n\t\t\troundWinners = new address[](0);\r\n\t\t\t_resetTournament();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (predictions.length == 1) {\r\n\t\t\t// Restituisce il premio all'unico partecipante\r\n\t\t\taddress[] memory winnerAddress = new address[](1);\r\n\t\t\tuint256[] memory winnerPrize = new uint256[](1);\r\n\t\t\twinnerAddress[0] = predictions[0].predictor;\r\n\t\t\twinnerPrize[0] = prizePool;\r\n\t\t\tAddress.sendValue(payable(winnerAddress[0]), winnerPrize[0]);\r\n\t\t\temit TournamentResolved(currentRound, winnerAddress, winnerPrize);\r\n\t\t\troundWinners = winnerAddress;\r\n\t\t\t_resetTournament();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (predictions.length == 2) {\r\n\t\t\t// Distribuisci il premio tra i due partecipanti\r\n\t\t\taddress[] memory winnersAddresses = new address[](2);\r\n\t\t\tuint256[] memory prizes = new uint256[](2);\r\n\t\t\tuint256 halfPrize = prizePool / 2;\r\n\t\t\tfor (uint256 i = 0; i < 2; i++) {\r\n\t\t\t\twinnersAddresses[i] = predictions[i].predictor;\r\n\t\t\t\tprizes[i] = halfPrize;\r\n\t\t\t\tAddress.sendValue(payable(winnersAddresses[i]), prizes[i]);\r\n\t\t\t}\r\n\t\t\temit TournamentResolved(currentRound, winnersAddresses, prizes);\r\n\t\t\troundWinners = winnersAddresses;\r\n\t\t\t_resetTournament();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tWinnerInfo[3] memory winners;\r\n\t\tuint256 winnersCount = 0;\r\n\r\n\t\t// Identifica i potenziali vincitori e calcola la differenza di prezzo\r\n\t\tfor (uint256 i = 0; i < predictions.length; i++) {\r\n\t\t\tuint256 difference = predictions[i].predictedPrice > actualPriceUint\r\n\t\t\t\t? predictions[i].predictedPrice - actualPriceUint\r\n\t\t\t\t: actualPriceUint - predictions[i].predictedPrice;\r\n\r\n\t\t\tif (winnersCount < 3) {\r\n\t\t\t\twinners[winnersCount] = WinnerInfo(i, difference, true);\r\n\t\t\t\twinnersCount++;\r\n\t\t\t} else {\r\n\t\t\t\t// Trova e sostituisci il vincitore con la differenza maggiore se ce n'è uno con una differenza minore\r\n\t\t\t\tuint256 maxDiffIndex = 0;\r\n\t\t\t\tuint256 maxDiff = winners[0].difference;\r\n\t\t\t\tfor (uint256 j = 1; j < 3; j++) {\r\n\t\t\t\t\tif (winners[j].difference > maxDiff) {\r\n\t\t\t\t\t\tmaxDiff = winners[j].difference;\r\n\t\t\t\t\t\tmaxDiffIndex = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (difference < maxDiff) {\r\n\t\t\t\t\twinners[maxDiffIndex] = WinnerInfo(i, difference, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tuint256 keeperFee = (prizePool * keeperPercentageFee) / 10000;\r\n\t\tprizePool -= keeperFee;\r\n\t\tAddress.sendValue(payable(msg.sender), keeperFee);\r\n\r\n\t\tuint256 totalPrize = prizePool;\r\n\r\n\t\t// Preparazione degli array per i vincitori e i premi\r\n\t\taddress[] memory finalWinnersAddresses = new address[](winnersCount);\r\n\t\tuint256[] memory finalPrizeAmounts = new uint256[](winnersCount);\r\n\r\n\t\tfor (uint256 i = 0; i < winnersCount; i++) {\r\n\t\t\tfinalWinnersAddresses[i] = predictions[winners[i].index].predictor;\r\n\t\t\t// Distribuzione equa del premio\r\n\t\t\tfinalPrizeAmounts[i] = totalPrize / winnersCount;\r\n\t\t\tAddress.sendValue(\r\n\t\t\t\tpayable(finalWinnersAddresses[i]),\r\n\t\t\t\tfinalPrizeAmounts[i]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\troundWinners = finalWinnersAddresses;\r\n\r\n\t\temit TournamentResolved(\r\n\t\t\tcurrentRound,\r\n\t\t\tfinalWinnersAddresses,\r\n\t\t\tfinalPrizeAmounts\r\n\t\t);\r\n\t\t_resetTournament();\r\n\t}\r\n\r\n\tfunction getLastWinners() external view returns (address[] memory) {\r\n\t\treturn roundWinners;\r\n\t}\r\n\r\n\tfunction getPrice() public view returns (uint256) {\r\n\t\treturn oracle.getLatestPrice() * 1e10;\r\n\t}\r\n\r\n\tfunction getLatestRoundPrice() external view returns (uint256) {\r\n\t\treturn lastRoundPrice;\r\n\t}\r\n\r\n\tfunction getCurrentRound() external view returns (uint256) {\r\n\t\treturn currentRound;\r\n\t}\r\n\r\n\tfunction getMaxPartecipants() external view returns (uint256) {\r\n\t\treturn maxParticipants;\r\n\t}\r\n\r\n\tfunction getCurrentRoundPartecipants() external view returns (uint256) {\r\n\t\treturn predictions.length;\r\n\t}\r\n\r\n\tfunction getCurrentPricePool() external view returns (uint256) {\r\n\t\treturn prizePool;\r\n\t}\r\n\r\n\tfunction getNextVerificationTime() external view returns (uint256) {\r\n\t\treturn verificationTime;\r\n\t}\r\n\r\n\tfunction getPredictions() external view returns (Prediction[] memory) {\r\n\t\treturn predictions;\r\n\t}\r\n\r\n\tfunction getPartecipants() external view returns (address[] memory) {\r\n\t\taddress[] memory partecipants = new address[](predictions.length);\r\n\t\tfor (uint256 i = 0; i < predictions.length; i++) {\r\n\t\t\tpartecipants[i] = predictions[i].predictor;\r\n\t\t}\r\n\t\treturn partecipants;\r\n\t}\r\n\r\n\treceive() external payable {\r\n\t\tprizePool += msg.value;\r\n\t}\r\n}\r\n"},"contracts/core/BaluniAgent.sol":{"content":"pragma solidity 0.8.25;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\ninterface IRouter {\r\n\tfunction getBpsFee() external view returns (uint256);\r\n}\r\n\r\ncontract BaluniAgent {\r\n\tusing SafeERC20 for IERC20Metadata;\r\n\tusing Address for address payable;\r\n\r\n\taddress public owner;\r\n\taddress private router;\r\n\taddress internal constant _NATIVE =\r\n\t\t0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n\tIERC20Metadata internal constant WNATIVE =\r\n\t\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\r\n\r\n\tuint256 internal constant _DUST = 10;\r\n\tuint256 internal constant _BPS_BASE = 10000;\r\n\r\n\tstruct Call {\r\n\t\taddress to;\r\n\t\tuint256 value;\r\n\t\tbytes data;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Initializes a new instance of the Agent contract.\r\n\t * @param _owner The address of the contract owner.\r\n\t * @param _router The address of the router contract.\r\n\t * @notice Only the router contract can deploy this contract.\r\n\t */\r\n\tconstructor(address _owner, address _router) {\r\n\t\trequire(msg.sender == _router, \"Only Router\");\r\n\t\towner = _owner;\r\n\t\trouter = _router;\r\n\t}\r\n\r\n\tmodifier onlyRouter() {\r\n\t\trequire(msg.sender == router, \"Callable only by the router\");\r\n\t\t_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Executes a batch of calls and performs token operations.\r\n\t * @param calls An array of Call structs representing the calls to be executed.\r\n\t * @param tokensReturn An array of token addresses to return after the batch call.\r\n\t * @notice Only the router contract is allowed to execute this function.\r\n\t */\r\n\tfunction execute(\r\n\t\tCall[] calldata calls,\r\n\t\taddress[] calldata tokensReturn\r\n\t) external onlyRouter {\r\n\t\tfor (uint i = 0; i < calls.length; i++) {\r\n\t\t\t(bool success, ) = calls[i].to.call{ value: calls[i].value }(\r\n\t\t\t\tcalls[i].data\r\n\t\t\t);\r\n\t\t\trequire(success, \"Batch call failed\");\r\n\t\t}\r\n\t\t_chargeFees(tokensReturn);\r\n\t\t_returnTokens(tokensReturn);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the address of the router contract.\r\n\t * @return The address of the router contract.\r\n\t */\r\n\tfunction getRouter() public view returns (address) {\r\n\t\treturn router;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Internal function to charge fees for the tokens returned.\r\n\t * @param tokensReturn The array of tokens to charge fees for.\r\n\t */\r\n\tfunction _chargeFees(address[] calldata tokensReturn) internal {\r\n\t\tuint256 amount;\r\n\t\tuint256 bpsFee = IRouter(router).getBpsFee();\r\n\t\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\r\n\t\t\taddress token = tokensReturn[i];\r\n\t\t\tif (token == _NATIVE) {\r\n\t\t\t\t// Use the native balance for amount calculation as wrap will be executed later\r\n\t\t\t\tamount = (address(this).balance * bpsFee) / _BPS_BASE;\r\n\t\t\t\t// send to router\r\n\t\t\t\tpayable(router).sendValue(amount);\r\n\t\t\t} else {\r\n\t\t\t\tuint256 balance = IERC20(token).balanceOf(address(this));\r\n\t\t\t\tamount = (balance * bpsFee) / _BPS_BASE;\r\n\t\t\t\tIERC20Metadata(token).safeTransfer(router, amount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Internal function to return tokens to the owner.\r\n\t * @param tokensReturn The array of tokens to return.\r\n\t */\r\n\tfunction _returnTokens(address[] calldata tokensReturn) internal {\r\n\t\tuint256 tokensReturnLength = tokensReturn.length;\r\n\t\tif (tokensReturnLength > 0) {\r\n\t\t\tfor (uint256 i; i < tokensReturnLength; ) {\r\n\t\t\t\taddress token = tokensReturn[i];\r\n\t\t\t\tif (token == _NATIVE) {\r\n\t\t\t\t\tif (address(this).balance > 0) {\r\n\t\t\t\t\t\tpayable(owner).sendValue(address(this).balance);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuint256 balance = IERC20Metadata(token).balanceOf(\r\n\t\t\t\t\t\taddress(this)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (balance > _DUST) {\r\n\t\t\t\t\t\tIERC20Metadata(token).safeTransfer(owner, balance);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunchecked {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"},"contracts/core/BaluniRouter.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\n\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\r\n\r\nimport \"./BaluniAgent.sol\";\r\nimport \"./BaluniStake.sol\";\r\n\r\ninterface IOracle {\r\n\tfunction getRate(\r\n\t\tIERC20 srcToken,\r\n\t\tIERC20 dstToken,\r\n\t\tbool useWrappers\r\n\t) external view returns (uint256 weightedRate);\r\n}\r\n\r\ncontract BaluniRouter is Ownable, ERC20, BaluniStake {\r\n\tusing SafeERC20 for IERC20;\r\n\r\n\tuint256 public constant _MAX_BPS_FEE = 500;\r\n\r\n\tuint256 public _BPS_FEE = 30; // 0.3%.\r\n\tuint256 public _BPS_BASE = 10000;\r\n\tuint256 public _BPS_LIQUIDATE_FEE = 30; // 0.3%.\r\n\r\n\tusing EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n\tEnumerableSet.AddressSet private tokens;\r\n\r\n\tIERC20 public constant USDC =\r\n\t\tIERC20(0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174);\r\n\tIERC20Metadata internal constant WNATIVE =\r\n\t\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\r\n\tIOracle public immutable oracle =\r\n\t\tIOracle(0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8); // 1inch Spot Aggregator\r\n\tISwapRouter public immutable uniswapRouter =\r\n\t\tISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\r\n\tIUniswapV3Factory public immutable uniswapFactory =\r\n\t\tIUniswapV3Factory(0x1F98431c8aD98523631AE4a59f267346ea31F984);\r\n\r\n\tmapping(address => BaluniAgent) public userAgents;\r\n\tmapping(address => uint256) public tokenBalanceMap;\r\n\r\n\tevent AgentCreated(address user, address agent);\r\n\tevent Execute(\r\n\t\taddress user,\r\n\t\tBaluniAgent.Call[] calls,\r\n\t\taddress[] tokensReturn\r\n\t);\r\n\tevent Burn(address user, uint256 value);\r\n\tevent Mint(address user, uint256 value);\r\n\tevent ChangeBpsFee(uint256 newFee);\r\n\tevent ChangeLiquidateFee(uint256 newFee);\r\n\r\n\tmodifier validTimestamp(uint256 _timestamp) {\r\n\t\trequire(\r\n\t\t\t_timestamp <= block.timestamp,\r\n\t\t\t\"Timestamp too far in the future\"\r\n\t\t);\r\n\t\trequire(\r\n\t\t\t_timestamp >= block.timestamp - 1 days,\r\n\t\t\t\"Timestamp too far in the past\"\r\n\t\t);\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor()\r\n\t\tOwnable(msg.sender)\r\n\t\tERC20(\"Baluni\", \"BALUNI\")\r\n\t\tBaluniStake(address(this), address(this))\r\n\t{\r\n\t\t_mint(address(this), 1 ether);\r\n\t\t_stakeToContract(address(this), 1 ether);\r\n\t\t_updateRewards(address(this));\r\n\r\n\t\tEnumerableSet.add(tokens, address(USDC));\r\n\t}\r\n\r\n\tfunction _stakeToContract(address _to, uint256 _amount) internal {\r\n\t\tbalanceStakedOf[_to] += _amount;\r\n\t\tstakingSupply += _amount;\r\n\t\tstakeTimestamp[msg.sender] = block.timestamp;\r\n\r\n\t\tif (stakingSupply > 0) {\r\n\t\t\tupdateRewardIndex(_amount);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction listAllTokens() external view returns (address[] memory) {\r\n\t\treturn tokens.values();\r\n\t}\r\n\r\n\tfunction getAgentAddress(address _user) public view returns (address) {\r\n\t\tbytes32 salt = keccak256(abi.encodePacked(_user));\r\n\t\tbytes memory bytecode = getBytecode(_user);\r\n\t\tbytes32 hash = keccak256(\r\n\t\t\tabi.encodePacked(\r\n\t\t\t\tbytes1(0xff),\r\n\t\t\t\taddress(this),\r\n\t\t\t\tsalt,\r\n\t\t\t\tkeccak256(bytecode)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn address(uint160(uint256(hash)));\r\n\t}\r\n\r\n\tfunction getOrCreateAgent(address user) private returns (BaluniAgent) {\r\n\t\tbytes32 salt = keccak256(abi.encodePacked(user));\r\n\r\n\t\tif (address(userAgents[user]) == address(0)) {\r\n\t\t\tBaluniAgent agent = new BaluniAgent{ salt: salt }(\r\n\t\t\t\tuser,\r\n\t\t\t\taddress(this)\r\n\t\t\t);\r\n\t\t\trequire(\r\n\t\t\t\tisContract(address(agent)),\r\n\t\t\t\t\"Agent creation failed, not a contract\"\r\n\t\t\t);\r\n\t\t\tuserAgents[user] = agent;\r\n\t\t\temit AgentCreated(user, address(agent));\r\n\t\t}\r\n\t\treturn userAgents[user];\r\n\t}\r\n\r\n\tfunction isContract(address _addr) private view returns (bool) {\r\n\t\tuint32 size;\r\n\t\tassembly {\r\n\t\t\tsize := extcodesize(_addr)\r\n\t\t}\r\n\t\treturn size > 0;\r\n\t}\r\n\r\n\tfunction getBytecode(address _owner) internal view returns (bytes memory) {\r\n\t\trequire(_owner != address(0), \"Owner address cannot be zero.\");\r\n\t\tbytes memory bytecode = type(BaluniAgent).creationCode;\r\n\t\treturn abi.encodePacked(bytecode, abi.encode(_owner, address(this)));\r\n\t}\r\n\r\n\tfunction getBpsFee() external view returns (uint256) {\r\n\t\treturn _BPS_FEE;\r\n\t}\r\n\r\n\tfunction changeBpsFee(uint256 _newFee) external onlyOwner {\r\n\t\t_BPS_FEE = _newFee;\r\n\t\temit ChangeBpsFee(_newFee);\r\n\t}\r\n\r\n\tfunction changeBpsLiquidateFee(uint256 _newFee) external onlyOwner {\r\n\t\t_BPS_LIQUIDATE_FEE = _newFee;\r\n\t\temit ChangeLiquidateFee(_newFee);\r\n\t}\r\n\r\n\tfunction execute(\r\n\t\tBaluniAgent.Call[] calldata calls,\r\n\t\taddress[] calldata tokensReturn\r\n\t) external nonReentrant {\r\n\t\tBaluniAgent agent = getOrCreateAgent(msg.sender);\r\n\t\tbool[] memory isTokenNew = new bool[](tokensReturn.length);\r\n\r\n\t\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\r\n\t\t\tisTokenNew[i] = !EnumerableSet.contains(tokens, tokensReturn[i]);\r\n\t\t}\r\n\r\n\t\tagent.execute(calls, tokensReturn);\r\n\r\n\t\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\r\n\t\t\taddress token = tokensReturn[i];\r\n\t\t\taddress poolNative3000 = uniswapFactory.getPool(\r\n\t\t\t\ttoken,\r\n\t\t\t\taddress(WNATIVE),\r\n\t\t\t\t3000\r\n\t\t\t);\r\n\t\t\taddress poolNative500 = uniswapFactory.getPool(\r\n\t\t\t\ttoken,\r\n\t\t\t\taddress(WNATIVE),\r\n\t\t\t\t500\r\n\t\t\t);\r\n\t\t\tbool poolExist = poolNative3000 != address(0) ||\r\n\t\t\t\tpoolNative500 != address(0);\r\n\r\n\t\t\tif (isTokenNew[i] && poolExist) {\r\n\t\t\t\tEnumerableSet.add(tokens, token);\r\n\t\t\t}\r\n\r\n\t\t\tif (!poolExist) {\r\n\t\t\t\tuint256 balance = IERC20(token).balanceOf(address(this));\r\n\t\t\t\tIERC20(token).transfer(msg.sender, balance);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction liquidate(address token) external nonReentrant {\r\n\t\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n\t\taddress pool = uniswapFactory.getPool(token, address(USDC), 3000);\r\n\t\tsecureApproval(token, address(uniswapRouter), totalERC20Balance);\r\n\r\n\t\tif (pool != address(0)) {\r\n\t\t\tuint256 singleSwapResult = singleSwap(\r\n\t\t\t\ttoken,\r\n\t\t\t\taddress(USDC),\r\n\t\t\t\ttotalERC20Balance,\r\n\t\t\t\taddress(this)\r\n\t\t\t);\r\n\t\t\trequire(singleSwapResult > 0, \"Swap Failed, Try Burn()\");\r\n\t\t} else {\r\n\t\t\tuint256 amountOutHop = multiHopSwap(\r\n\t\t\t\ttoken,\r\n\t\t\t\taddress(WNATIVE),\r\n\t\t\t\taddress(USDC),\r\n\t\t\t\ttotalERC20Balance,\r\n\t\t\t\taddress(this)\r\n\t\t\t);\r\n\t\t\trequire(amountOutHop > 0, \"Swap Failed, Try Burn()\");\r\n\t\t}\r\n\r\n\t\tuint256 reward = claimTo(address(this), msg.sender);\r\n\t\tuint256 mintAmount = (totalSupply() * _BPS_LIQUIDATE_FEE) / 10000;\r\n\r\n\t\t_mint(address(this), mintAmount);\r\n\t\t_stakeToContract(address(this), mintAmount);\r\n\r\n\t\temit Mint(address(this), mintAmount);\r\n\t\temit RewardClaimed(msg.sender, reward);\r\n\t}\r\n\r\n\tfunction burn(uint256 burnAmount) external nonReentrant {\r\n\t\trequire(balanceOf(msg.sender) >= burnAmount, \"Insufficient BAL\");\r\n\r\n\t\tfor (uint256 i; i < tokens.length(); i++) {\r\n\t\t\taddress token = tokens.at(i);\r\n\t\t\tuint256 totalBaluni = totalSupply();\r\n\t\t\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n\r\n\t\t\tif (totalERC20Balance == 0 || token == address(this)) continue;\r\n\r\n\t\t\tuint256 decimals = IERC20Metadata(token).decimals();\r\n\t\t\tuint256 share = _calculateTokenShare(\r\n\t\t\t\ttotalBaluni,\r\n\t\t\t\ttotalERC20Balance,\r\n\t\t\t\tburnAmount,\r\n\t\t\t\tdecimals\r\n\t\t\t);\r\n\r\n\t\t\tIERC20(token).transfer(msg.sender, share);\r\n\t\t}\r\n\t\t_burn(msg.sender, burnAmount);\r\n\t\temit Burn(msg.sender, burnAmount);\r\n\t}\r\n\r\n\tfunction burnTokensAndSwapToUSDC(uint256 burnAmount) external nonReentrant {\r\n\t\trequire(burnAmount > 0, \"Insufficient BAL\");\r\n\r\n\t\tfor (uint256 i; i < tokens.length(); i++) {\r\n\t\t\taddress token = tokens.at(i);\r\n\t\t\tuint256 totalBaluni = totalSupply();\r\n\t\t\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n\r\n\t\t\tif (totalERC20Balance > 0 == false) continue;\r\n\t\t\tif (token == address(this)) continue;\r\n\r\n\t\t\tuint256 decimals = IERC20Metadata(token).decimals();\r\n\t\t\tuint256 burnAmountToken = _calculateTokenShare(\r\n\t\t\t\ttotalBaluni,\r\n\t\t\t\ttotalERC20Balance,\r\n\t\t\t\tburnAmount,\r\n\t\t\t\tdecimals\r\n\t\t\t);\r\n\r\n\t\t\tif (token == address(USDC)) {\r\n\t\t\t\tIERC20(USDC).transfer(msg.sender, burnAmountToken);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\taddress pool = uniswapFactory.getPool(token, address(USDC), 3000);\r\n\t\t\tsecureApproval(token, address(uniswapRouter), burnAmountToken);\r\n\r\n\t\t\tif (pool != address(0)) {\r\n\t\t\t\tsingleSwap(token, address(USDC), burnAmountToken, msg.sender);\r\n\t\t\t} else {\r\n\t\t\t\tuint256 amountOutHop = multiHopSwap(\r\n\t\t\t\t\ttoken,\r\n\t\t\t\t\taddress(WNATIVE),\r\n\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\tburnAmountToken,\r\n\t\t\t\t\tmsg.sender\r\n\t\t\t\t);\r\n\t\t\t\trequire(amountOutHop > 0, \"Swap Failed, Try Burn()\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t_burn(msg.sender, burnAmount);\r\n\r\n\t\temit Burn(msg.sender, burnAmount);\r\n\t}\r\n\r\n\tfunction calculateNetAmountAfterFee(\r\n\t\tuint256 _amount\r\n\t) internal view returns (uint256) {\r\n\t\tuint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) /\r\n\t\t\t_BPS_BASE;\r\n\t\treturn amountInWithFee;\r\n\t}\r\n\r\n\tfunction getUnitPrice() public view returns (uint256) {\r\n\t\treturn _calculateBaluniToUsdc(1e18);\r\n\t}\r\n\r\n\tfunction mintUSDC(\r\n\t\tuint256 balAmountToMint\r\n\t) public nonReentrant returns (uint256) {\r\n\t\tuint256 totalUSDValuation = _totalValuation();\r\n\t\tuint256 totalBalSupply = totalSupply();\r\n\t\tuint256 usdcRequired = (balAmountToMint * totalUSDValuation) /\r\n\t\t\ttotalBalSupply;\r\n\t\tuint256 balance = IERC20(USDC).balanceOf(msg.sender);\r\n\t\trequire(totalBalSupply > 0, \"Total BALUNI supply cannot be zero\");\r\n\t\trequire(balance >= usdcRequired / 1e12, \"USDC balance is insufficient\");\r\n\r\n\t\tuint256 allowed = USDC.allowance(msg.sender, address(this));\r\n\t\trequire(allowed >= usdcRequired / 1e12, \"Check the token allowance\");\r\n\r\n\t\tUSDC.safeTransferFrom(msg.sender, address(this), usdcRequired / 1e12);\r\n\r\n\t\tuint256 amountAfterFee = calculateNetAmountAfterFee(balAmountToMint);\r\n\t\tuint256 netBalAmountToMint = balAmountToMint - amountAfterFee;\r\n\r\n\t\t_mint(address(this), netBalAmountToMint);\r\n\t\temit Mint(address(this), netBalAmountToMint);\r\n\r\n\t\tif (stakingSupply > 0) {\r\n\t\t\tupdateRewardIndex(netBalAmountToMint);\r\n\t\t}\r\n\r\n\t\t_mint(msg.sender, amountAfterFee);\r\n\t\temit Mint(msg.sender, amountAfterFee);\r\n\r\n\t\treturn netBalAmountToMint;\r\n\t}\r\n\r\n\tfunction mintERC20(\r\n\t\tuint256 balAmountToMint,\r\n\t\taddress asset\r\n\t) public nonReentrant returns (uint256) {\r\n\t\tuint256 totalUSDValuation = _totalValuation();\r\n\t\tuint256 totalBalSupply = totalSupply();\r\n\t\trequire(totalBalSupply > 0, \"Total BALUNI supply cannot be zero\");\r\n\r\n\t\tuint256 usdcRequired = (balAmountToMint * totalUSDValuation) /\r\n\t\t\ttotalBalSupply;\r\n\r\n\t\tuint8 decimalA = IERC20Metadata(address(USDC)).decimals();\r\n\t\tuint8 decimalB = IERC20Metadata(asset).decimals();\r\n\r\n\t\tuint256 assetRate = oracle.getRate(IERC20(USDC), IERC20(asset), false);\r\n\t\tuint256 required;\r\n\r\n\t\tif (decimalB > decimalA) {\r\n\t\t\tuint256 rate = assetRate / 10 ** (decimalB - decimalA);\r\n\t\t\trequired = (usdcRequired / rate) * 1e18;\r\n\t\t\trequired = required / 10 ** (decimalB - decimalA);\r\n\t\t} else {\r\n\t\t\tuint256 rate = assetRate * 10 ** (decimalA - decimalB);\r\n\t\t\trequired = (usdcRequired / rate) * 1e18;\r\n\t\t\trequired = required / 10 ** (decimalA - decimalB);\r\n\t\t}\r\n\r\n\t\tuint256 balance = IERC20(asset).balanceOf(msg.sender);\r\n\r\n\t\trequire(balance >= required, \"Balance is insufficient\");\r\n\r\n\t\tuint256 allowed = IERC20(asset).allowance(msg.sender, address(this));\r\n\r\n\t\trequire(allowed >= required, \"Check the token allowance\");\r\n\r\n\t\tIERC20(asset).safeTransferFrom(msg.sender, address(this), required);\r\n\r\n\t\tuint256 amountAfterFee = calculateNetAmountAfterFee(balAmountToMint);\r\n\t\tuint256 netBalAmountToMint = balAmountToMint - amountAfterFee;\r\n\r\n\t\t_mint(address(this), netBalAmountToMint);\r\n\t\temit Mint(address(this), netBalAmountToMint);\r\n\r\n\t\tif (stakingSupply > 0) {\r\n\t\t\tupdateRewardIndex(netBalAmountToMint);\r\n\t\t}\r\n\r\n\t\t_mint(msg.sender, amountAfterFee);\r\n\t\temit Mint(msg.sender, amountAfterFee);\r\n\r\n\t\treturn amountAfterFee;\r\n\t}\r\n\r\n\tfunction _calculateBaluniToUsdc(\r\n\t\tuint256 amount\r\n\t) internal view returns (uint256 shareUSDC) {\r\n\t\tuint256 totalBaluni = totalSupply();\r\n\t\trequire(totalBaluni > 0, \"Total supply cannot be zero\");\r\n\t\tuint256 totalUSDC = _totalValuation();\r\n\t\tshareUSDC = (amount * totalUSDC) / totalBaluni;\r\n\t}\r\n\r\n\tfunction _calculateTokenShare(\r\n\t\tuint256 totalBaluni,\r\n\t\tuint256 totalERC20Balance,\r\n\t\tuint256 amount,\r\n\t\tuint256 tokenDecimals\r\n\t) internal pure returns (uint256) {\r\n\t\trequire(totalBaluni > 0, \"Total supply cannot be zero\");\r\n\t\trequire(tokenDecimals <= 18, \"Token decimals should be <= 18\");\r\n\r\n\t\tuint256 baluniAdjusted;\r\n\r\n\t\tif (tokenDecimals < 18) {\r\n\t\t\t// Adjust totalBaluni to the same scale as totalERC20Balance\r\n\t\t\tbaluniAdjusted = totalBaluni * (10 ** (18 - tokenDecimals));\r\n\t\t} else {\r\n\t\t\tbaluniAdjusted = totalBaluni;\r\n\t\t}\r\n\r\n\t\t// Now both baluniAdjusted and totalERC20Balance are aligned to the same decimal scale\r\n\t\treturn (amount * totalERC20Balance) / baluniAdjusted;\r\n\t}\r\n\r\n\tfunction _calculateTokenValuation(\r\n\t\tuint256 amount,\r\n\t\taddress token\r\n\t) internal view returns (uint256 valuation) {\r\n\t\tuint256 rate;\r\n\t\tuint8 tokenDecimal = IERC20Metadata(token).decimals();\r\n\t\tuint8 usdcDecimal = IERC20Metadata(address(USDC)).decimals();\r\n\r\n\t\tif (token == address(USDC)) return amount * 1e12;\r\n\r\n\t\ttry\r\n\t\t\tIOracle(oracle).getRate(IERC20(token), IERC20(USDC), false)\r\n\t\treturns (uint256 _rate) {\r\n\t\t\trate = _rate;\r\n\t\t} catch {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tuint256 factor = (10 ** (tokenDecimal - usdcDecimal));\r\n\r\n\t\trate = ((amount * factor) * (rate * factor)) / 1e18;\r\n\r\n\t\treturn rate;\r\n\t}\r\n\r\n\tfunction totalValuation() external view returns (uint256) {\r\n\t\treturn _totalValuation();\r\n\t}\r\n\r\n\tfunction _totalValuation() internal view returns (uint256) {\r\n\t\tuint256 _totalV;\r\n\r\n\t\tfor (uint256 i; i < tokens.length(); i++) {\r\n\t\t\taddress token = tokens.at(i);\r\n\t\t\tuint256 balance = IERC20(token).balanceOf(address(this));\r\n\t\t\tuint256 tokenBalanceValuation = _calculateTokenValuation(\r\n\t\t\t\tbalance,\r\n\t\t\t\ttoken\r\n\t\t\t);\r\n\t\t\t_totalV += tokenBalanceValuation;\r\n\t\t}\r\n\r\n\t\treturn _totalV;\r\n\t}\r\n\r\n\tfunction getUSDCShareValue(uint256 amount) external view returns (uint256) {\r\n\t\treturn _calculateBaluniToUsdc(amount);\r\n\t}\r\n\r\n\tfunction performArbitrage() external nonReentrant {\r\n\t\tuint256 unitPrice = getUnitPrice();\r\n\t\tuint256 marketPrice = oracle.getRate(\r\n\t\t\tIERC20(address(this)),\r\n\t\t\tIERC20(address(USDC)),\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tuint256 baluniBalance = balanceOf(address(this));\r\n\t\tuint256 usdcBalance = IERC20(USDC).balanceOf(address(this));\r\n\r\n\t\tif (marketPrice * 1e12 < unitPrice) {\r\n\t\t\tuint256 amountToBuy = (usdcBalance * 1e12) /\r\n\t\t\t\t(marketPrice * 1e12) /\r\n\t\t\t\t1e18;\r\n\r\n\t\t\tif (amountToBuy > baluniBalance) amountToBuy = baluniBalance;\r\n\r\n\t\t\tsecureApproval(address(USDC), address(uniswapRouter), usdcBalance);\r\n\r\n\t\t\tuint256 amountOut = singleSwap(\r\n\t\t\t\taddress(USDC),\r\n\t\t\t\taddress(this),\r\n\t\t\t\tusdcBalance,\r\n\t\t\t\taddress(this)\r\n\t\t\t);\r\n\t\t\trequire(\r\n\t\t\t\tamountOut >= amountToBuy,\r\n\t\t\t\t\"Arbitrage failed: insufficient output amount\"\r\n\t\t\t);\r\n\t\t\tsecureApproval(address(this), address(uniswapRouter), amountOut);\r\n\t\t\tsingleSwap(address(this), address(USDC), amountOut, address(this));\r\n\t\t\trequire(\r\n\t\t\t\tIERC20(USDC).balanceOf(address(this)) > usdcBalance,\r\n\t\t\t\t\"Arbitrage did not profit\"\r\n\t\t\t);\r\n\t\t} else if (marketPrice * 1e12 > unitPrice) {\r\n\t\t\tuint256 amountToSell = baluniBalance;\r\n\t\t\tsecureApproval(address(this), address(uniswapRouter), amountToSell);\r\n\t\t\tuint256 amountOutUSDC = singleSwap(\r\n\t\t\t\taddress(this),\r\n\t\t\t\taddress(USDC),\r\n\t\t\t\tamountToSell,\r\n\t\t\t\taddress(this)\r\n\t\t\t);\r\n\t\t\trequire(\r\n\t\t\t\tamountOutUSDC > usdcBalance,\r\n\t\t\t\t\"Arbitrage failed: insufficient output amount\"\r\n\t\t\t);\r\n\t\t\tsecureApproval(\r\n\t\t\t\taddress(USDC),\r\n\t\t\t\taddress(uniswapRouter),\r\n\t\t\t\tamountOutUSDC\r\n\t\t\t);\r\n\t\t\tsingleSwap(\r\n\t\t\t\taddress(USDC),\r\n\t\t\t\taddress(this),\r\n\t\t\t\tamountOutUSDC,\r\n\t\t\t\taddress(this)\r\n\t\t\t);\r\n\t\t\trequire(\r\n\t\t\t\tbalanceOf(address(this)) > baluniBalance,\r\n\t\t\t\t\"Arbitrage did not profit\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction singleSwap(\r\n\t\taddress token0,\r\n\t\taddress token1,\r\n\t\tuint256 tokenBalance,\r\n\t\taddress receiver\r\n\t) private returns (uint256 amountOut) {\r\n\t\tISwapRouter.ExactInputSingleParams memory params = ISwapRouter\r\n\t\t\t.ExactInputSingleParams({\r\n\t\t\t\ttokenIn: token0,\r\n\t\t\t\ttokenOut: token1,\r\n\t\t\t\tfee: 3000,\r\n\t\t\t\trecipient: address(receiver),\r\n\t\t\t\tdeadline: block.timestamp,\r\n\t\t\t\tamountIn: tokenBalance,\r\n\t\t\t\tamountOutMinimum: 0,\r\n\t\t\t\tsqrtPriceLimitX96: 0\r\n\t\t\t});\r\n\r\n\t\treturn uniswapRouter.exactInputSingle(params);\r\n\t}\r\n\r\n\tfunction multiHopSwap(\r\n\t\taddress token0,\r\n\t\taddress token1,\r\n\t\taddress token2,\r\n\t\tuint256 tokenBalance,\r\n\t\taddress receiver\r\n\t) private returns (uint256 amountOut) {\r\n\t\tISwapRouter.ExactInputParams memory params = ISwapRouter\r\n\t\t\t.ExactInputParams({\r\n\t\t\t\tpath: abi.encodePacked(\r\n\t\t\t\t\ttoken0,\r\n\t\t\t\t\tuint24(3000),\r\n\t\t\t\t\ttoken1,\r\n\t\t\t\t\tuint24(3000),\r\n\t\t\t\t\ttoken2\r\n\t\t\t\t),\r\n\t\t\t\trecipient: address(receiver),\r\n\t\t\t\tdeadline: block.timestamp,\r\n\t\t\t\tamountIn: tokenBalance,\r\n\t\t\t\tamountOutMinimum: 0\r\n\t\t\t});\r\n\t\treturn uniswapRouter.exactInput(params);\r\n\t}\r\n\r\n\tfunction secureApproval(\r\n\t\taddress token,\r\n\t\taddress spender,\r\n\t\tuint256 amount\r\n\t) internal {\r\n\t\tIERC20 _token = IERC20(token);\r\n\t\tuint256 currentAllowance = _token.allowance(address(this), spender);\r\n\r\n\t\tif (currentAllowance != amount) {\r\n\t\t\tif (currentAllowance != 0) {\r\n\t\t\t\t_token.approve(spender, 0);\r\n\t\t\t}\r\n\r\n\t\t\t_token.approve(spender, amount);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction rebalance(\r\n\t\taddress[] calldata assets,\r\n\t\tuint256[] calldata weights\r\n\t) external returns (bool) {\r\n\t\tuint256 totalValue;\r\n\r\n\t\tfor (uint256 i; i < assets.length; i++) {\r\n\t\t\tuint256 balance = IERC20(assets[i]).balanceOf(msg.sender);\r\n\t\t\tuint256 tokenValuation = _calculateTokenValuation(\r\n\t\t\t\tbalance,\r\n\t\t\t\tassets[i]\r\n\t\t\t);\r\n\t\t\ttotalValue += tokenValuation;\r\n\t\t}\r\n\r\n\t\tuint256[] memory overweightVaults = new uint256[](assets.length);\r\n\t\tuint256[] memory overweightAmounts = new uint256[](assets.length);\r\n\t\tuint256[] memory underweightVaults = new uint256[](assets.length);\r\n\t\tuint256[] memory underweightAmounts = new uint256[](assets.length);\r\n\r\n\t\tuint256 overweightVaultsLength;\r\n\t\tuint256 underweightVaultsLength;\r\n\t\tuint256 overweightAmount;\r\n\t\tuint256 overweightPercent;\r\n\t\tuint256 targetWeight;\r\n\t\tuint256 currentWeight;\r\n\t\tuint256 totalActiveWeight;\r\n\r\n\t\tbool overweight;\r\n\r\n\t\tfor (uint256 i; i < assets.length; i++) {\r\n\t\t\tuint256 balance = IERC20(assets[i]).balanceOf(msg.sender);\r\n\t\t\tuint256 decimals = IERC20Metadata(assets[i]).decimals();\r\n\t\t\tuint256 tokensTotalValue = _calculateTokenValuation(\r\n\t\t\t\tbalance,\r\n\t\t\t\tassets[i]\r\n\t\t\t);\r\n\t\t\ttargetWeight = weights[i];\r\n\t\t\tcurrentWeight = tokensTotalValue / (10000) / (totalValue);\r\n\t\t\toverweight = currentWeight > targetWeight;\r\n\t\t\toverweightPercent = overweight\r\n\t\t\t\t? currentWeight - (targetWeight)\r\n\t\t\t\t: targetWeight - (currentWeight);\r\n\t\t\tuint256 price = _calculateTokenValuation(\r\n\t\t\t\t1 * 10 ** decimals,\r\n\t\t\t\tassets[i]\r\n\t\t\t);\r\n\t\t\tif (overweight) {\r\n\t\t\t\toverweightAmount = (overweightPercent * (totalValue)) / (10000);\r\n\t\t\t\toverweightAmount = (overweightAmount * (1e18)) / (price);\r\n\t\t\t\toverweightVaults[overweightVaultsLength] = i;\r\n\t\t\t\toverweightAmounts[overweightVaultsLength] = overweightAmount;\r\n\t\t\t\toverweightVaultsLength++;\r\n\t\t\t} else if (!overweight) {\r\n\t\t\t\ttotalActiveWeight += overweightPercent;\r\n\t\t\t\toverweightAmount = overweightPercent;\r\n\t\t\t\t// overweightAmount = overweightPercent.mul(totalValue).div(10000);\r\n\t\t\t\tunderweightVaults[underweightVaultsLength] = i;\r\n\t\t\t\tunderweightAmounts[underweightVaultsLength] = overweightAmount;\r\n\t\t\t\tunderweightVaultsLength++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Resize overweightVaults and overweightAmounts to the actual overweighted vaults\r\n\t\toverweightVaults = _resize(overweightVaults, overweightVaultsLength);\r\n\t\toverweightAmounts = _resize(overweightAmounts, overweightVaultsLength);\r\n\t\t// Resize overweightVaults and overweightAmounts to the actual overweighted vaults\r\n\t\tunderweightVaults = _resize(underweightVaults, underweightVaultsLength);\r\n\t\tunderweightAmounts = _resize(\r\n\t\t\tunderweightAmounts,\r\n\t\t\tunderweightVaultsLength\r\n\t\t);\r\n\r\n\t\tfor (uint256 i; i < overweightVaults.length; i++) {\r\n\t\t\tif (overweightAmounts[i] > 0) {\r\n\t\t\t\tIERC20(address(assets[overweightVaults[i]])).transferFrom(\r\n\t\t\t\t\tmsg.sender,\r\n\t\t\t\t\taddress(this),\r\n\t\t\t\t\toverweightAmounts[i]\r\n\t\t\t\t);\r\n\t\t\t\taddress pool = uniswapFactory.getPool(\r\n\t\t\t\t\taddress(assets[overweightVaults[i]]),\r\n\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\t3000\r\n\t\t\t\t);\r\n\t\t\t\tsecureApproval(\r\n\t\t\t\t\taddress(assets[overweightVaults[i]]),\r\n\t\t\t\t\taddress(uniswapRouter),\r\n\t\t\t\t\toverweightAmounts[i]\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (pool != address(0)) {\r\n\t\t\t\t\tuint singleSwapResult = singleSwap(\r\n\t\t\t\t\t\taddress(assets[overweightVaults[i]]),\r\n\t\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\t\toverweightAmounts[i],\r\n\t\t\t\t\t\tunderweightVaults.length == 0\r\n\t\t\t\t\t\t\t? msg.sender\r\n\t\t\t\t\t\t\t: address(this)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuint256 amountOutHop = multiHopSwap(\r\n\t\t\t\t\t\taddress(assets[overweightVaults[i]]),\r\n\t\t\t\t\t\taddress(WNATIVE),\r\n\t\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\t\toverweightAmounts[i],\r\n\t\t\t\t\t\tunderweightVaults.length == 0\r\n\t\t\t\t\t\t\t? msg.sender\r\n\t\t\t\t\t\t\t: address(this)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (uint256 i; i < underweightVaults.length; i++) {\r\n\t\t\tif (underweightAmounts[i] > 0) {\r\n\t\t\t\tuint256 rebaseActiveWgt = (underweightAmounts[i] * (10000)) /\r\n\t\t\t\t\t(totalActiveWeight);\r\n\r\n\t\t\t\tuint256 rebBuyQty = (rebaseActiveWgt *\r\n\t\t\t\t\tIERC20(USDC).balanceOf(msg.sender) *\r\n\t\t\t\t\t1e12) / (10000);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\trebBuyQty > 0 &&\r\n\t\t\t\t\trebBuyQty <= IERC20(USDC).balanceOf(msg.sender) * 1e12\r\n\t\t\t\t) {\r\n\t\t\t\t\taddress pool = uniswapFactory.getPool(\r\n\t\t\t\t\t\taddress(assets[underweightVaults[i]]),\r\n\t\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\t\t3000\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsecureApproval(\r\n\t\t\t\t\t\taddress(assets[underweightVaults[i]]),\r\n\t\t\t\t\t\taddress(uniswapRouter),\r\n\t\t\t\t\t\tunderweightAmounts[i] / 1e12\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (pool != address(0)) {\r\n\t\t\t\t\t\tuint singleSwapResult = singleSwap(\r\n\t\t\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\t\t\taddress(assets[underweightVaults[i]]),\r\n\t\t\t\t\t\t\tunderweightAmounts[i] / 1e12,\r\n\t\t\t\t\t\t\taddress(this)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tuint256 amountToTransfer = calculateNetAmountAfterFee(\r\n\t\t\t\t\t\t\tsingleSwapResult\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tIERC20(USDC).transfer(msg.sender, amountToTransfer);\r\n\r\n\t\t\t\t\t\trequire(\r\n\t\t\t\t\t\t\tsingleSwapResult > 0,\r\n\t\t\t\t\t\t\t\"Swap Failed, Try Burn()\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuint256 amountOutHop = multiHopSwap(\r\n\t\t\t\t\t\t\taddress(USDC),\r\n\t\t\t\t\t\t\taddress(WNATIVE),\r\n\t\t\t\t\t\t\taddress(assets[underweightVaults[i]]),\r\n\t\t\t\t\t\t\tunderweightAmounts[i] / 1e12,\r\n\t\t\t\t\t\t\taddress(this)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tuint256 amountToTransfer = calculateNetAmountAfterFee(\r\n\t\t\t\t\t\t\tamountOutHop\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tIERC20(USDC).transfer(msg.sender, amountToTransfer);\r\n\r\n\t\t\t\t\t\trequire(amountOutHop > 0, \"Swap Failed\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _resize(\r\n\t\tuint256[] memory arr,\r\n\t\tuint256 size\r\n\t) internal pure returns (uint256[] memory) {\r\n\t\tuint256[] memory ret = new uint256[](size);\r\n\t\tfor (uint256 i; i < size; i++) {\r\n\t\t\tret[i] = arr[i];\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n}\r\n"},"contracts/core/BaluniStake.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\ncontract BaluniStake is ReentrancyGuard {\r\n\tIERC20 public immutable stakingToken;\r\n\tIERC20 public immutable rewardToken;\r\n\r\n\tmapping(address => uint256) public balanceStakedOf;\r\n\tmapping(address => uint256) public stakeTimestamp;\r\n\tuint256 public stakingSupply;\r\n\r\n\tuint256 private constant MULTIPLIER = 1e18;\r\n\tuint256 private rewardIndex;\r\n\tmapping(address => uint256) private rewardIndexOf;\r\n\tmapping(address => uint256) private earned;\r\n\r\n\tuint256 private constant STAKING_PERIOD = 365 days;\r\n\r\n\tevent RewardClaimed(address indexed user, uint256 amount);\r\n\tevent Staked(address indexed user, uint256 amount);\r\n\tevent Unstaked(address indexed user, uint256 amount);\r\n\r\n\tconstructor(address _stakingToken, address _rewardToken) {\r\n\t\trequire(\r\n\t\t\t_stakingToken != address(0) && _rewardToken != address(0),\r\n\t\t\t\"Invalid token address\"\r\n\t\t);\r\n\t\tstakingToken = IERC20(_stakingToken);\r\n\t\trewardToken = IERC20(_rewardToken);\r\n\t}\r\n\r\n\tfunction updateRewardIndex(uint256 reward) internal {\r\n\t\tif (stakingSupply > 0) {\r\n\t\t\trewardIndex += (reward * MULTIPLIER) / stakingSupply;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateRewardIndexPublic(uint256 reward) public {\r\n\t\trequire(reward > 0, \"Reward must be positive\");\r\n\t\trequire(stakingSupply > 0, \"No staking supply to distribute rewards\");\r\n\t\trewardToken.transferFrom(msg.sender, address(this), reward);\r\n\t\tupdateRewardIndex(reward);\r\n\t}\r\n\r\n\tfunction _calculateRewards(address account) private view returns (uint256) {\r\n\t\tuint256 timeStaked = block.timestamp - stakeTimestamp[account];\r\n\t\ttimeStaked = timeStaked > STAKING_PERIOD ? STAKING_PERIOD : timeStaked;\r\n\t\tuint256 shares = balanceStakedOf[account];\r\n\t\tuint256 rewardDelta = rewardIndex - rewardIndexOf[account];\r\n\t\treturn\r\n\t\t\t(shares * timeStaked * rewardDelta) / MULTIPLIER / STAKING_PERIOD;\r\n\t}\r\n\r\n\tfunction calculateRewardsEarned(\r\n\t\taddress account\r\n\t) external view returns (uint256) {\r\n\t\treturn earned[account] + _calculateRewards(account);\r\n\t}\r\n\r\n\tfunction _updateRewards(address account) internal {\r\n\t\tuint256 rewards = _calculateRewards(account);\r\n\t\tearned[account] += rewards;\r\n\t\trewardIndexOf[account] = rewardIndex;\r\n\t}\r\n\r\n\tfunction stake(uint256 amount) external nonReentrant {\r\n\t\t_updateRewards(msg.sender);\r\n\t\tbalanceStakedOf[msg.sender] += amount;\r\n\t\tstakingSupply += amount;\r\n\t\tstakeTimestamp[msg.sender] = block.timestamp;\r\n\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\r\n\t\temit Staked(msg.sender, amount);\r\n\t}\r\n\r\n\tfunction unstake(uint256 amount) external nonReentrant {\r\n\t\t_updateRewards(msg.sender);\r\n\t\tuint256 currentBalance = balanceStakedOf[msg.sender];\r\n\t\trequire(currentBalance >= amount, \"Insufficient balance to unstake\");\r\n\t\tbalanceStakedOf[msg.sender] = currentBalance - amount;\r\n\t\tstakingSupply -= amount;\r\n\t\tstakingToken.transfer(msg.sender, amount);\r\n\t\temit Unstaked(msg.sender, amount);\r\n\t}\r\n\r\n\tfunction claim() external nonReentrant returns (uint256) {\r\n\t\t_updateRewards(msg.sender);\r\n\t\tuint256 reward = earned[msg.sender];\r\n\t\trequire(reward > 0, \"No rewards to claim\");\r\n\t\tearned[msg.sender] = 0;\r\n\t\trewardToken.transfer(msg.sender, reward);\r\n\t\temit RewardClaimed(msg.sender, reward);\r\n\t\treturn reward;\r\n\t}\r\n\r\n\tfunction claimTo(\r\n\t\taddress staker,\r\n\t\taddress _to\r\n\t) public nonReentrant returns (uint256) {\r\n\t\t_updateRewards(staker);\r\n\t\tuint256 reward = earned[staker];\r\n\t\trequire(reward > 0, \"No rewards to claim\");\r\n\t\tearned[staker] = 0;\r\n\t\trewardToken.transfer(_to, reward);\r\n\t\temit RewardClaimed(_to, reward);\r\n\t\treturn reward;\r\n\t}\r\n}\r\n"},"contracts/helpers/Oracle.sol":{"content":"import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract Oracle {\r\n\tAggregatorV3Interface internal priceFeed;\r\n\r\n\tconstructor(address _priceFeedAddress) {\r\n\t\tpriceFeed = AggregatorV3Interface(_priceFeedAddress);\r\n\t}\r\n\r\n\tfunction getLatestPrice() public view returns (uint256) {\r\n\t\t(, int256 price, , , ) = priceFeed.latestRoundData();\r\n\t\t// Assumiamo che il prezzo sia sempre positivo\r\n\t\treturn uint256(price); // Adatta questa moltiplicazione in base alla tua necessità\r\n\t}\r\n}\r\n"},"contracts/interfaces/IVault.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IVault {\r\n\tfunction token() external view returns (address);\r\n\r\n\tfunction underlying() external view returns (address);\r\n\r\n\tfunction name() external view returns (string memory);\r\n\r\n\tfunction symbol() external view returns (string memory);\r\n\r\n\tfunction decimals() external view returns (uint8);\r\n\r\n\tfunction controller() external view returns (address);\r\n\r\n\tfunction governance() external view returns (address);\r\n\r\n\tfunction getPricePerFullShare() external view returns (uint256);\r\n\r\n\tfunction deposit(uint256, address) external;\r\n\r\n\tfunction depositAll() external;\r\n\r\n\tfunction withdraw(uint256, address, address, uint256) external;\r\n\r\n\tfunction withdrawAll() external;\r\n}\r\n"},"contracts/interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IWETH {\r\n\tfunction deposit() external payable;\r\n\r\n\tfunction transfer(address to, uint value) external returns (bool);\r\n\r\n\tfunction withdraw(uint) external;\r\n}\r\n"},"contracts/libs/FullMath.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/// @title Contains 512-bit math functions\r\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\r\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\r\nlibrary FullMath {\r\n\t/// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n\t/// @param a The multiplicand\r\n\t/// @param b The multiplier\r\n\t/// @param denominator The divisor\r\n\t/// @return result The 256-bit result\r\n\t/// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\r\n\tfunction mulDiv(\r\n\t\tuint256 a,\r\n\t\tuint256 b,\r\n\t\tuint256 denominator\r\n\t) internal pure returns (uint256 result) {\r\n\t\tunchecked {\r\n\t\t\t// 512-bit multiply [prod1 prod0] = a * b\r\n\t\t\t// Compute the product mod 2**256 and mod 2**256 - 1\r\n\t\t\t// then use the Chinese Remainder Theorem to reconstruct\r\n\t\t\t// the 512 bit result. The result is stored in two 256\r\n\t\t\t// variables such that product = prod1 * 2**256 + prod0\r\n\t\t\tuint256 prod0 = a * b; // Least significant 256 bits of the product\r\n\t\t\tuint256 prod1; // Most significant 256 bits of the product\r\n\t\t\tassembly {\r\n\t\t\t\tlet mm := mulmod(a, b, not(0))\r\n\t\t\t\tprod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure the result is less than 2**256.\r\n\t\t\t// Also prevents denominator == 0\r\n\t\t\trequire(denominator > prod1);\r\n\r\n\t\t\t// Handle non-overflow cases, 256 by 256 division\r\n\t\t\tif (prod1 == 0) {\r\n\t\t\t\tassembly {\r\n\t\t\t\t\tresult := div(prod0, denominator)\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\t///////////////////////////////////////////////\r\n\t\t\t// 512 by 256 division.\r\n\t\t\t///////////////////////////////////////////////\r\n\r\n\t\t\t// Make division exact by subtracting the remainder from [prod1 prod0]\r\n\t\t\t// Compute remainder using mulmod\r\n\t\t\tuint256 remainder;\r\n\t\t\tassembly {\r\n\t\t\t\tremainder := mulmod(a, b, denominator)\r\n\t\t\t}\r\n\t\t\t// Subtract 256 bit number from 512 bit number\r\n\t\t\tassembly {\r\n\t\t\t\tprod1 := sub(prod1, gt(remainder, prod0))\r\n\t\t\t\tprod0 := sub(prod0, remainder)\r\n\t\t\t}\r\n\r\n\t\t\t// Factor powers of two out of denominator\r\n\t\t\t// Compute largest power of two divisor of denominator.\r\n\t\t\t// Always >= 1.\r\n\t\t\tuint256 twos = (0 - denominator) & denominator;\r\n\t\t\t// Divide denominator by power of two\r\n\t\t\tassembly {\r\n\t\t\t\tdenominator := div(denominator, twos)\r\n\t\t\t}\r\n\r\n\t\t\t// Divide [prod1 prod0] by the factors of two\r\n\t\t\tassembly {\r\n\t\t\t\tprod0 := div(prod0, twos)\r\n\t\t\t}\r\n\t\t\t// Shift in bits from prod1 into prod0. For this we need\r\n\t\t\t// to flip `twos` such that it is 2**256 / twos.\r\n\t\t\t// If twos is zero, then it becomes one\r\n\t\t\tassembly {\r\n\t\t\t\ttwos := add(div(sub(0, twos), twos), 1)\r\n\t\t\t}\r\n\t\t\tprod0 |= prod1 * twos;\r\n\r\n\t\t\t// Invert denominator mod 2**256\r\n\t\t\t// Now that denominator is an odd number, it has an inverse\r\n\t\t\t// modulo 2**256 such that denominator * inv = 1 mod 2**256.\r\n\t\t\t// Compute the inverse by starting with a seed that is correct\r\n\t\t\t// correct for four bits. That is, denominator * inv = 1 mod 2**4\r\n\t\t\tuint256 inv = (3 * denominator) ^ 2;\r\n\t\t\t// Now use Newton-Raphson iteration to improve the precision.\r\n\t\t\t// Thanks to Hensel's lifting lemma, this also works in modular\r\n\t\t\t// arithmetic, doubling the correct bits in each step.\r\n\t\t\tinv *= 2 - denominator * inv; // inverse mod 2**8\r\n\t\t\tinv *= 2 - denominator * inv; // inverse mod 2**16\r\n\t\t\tinv *= 2 - denominator * inv; // inverse mod 2**32\r\n\t\t\tinv *= 2 - denominator * inv; // inverse mod 2**64\r\n\t\t\tinv *= 2 - denominator * inv; // inverse mod 2**128\r\n\t\t\tinv *= 2 - denominator * inv; // inverse mod 2**256\r\n\r\n\t\t\t// Because the division is now exact we can divide by multiplying\r\n\t\t\t// with the modular inverse of denominator. This will give us the\r\n\t\t\t// correct result modulo 2**256. Since the preconditions guarantee\r\n\t\t\t// that the outcome is less than 2**256, this is the final result.\r\n\t\t\t// We don't need to compute the high bits of the result and prod1\r\n\t\t\t// is no longer required.\r\n\t\t\tresult = prod0 * inv;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n\t/// @param a The multiplicand\r\n\t/// @param b The multiplier\r\n\t/// @param denominator The divisor\r\n\t/// @return result The 256-bit result\r\n\tfunction mulDivRoundingUp(\r\n\t\tuint256 a,\r\n\t\tuint256 b,\r\n\t\tuint256 denominator\r\n\t) internal pure returns (uint256 result) {\r\n\t\tunchecked {\r\n\t\t\tresult = mulDiv(a, b, denominator);\r\n\t\t\tif (mulmod(a, b, denominator) > 0) {\r\n\t\t\t\trequire(result < type(uint256).max);\r\n\t\t\t\tresult++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":400},"viaIR":true,"evmVersion":"london","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/core/BaluniAgent.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/core/BaluniAgent.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/helpers/Oracle.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/helpers/Oracle.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.25;\"\n--> contracts/helpers/Oracle.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.25;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/helpers/Oracle.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/core/BaluniRouter.sol:739:6:\n    |\n739 | \t\t\t\t\tuint singleSwapResult = singleSwap(\n    | \t\t\t\t\t^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":21802,"file":"contracts/core/BaluniRouter.sol","start":21781},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/core/BaluniRouter.sol:748:6:\n    |\n748 | \t\t\t\t\tuint256 amountOutHop = multiHopSwap(\n    | \t\t\t\t\t^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":22044,"file":"contracts/core/BaluniRouter.sol","start":22024},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"301:8:0","nodeType":"VariableDeclaration","scope":31,"src":"294:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"294:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:25:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"344:7:0","nodeType":"VariableDeclaration","scope":31,"src":"337:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"337:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"360:6:0","nodeType":"VariableDeclaration","scope":31,"src":"353:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"353:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"376:9:0","nodeType":"VariableDeclaration","scope":31,"src":"368:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"395:9:0","nodeType":"VariableDeclaration","scope":31,"src":"387:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"413:15:0","nodeType":"VariableDeclaration","scope":31,"src":"406:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"406:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"336:93:0"},"scope":45,"src":"267:163:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"443:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"458:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"503:7:0","nodeType":"VariableDeclaration","scope":44,"src":"496:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"496:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"519:6:0","nodeType":"VariableDeclaration","scope":44,"src":"512:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"512:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"535:9:0","nodeType":"VariableDeclaration","scope":44,"src":"527:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"554:9:0","nodeType":"VariableDeclaration","scope":44,"src":"546:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"572:15:0","nodeType":"VariableDeclaration","scope":44,"src":"565:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"495:93:0"},"scope":45,"src":"434:155:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:534:0","usedErrors":[],"usedEvents":[]}],"src":"32:560:0"},"id":0},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1562],"Ownable":[193]},"id":194,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":49,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":194,"sourceUnit":1563,"src":"128:45:1","symbolAliases":[{"foreign":{"id":48,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"136:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":51,"name":"Context","nameLocations":["692:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"692:7:1"},"id":52,"nodeType":"InheritanceSpecifier","src":"692:7:1"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"175:487:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":193,"linearizedBaseContracts":[193,1562],"name":"Ownable","nameLocation":"681:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":54,"mutability":"mutable","name":"_owner","nameLocation":"722:6:1","nodeType":"VariableDeclaration","scope":193,"src":"706:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"735:85:1","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":59,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:1","nodeType":"ErrorDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"account","nameLocation":"866:7:1","nodeType":"VariableDeclaration","scope":59,"src":"858:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:1"},"src":"825:50:1"},{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"881:82:1","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":64,"name":"OwnableInvalidOwner","nameLocation":"974:19:1","nodeType":"ErrorDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"owner","nameLocation":"1002:5:1","nodeType":"VariableDeclaration","scope":64,"src":"994:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:1"},"src":"968:41:1"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":70,"name":"OwnershipTransferred","nameLocation":"1021:20:1","nodeType":"EventDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:1","nodeType":"VariableDeclaration","scope":70,"src":"1042:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:1","nodeType":"VariableDeclaration","scope":70,"src":"1073:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:1"},"src":"1015:84:1"},{"body":{"id":95,"nodeType":"Block","src":"1259:153:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":76,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1273:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":78,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{}}},"id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":90,"nodeType":"IfStatement","src":"1269:95:1","trueBody":{"id":89,"nodeType":"Block","src":"1301:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":85,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":84,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:1","typeDescriptions":{}}},"id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":82,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"1322:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":88,"nodeType":"RevertStatement","src":"1315:38:1"}]}},{"expression":{"arguments":[{"id":92,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1392:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":91,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1373:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":94,"nodeType":"ExpressionStatement","src":"1373:32:1"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"1105:115:1","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":96,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:1","nodeType":"VariableDeclaration","scope":96,"src":"1237:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:1"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"1259:0:1"},"scope":193,"src":"1225:187:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":103,"nodeType":"Block","src":"1521:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":99,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1531:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"ExpressionStatement","src":"1531:13:1"},{"id":102,"nodeType":"PlaceholderStatement","src":"1554:1:1"}]},"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"1418:77:1","text":" @dev Throws if called by any account other than the owner."},"id":104,"name":"onlyOwner","nameLocation":"1509:9:1","nodeType":"ModifierDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"1518:2:1"},"src":"1500:62:1","virtual":false,"visibility":"internal"},{"body":{"id":112,"nodeType":"Block","src":"1693:30:1","statements":[{"expression":{"id":110,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1710:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":109,"id":111,"nodeType":"Return","src":"1703:13:1"}]},"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"1568:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":113,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:1","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[],"src":"1652:2:1"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":113,"src":"1684:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:1"},"scope":193,"src":"1638:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":129,"nodeType":"Block","src":"1841:117:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":117,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1855:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":119,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1866:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":128,"nodeType":"IfStatement","src":"1851:101:1","trueBody":{"id":127,"nodeType":"Block","src":"1880:72:1","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":123,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1928:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1901:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":126,"nodeType":"RevertStatement","src":"1894:47:1"}]}}]},"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"1729:62:1","text":" @dev Throws if the sender is not the owner."},"id":130,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:1","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"1816:2:1"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"1841:0:1"},"scope":193,"src":"1796:162:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":143,"nodeType":"Block","src":"2347:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:1","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":136,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2357:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"2357:30:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"1964:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":144,"implemented":true,"kind":"function","modifiers":[{"id":134,"kind":"modifierInvocation","modifierName":{"id":133,"name":"onlyOwner","nameLocations":["2337:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"2337:9:1"},"nodeType":"ModifierInvocation","src":"2337:9:1"}],"name":"renounceOwnership","nameLocation":"2302:17:1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"2319:2:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"2347:0:1"},"scope":193,"src":"2293:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":171,"nodeType":"Block","src":"2613:145:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":152,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2627:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:1","typeDescriptions":{}}},"id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":166,"nodeType":"IfStatement","src":"2623:91:1","trueBody":{"id":165,"nodeType":"Block","src":"2651:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:1","typeDescriptions":{}}},"id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":158,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2672:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"RevertStatement","src":"2665:38:1"}]}},{"expression":{"arguments":[{"id":168,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2742:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":167,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2723:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"2723:28:1"}]},"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2400:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":172,"implemented":true,"kind":"function","modifiers":[{"id":150,"kind":"modifierInvocation","modifierName":{"id":149,"name":"onlyOwner","nameLocations":["2603:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"2603:9:1"},"nodeType":"ModifierInvocation","src":"2603:9:1"}],"name":"transferOwnership","nameLocation":"2552:17:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:1","nodeType":"VariableDeclaration","scope":172,"src":"2570:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"2613:0:1"},"scope":193,"src":"2543:215:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":191,"nodeType":"Block","src":"2975:124:1","statements":[{"assignments":[179],"declarations":[{"constant":false,"id":179,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:1","nodeType":"VariableDeclaration","scope":191,"src":"2985:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":181,"initialValue":{"id":180,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3004:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:1"},{"expression":{"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":182,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3020:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":183,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"3029:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":185,"nodeType":"ExpressionStatement","src":"3020:17:1"},{"eventCall":{"arguments":[{"id":187,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"3073:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":188,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"3083:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"3052:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":190,"nodeType":"EmitStatement","src":"3047:45:1"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"2764:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":192,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:1","nodeType":"VariableDeclaration","scope":192,"src":"2940:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:1"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"2975:0:1"},"scope":193,"src":"2912:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":194,"src":"663:2438:1","usedErrors":[59,64],"usedEvents":[70]}],"src":"102:3000:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[927]},"id":198,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":195,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":197,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":198,"sourceUnit":928,"src":"131:49:2","symbolAliases":[{"foreign":{"id":196,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[334],"IERC20Errors":[239],"IERC721Errors":[287]},"id":335,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":199,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"138:139:3","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":239,"linearizedBaseContracts":[239],"name":"IERC20Errors","nameLocation":"288:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"307:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":209,"name":"ERC20InsufficientBalance","nameLocation":"627:24:3","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"660:6:3","nodeType":"VariableDeclaration","scope":209,"src":"652:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"balance","nameLocation":"676:7:3","nodeType":"VariableDeclaration","scope":209,"src":"668:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"needed","nameLocation":"693:6:3","nodeType":"VariableDeclaration","scope":209,"src":"685:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:3"},"src":"621:80:3"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"707:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":214,"name":"ERC20InvalidSender","nameLocation":"870:18:3","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"897:6:3","nodeType":"VariableDeclaration","scope":214,"src":"889:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:3"},"src":"864:41:3"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"911:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":219,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:3","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:3","nodeType":"VariableDeclaration","scope":219,"src":"1102:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:3"},"src":"1075:45:3"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"1126:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":228,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:3","nodeType":"ErrorDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"spender","nameLocation":"1517:7:3","nodeType":"VariableDeclaration","scope":228,"src":"1509:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:3","nodeType":"VariableDeclaration","scope":228,"src":"1526:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"needed","nameLocation":"1553:6:3","nodeType":"VariableDeclaration","scope":228,"src":"1545:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:3"},"src":"1476:85:3"},{"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"1567:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":233,"name":"ERC20InvalidApprover","nameLocation":"1752:20:3","nodeType":"ErrorDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"approver","nameLocation":"1781:8:3","nodeType":"VariableDeclaration","scope":233,"src":"1773:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:3"},"src":"1746:45:3"},{"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"1797:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":238,"name":"ERC20InvalidSpender","nameLocation":"2003:19:3","nodeType":"ErrorDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"spender","nameLocation":"2031:7:3","nodeType":"VariableDeclaration","scope":238,"src":"2023:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:3"},"src":"1997:43:3"}],"scope":335,"src":"278:1764:3","usedErrors":[209,214,219,228,233,238],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"2044:141:3","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":287,"linearizedBaseContracts":[287],"name":"IERC721Errors","nameLocation":"2196:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"2216:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":245,"name":"ERC721InvalidOwner","nameLocation":"2446:18:3","nodeType":"ErrorDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"owner","nameLocation":"2473:5:3","nodeType":"VariableDeclaration","scope":245,"src":"2465:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:3"},"src":"2440:40:3"},{"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"2486:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":250,"name":"ERC721NonexistentToken","nameLocation":"2629:22:3","nodeType":"ErrorDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:3","nodeType":"VariableDeclaration","scope":250,"src":"2652:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:3"},"src":"2623:46:3"},{"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"2675:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":259,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:3","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"sender","nameLocation":"3004:6:3","nodeType":"VariableDeclaration","scope":259,"src":"2996:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:3","nodeType":"VariableDeclaration","scope":259,"src":"3012:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"owner","nameLocation":"3037:5:3","nodeType":"VariableDeclaration","scope":259,"src":"3029:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:3"},"src":"2969:75:3"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"3050:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":264,"name":"ERC721InvalidSender","nameLocation":"3213:19:3","nodeType":"ErrorDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"sender","nameLocation":"3241:6:3","nodeType":"VariableDeclaration","scope":264,"src":"3233:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:3"},"src":"3207:42:3"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"3255:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":269,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:3","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:3","nodeType":"VariableDeclaration","scope":269,"src":"3447:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:3"},"src":"3419:46:3"},{"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"3471:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":276,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:3","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"operator","nameLocation":"3764:8:3","nodeType":"VariableDeclaration","scope":276,"src":"3756:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:3","nodeType":"VariableDeclaration","scope":276,"src":"3774:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:3"},"src":"3723:68:3"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3797:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":281,"name":"ERC721InvalidApprover","nameLocation":"3982:21:3","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"approver","nameLocation":"4012:8:3","nodeType":"VariableDeclaration","scope":281,"src":"4004:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:3"},"src":"3976:46:3"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4028:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":286,"name":"ERC721InvalidOperator","nameLocation":"4236:21:3","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"operator","nameLocation":"4266:8:3","nodeType":"VariableDeclaration","scope":286,"src":"4258:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:3"},"src":"4230:46:3"}],"scope":335,"src":"2186:2092:3","usedErrors":[245,250,259,264,269,276,281,286],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"4280:143:3","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":334,"linearizedBaseContracts":[334],"name":"IERC1155Errors","nameLocation":"4434:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"4455:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":299,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:3","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"sender","nameLocation":"4862:6:3","nodeType":"VariableDeclaration","scope":299,"src":"4854:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"balance","nameLocation":"4878:7:3","nodeType":"VariableDeclaration","scope":299,"src":"4870:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"needed","nameLocation":"4895:6:3","nodeType":"VariableDeclaration","scope":299,"src":"4887:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:3","nodeType":"VariableDeclaration","scope":299,"src":"4903:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:3"},"src":"4821:99:3"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"4926:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":304,"name":"ERC1155InvalidSender","nameLocation":"5089:20:3","nodeType":"ErrorDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"sender","nameLocation":"5118:6:3","nodeType":"VariableDeclaration","scope":304,"src":"5110:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:3"},"src":"5083:43:3"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"5132:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":309,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:3","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:3","nodeType":"VariableDeclaration","scope":309,"src":"5325:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:3"},"src":"5296:47:3"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"5349:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":316,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:3","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"operator","nameLocation":"5653:8:3","nodeType":"VariableDeclaration","scope":316,"src":"5645:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"owner","nameLocation":"5671:5:3","nodeType":"VariableDeclaration","scope":316,"src":"5663:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:3"},"src":"5610:68:3"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5684:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":321,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:3","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"approver","nameLocation":"5900:8:3","nodeType":"VariableDeclaration","scope":321,"src":"5892:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:3"},"src":"5863:47:3"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"5916:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":326,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:3","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"operator","nameLocation":"6155:8:3","nodeType":"VariableDeclaration","scope":326,"src":"6147:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:3"},"src":"6118:47:3"},{"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"6171:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":333,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:3","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:3","nodeType":"VariableDeclaration","scope":333,"src":"6488:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:3","nodeType":"VariableDeclaration","scope":333,"src":"6507:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:3"},"src":"6456:73:3"}],"scope":335,"src":"4424:2107:3","usedErrors":[299,304,309,316,321,326,333],"usedEvents":[]}],"src":"112:6420:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1562],"ERC20":[849],"IERC20":[927],"IERC20Errors":[239],"IERC20Metadata":[953]},"id":850,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":336,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":850,"sourceUnit":928,"src":"131:36:4","symbolAliases":[{"foreign":{"id":337,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":850,"sourceUnit":954,"src":"168:63:4","symbolAliases":[{"foreign":{"id":339,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":850,"sourceUnit":1563,"src":"232:48:4","symbolAliases":[{"foreign":{"id":341,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":850,"sourceUnit":335,"src":"281:65:4","symbolAliases":[{"foreign":{"id":343,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":346,"name":"Context","nameLocations":["1428:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"1428:7:4"},"id":347,"nodeType":"InheritanceSpecifier","src":"1428:7:4"},{"baseName":{"id":348,"name":"IERC20","nameLocations":["1437:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"1437:6:4"},"id":349,"nodeType":"InheritanceSpecifier","src":"1437:6:4"},{"baseName":{"id":350,"name":"IERC20Metadata","nameLocations":["1445:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":953,"src":"1445:14:4"},"id":351,"nodeType":"InheritanceSpecifier","src":"1445:14:4"},{"baseName":{"id":352,"name":"IERC20Errors","nameLocations":["1461:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"1461:12:4"},"id":353,"nodeType":"InheritanceSpecifier","src":"1461:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"348:1052:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":849,"linearizedBaseContracts":[849,239,953,927,1562],"name":"ERC20","nameLocation":"1419:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":357,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:4","nodeType":"VariableDeclaration","scope":849,"src":"1480:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":356,"keyName":"account","keyNameLocation":"1496:7:4","keyType":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":363,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:4","nodeType":"VariableDeclaration","scope":849,"src":"1540:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":362,"keyName":"account","keyNameLocation":"1556:7:4","keyType":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":361,"keyName":"spender","keyNameLocation":"1583:7:4","keyType":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":365,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:4","nodeType":"VariableDeclaration","scope":849,"src":"1630:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":367,"mutability":"mutable","name":"_name","nameLocation":"1680:5:4","nodeType":"VariableDeclaration","scope":849,"src":"1665:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":366,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":369,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:4","nodeType":"VariableDeclaration","scope":849,"src":"1691:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":368,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":385,"nodeType":"Block","src":"1952:57:4","statements":[{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1962:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":378,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1970:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":380,"nodeType":"ExpressionStatement","src":"1962:13:4"},{"expression":{"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":381,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"1985:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":382,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1995:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":384,"nodeType":"ExpressionStatement","src":"1985:17:4"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1720:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":386,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"name_","nameLocation":"1922:5:4","nodeType":"VariableDeclaration","scope":386,"src":"1908:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":371,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:4","nodeType":"VariableDeclaration","scope":386,"src":"1929:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:4"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"1952:0:4"},"scope":849,"src":"1896:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[940],"body":{"id":394,"nodeType":"Block","src":"2134:29:4","statements":[{"expression":{"id":392,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2151:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":391,"id":393,"nodeType":"Return","src":"2144:12:4"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"2015:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:4","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"2087:2:4"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"2119:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":389,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:4"},"scope":849,"src":"2074:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[946],"body":{"id":403,"nodeType":"Block","src":"2338:31:4","statements":[{"expression":{"id":401,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2355:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":400,"id":402,"nodeType":"Return","src":"2348:14:4"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2169:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:4","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2291:2:4"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2323:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":398,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:4"},"scope":849,"src":"2276:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[952],"body":{"id":412,"nodeType":"Block","src":"3058:26:4","statements":[{"expression":{"hexValue":"3138","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":409,"id":411,"nodeType":"Return","src":"3068:9:4"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2375:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:4","nodeType":"FunctionDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"3019:2:4"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"3051:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":407,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:4"},"scope":849,"src":"3002:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":421,"nodeType":"Block","src":"3205:36:4","statements":[{"expression":{"id":419,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"3222:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":420,"nodeType":"Return","src":"3215:19:4"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"3090:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:4","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"3164:2:4"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"3196:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:4"},"scope":849,"src":"3144:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[884],"body":{"id":434,"nodeType":"Block","src":"3373:42:4","statements":[{"expression":{"baseExpression":{"id":430,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3390:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":432,"indexExpression":{"id":431,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3400:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":429,"id":433,"nodeType":"Return","src":"3383:25:4"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3247:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:4","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"account","nameLocation":"3326:7:4","nodeType":"VariableDeclaration","scope":435,"src":"3318:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:4"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"3364:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:4"},"scope":849,"src":"3299:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[894],"body":{"id":458,"nodeType":"Block","src":"3685:103:4","statements":[{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"owner","nameLocation":"3703:5:4","nodeType":"VariableDeclaration","scope":458,"src":"3695:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":449,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":447,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3711:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:4"},{"expression":{"arguments":[{"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3743:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3750:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3754:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":450,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3733:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"3733:27:4"},{"expression":{"hexValue":"74727565","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":444,"id":457,"nodeType":"Return","src":"3770:11:4"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"3421:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":459,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:4","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"to","nameLocation":"3636:2:4","nodeType":"VariableDeclaration","scope":459,"src":"3628:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"value","nameLocation":"3648:5:4","nodeType":"VariableDeclaration","scope":459,"src":"3640:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:4"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":459,"src":"3679:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":442,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:4"},"scope":849,"src":"3610:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[904],"body":{"id":475,"nodeType":"Block","src":"3935:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":469,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3952:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":471,"indexExpression":{"id":470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3964:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":473,"indexExpression":{"id":472,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3971:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":468,"id":474,"nodeType":"Return","src":"3945:34:4"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"3794:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":476,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:4","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"3873:5:4","nodeType":"VariableDeclaration","scope":476,"src":"3865:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"spender","nameLocation":"3888:7:4","nodeType":"VariableDeclaration","scope":476,"src":"3880:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:4"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"3926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:4"},"scope":849,"src":"3846:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[914],"body":{"id":499,"nodeType":"Block","src":"4372:107:4","statements":[{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"owner","nameLocation":"4390:5:4","nodeType":"VariableDeclaration","scope":499,"src":"4382:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":490,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4398:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:4"},{"expression":{"arguments":[{"id":492,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4429:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4436:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4445:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":491,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[740,800],"referencedDeclaration":740,"src":"4420:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"4420:31:4"},{"expression":{"hexValue":"74727565","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":485,"id":498,"nodeType":"Return","src":"4461:11:4"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"3992:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:4","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"spender","nameLocation":"4318:7:4","nodeType":"VariableDeclaration","scope":500,"src":"4310:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"value","nameLocation":"4335:5:4","nodeType":"VariableDeclaration","scope":500,"src":"4327:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:4"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"4366:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:4"},"scope":849,"src":"4293:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[926],"body":{"id":531,"nodeType":"Block","src":"5132:151:4","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"spender","nameLocation":"5150:7:4","nodeType":"VariableDeclaration","scope":531,"src":"5142:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":516,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":514,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5160:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:4"},{"expression":{"arguments":[{"id":518,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5198:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5204:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5213:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5182:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"5182:37:4"},{"expression":{"arguments":[{"id":524,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5239:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5245:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5249:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":523,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5229:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"5229:26:4"},{"expression":{"hexValue":"74727565","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":511,"id":530,"nodeType":"Return","src":"5265:11:4"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"4485:549:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":532,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:4","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"from","nameLocation":"5069:4:4","nodeType":"VariableDeclaration","scope":532,"src":"5061:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"to","nameLocation":"5083:2:4","nodeType":"VariableDeclaration","scope":532,"src":"5075:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"value","nameLocation":"5095:5:4","nodeType":"VariableDeclaration","scope":532,"src":"5087:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:4"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"5126:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:4"},"scope":849,"src":"5039:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":578,"nodeType":"Block","src":"5725:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5739:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:4","typeDescriptions":{}}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"IfStatement","src":"5735:86:4","trueBody":{"id":555,"nodeType":"Block","src":"5759:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:4","typeDescriptions":{}}},"id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":548,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"5780:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"RevertStatement","src":"5773:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"5834:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:4","typeDescriptions":{}}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":571,"nodeType":"IfStatement","src":"5830:86:4","trueBody":{"id":570,"nodeType":"Block","src":"5852:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:4","typeDescriptions":{}}},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":563,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5873:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"RevertStatement","src":"5866:39:4"}]}},{"expression":{"arguments":[{"id":573,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5933:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"5939:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5943:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":572,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5925:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"5925:24:4"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"5289:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:4","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"from","nameLocation":"5683:4:4","nodeType":"VariableDeclaration","scope":579,"src":"5675:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"to","nameLocation":"5697:2:4","nodeType":"VariableDeclaration","scope":579,"src":"5689:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"value","nameLocation":"5709:5:4","nodeType":"VariableDeclaration","scope":579,"src":"5701:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:4"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"5725:0:4"},"scope":849,"src":"5656:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"6346:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6360:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:4","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":626,"nodeType":"Block","src":"6534:362:4","statements":[{"assignments":[601],"declarations":[{"constant":false,"id":601,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:4","nodeType":"VariableDeclaration","scope":626,"src":"6548:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":605,"initialValue":{"baseExpression":{"id":602,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6570:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":604,"indexExpression":{"id":603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6580:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":606,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6603:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"6617:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":616,"nodeType":"IfStatement","src":"6599:115:4","trueBody":{"id":615,"nodeType":"Block","src":"6624:90:4","statements":[{"errorCall":{"arguments":[{"id":610,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6674:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6680:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"6693:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":609,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"6649:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"RevertStatement","src":"6642:57:4"}]}},{"id":625,"nodeType":"UncheckedBlock","src":"6727:159:4","statements":[{"expression":{"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":617,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6834:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":619,"indexExpression":{"id":618,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6844:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6852:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"6866:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":624,"nodeType":"ExpressionStatement","src":"6834:37:4"}]}]},"id":627,"nodeType":"IfStatement","src":"6356:540:4","trueBody":{"id":599,"nodeType":"Block","src":"6380:148:4","statements":[{"expression":{"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":595,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"6496:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"6512:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":598,"nodeType":"ExpressionStatement","src":"6496:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":628,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"6910:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:4","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":647,"nodeType":"Block","src":"7125:206:4","statements":[{"id":646,"nodeType":"UncheckedBlock","src":"7139:182:4","statements":[{"expression":{"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":640,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"7284:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":642,"indexExpression":{"id":641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"7294:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ExpressionStatement","src":"7284:22:4"}]}]},"id":648,"nodeType":"IfStatement","src":"6906:425:4","trueBody":{"id":639,"nodeType":"Block","src":"6928:191:4","statements":[{"id":638,"nodeType":"UncheckedBlock","src":"6942:167:4","statements":[{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":634,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"7073:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7089:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":637,"nodeType":"ExpressionStatement","src":"7073:21:4"}]}]}},{"eventCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"7355:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"7361:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7365:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"7346:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"EmitStatement","src":"7341:30:4"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"5962:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:4","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"from","nameLocation":"6296:4:4","nodeType":"VariableDeclaration","scope":656,"src":"6288:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"to","nameLocation":"6310:2:4","nodeType":"VariableDeclaration","scope":656,"src":"6302:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"value","nameLocation":"6322:5:4","nodeType":"VariableDeclaration","scope":656,"src":"6314:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"6346:0:4"},"scope":849,"src":"6271:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"7777:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7791:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:4","typeDescriptions":{}}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":678,"nodeType":"IfStatement","src":"7787:91:4","trueBody":{"id":677,"nodeType":"Block","src":"7814:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:4","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"7835:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"RevertStatement","src":"7828:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:4","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7907:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7916:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":679,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7887:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"7887:35:4"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"7384:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":689,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:4","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"account","nameLocation":"7744:7:4","nodeType":"VariableDeclaration","scope":689,"src":"7736:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"value","nameLocation":"7761:5:4","nodeType":"VariableDeclaration","scope":689,"src":"7753:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:4"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"7777:0:4"},"scope":849,"src":"7721:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":721,"nodeType":"Block","src":"8303:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"8317:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:4","typeDescriptions":{}}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"nodeType":"IfStatement","src":"8313:89:4","trueBody":{"id":710,"nodeType":"Block","src":"8340:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:4","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":703,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"8361:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"RevertStatement","src":"8354:37:4"}]}},{"expression":{"arguments":[{"id":713,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"8419:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:4","typeDescriptions":{}}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8440:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"8411:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"8411:35:4"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"7935:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:4","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"account","nameLocation":"8270:7:4","nodeType":"VariableDeclaration","scope":722,"src":"8262:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"value","nameLocation":"8287:5:4","nodeType":"VariableDeclaration","scope":722,"src":"8279:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:4"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"8303:0:4"},"scope":849,"src":"8247:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"9063:54:4","statements":[{"expression":{"arguments":[{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"9082:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9089:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"9098:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":732,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[740,800],"referencedDeclaration":800,"src":"9073:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"9073:37:4"}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"8459:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:4","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"owner","nameLocation":"9015:5:4","nodeType":"VariableDeclaration","scope":740,"src":"9007:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"spender","nameLocation":"9030:7:4","nodeType":"VariableDeclaration","scope":740,"src":"9022:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"value","nameLocation":"9047:5:4","nodeType":"VariableDeclaration","scope":740,"src":"9039:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:4"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"9063:0:4"},"scope":849,"src":"8989:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"10047:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10061:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:4","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"10057:89:4","trueBody":{"id":765,"nodeType":"Block","src":"10082:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:4","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":758,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"10103:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"RevertStatement","src":"10096:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"10159:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:4","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":781,"nodeType":"IfStatement","src":"10155:90:4","trueBody":{"id":780,"nodeType":"Block","src":"10182:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:4","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"10203:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"RevertStatement","src":"10196:38:4"}]}},{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":782,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"10254:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":785,"indexExpression":{"id":783,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10266:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":786,"indexExpression":{"id":784,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"10273:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"10284:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ExpressionStatement","src":"10254:35:4"},{"condition":{"id":790,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"10303:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":798,"nodeType":"IfStatement","src":"10299:76:4","trueBody":{"id":797,"nodeType":"Block","src":"10314:61:4","statements":[{"eventCall":{"arguments":[{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10342:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"10349:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"10358:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":791,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10333:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"EmitStatement","src":"10328:36:4"}]}}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"9123:821:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:4","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"owner","nameLocation":"9975:5:4","nodeType":"VariableDeclaration","scope":800,"src":"9967:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"spender","nameLocation":"9990:7:4","nodeType":"VariableDeclaration","scope":800,"src":"9982:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"value","nameLocation":"10007:5:4","nodeType":"VariableDeclaration","scope":800,"src":"9999:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:4","nodeType":"VariableDeclaration","scope":800,"src":"10014:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":748,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:4"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"10047:0:4"},"scope":849,"src":"9949:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"10752:388:4","statements":[{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:4","nodeType":"VariableDeclaration","scope":847,"src":"10762:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":816,"initialValue":{"arguments":[{"id":813,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10799:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10806:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":812,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"10789:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10828:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":818,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:4","memberName":"max","nodeType":"MemberAccess","src":"10848:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"IfStatement","src":"10824:310:4","trueBody":{"id":845,"nodeType":"Block","src":"10867:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10885:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"10904:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"10881:130:4","trueBody":{"id":833,"nodeType":"Block","src":"10911:100:4","statements":[{"errorCall":{"arguments":[{"id":828,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10963:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":829,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10972:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"10990:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":827,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"10936:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"RevertStatement","src":"10929:67:4"}]}},{"id":844,"nodeType":"UncheckedBlock","src":"11024:100:4","statements":[{"expression":{"arguments":[{"id":836,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"11061:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"11068:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11077:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"11096:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":835,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[740,800],"referencedDeclaration":800,"src":"11052:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"11052:57:4"}]}]}}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"10387:271:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:4","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"10696:5:4","nodeType":"VariableDeclaration","scope":848,"src":"10688:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"spender","nameLocation":"10711:7:4","nodeType":"VariableDeclaration","scope":848,"src":"10703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"value","nameLocation":"10728:5:4","nodeType":"VariableDeclaration","scope":848,"src":"10720:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"10752:0:4"},"scope":849,"src":"10663:477:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":850,"src":"1401:9741:4","usedErrors":[209,214,219,228,233,238],"usedEvents":[861,870]}],"src":"105:11038:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[927]},"id":928,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":851,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"132:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":927,"linearizedBaseContracts":[927],"name":"IERC20","nameLocation":"213:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"226:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":861,"name":"Transfer","nameLocation":"395:8:5","nodeType":"EventDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:5","nodeType":"VariableDeclaration","scope":861,"src":"404:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:5","nodeType":"VariableDeclaration","scope":861,"src":"426:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:5","nodeType":"VariableDeclaration","scope":861,"src":"446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:5"},"src":"389:72:5"},{"anonymous":false,"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"467:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":870,"name":"Approval","nameLocation":"626:8:5","nodeType":"EventDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:5","nodeType":"VariableDeclaration","scope":870,"src":"635:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:5","nodeType":"VariableDeclaration","scope":870,"src":"658:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:5","nodeType":"VariableDeclaration","scope":870,"src":"683:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:5"},"src":"620:78:5"},{"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"704:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":927,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"835:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":884,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:5","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"account","nameLocation":"938:7:5","nodeType":"VariableDeclaration","scope":884,"src":"930:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"970:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:5"},"scope":927,"src":"911:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"985:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":894,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:5","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"to","nameLocation":"1229:2:5","nodeType":"VariableDeclaration","scope":894,"src":"1221:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"value","nameLocation":"1241:5:5","nodeType":"VariableDeclaration","scope":894,"src":"1233:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:5"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"1266:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:5"},"scope":927,"src":"1203:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"1278:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":904,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:5","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"owner","nameLocation":"1574:5:5","nodeType":"VariableDeclaration","scope":904,"src":"1566:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"spender","nameLocation":"1589:7:5","nodeType":"VariableDeclaration","scope":904,"src":"1581:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:5"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"1621:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:5"},"scope":927,"src":"1547:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"1636:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":914,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:5","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"spender","nameLocation":"2333:7:5","nodeType":"VariableDeclaration","scope":914,"src":"2325:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":914,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:5"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":911,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":927,"src":"2308:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"2387:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:5","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"from","nameLocation":"2719:4:5","nodeType":"VariableDeclaration","scope":926,"src":"2711:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"to","nameLocation":"2733:2:5","nodeType":"VariableDeclaration","scope":926,"src":"2725:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"value","nameLocation":"2745:5:5","nodeType":"VariableDeclaration","scope":926,"src":"2737:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:5"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2770:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":923,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:5"},"scope":927,"src":"2689:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":928,"src":"203:2575:5","usedErrors":[],"usedEvents":[861,870]}],"src":"106:2673:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[927],"IERC20Metadata":[953]},"id":954,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":929,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":954,"sourceUnit":928,"src":"151:37:6","symbolAliases":[{"foreign":{"id":930,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":933,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"305:6:6"},"id":934,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"190:86:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":953,"linearizedBaseContracts":[953,927],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":953,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":946,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":943,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":953,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":952,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":949,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":953,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":954,"src":"277:405:6","usedErrors":[],"usedEvents":[861,870]}],"src":"125:558:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[989]},"id":990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":955,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"149:1963:7","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":989,"linearizedBaseContracts":[989],"name":"IERC20Permit","nameLocation":"2123:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"2142:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":974,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:7","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"owner","nameLocation":"3030:5:7","nodeType":"VariableDeclaration","scope":974,"src":"3022:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"spender","nameLocation":"3053:7:7","nodeType":"VariableDeclaration","scope":974,"src":"3045:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"value","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":974,"src":"3070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:7","nodeType":"VariableDeclaration","scope":974,"src":"3093:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"v","nameLocation":"3125:1:7","nodeType":"VariableDeclaration","scope":974,"src":"3119:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":966,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"r","nameLocation":"3144:1:7","nodeType":"VariableDeclaration","scope":974,"src":"3136:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"s","nameLocation":"3163:1:7","nodeType":"VariableDeclaration","scope":974,"src":"3155:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:7"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"3179:0:7"},"scope":989,"src":"2997:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"3186:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":982,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:7","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"owner","nameLocation":"3509:5:7","nodeType":"VariableDeclaration","scope":982,"src":"3501:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:7"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"3539:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:7"},"scope":989,"src":"3485:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"3554:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":988,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:7","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"3765:2:7"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"3791:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:7"},"scope":989,"src":"3740:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":990,"src":"2113:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3680:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1532],"IERC20":[927],"IERC20Permit":[989],"SafeERC20":[1279]},"id":1280,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":991,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":928,"src":"141:37:8","symbolAliases":[{"foreign":{"id":992,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":995,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":990,"src":"179:60:8","symbolAliases":[{"foreign":{"id":994,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"187:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":1533,"src":"240:51:8","symbolAliases":[{"foreign":{"id":996,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"248:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"293:457:8","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1279,"linearizedBaseContracts":[1279],"name":"SafeERC20","nameLocation":"759:9:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1001,"libraryName":{"id":999,"name":"Address","nameLocations":["781:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"781:7:8"},"nodeType":"UsingForDirective","src":"775:26:8","typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"807:64:8","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1006,"name":"SafeERC20FailedOperation","nameLocation":"882:24:8","nodeType":"ErrorDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"token","nameLocation":"915:5:8","nodeType":"VariableDeclaration","scope":1006,"src":"907:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:8"},"src":"876:46:8"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"928:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1015,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:8","nodeType":"ErrorDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"spender","nameLocation":"1051:7:8","nodeType":"VariableDeclaration","scope":1015,"src":"1043:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:8","nodeType":"VariableDeclaration","scope":1015,"src":"1060:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:8","nodeType":"VariableDeclaration","scope":1015,"src":"1086:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:8"},"src":"1004:109:8"},{"body":{"id":1038,"nodeType":"Block","src":"1375:88:8","statements":[{"expression":{"arguments":[{"id":1027,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1405:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1030,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"1427:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1032,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1444:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1448:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1028,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1026,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1385:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"1385:71:8"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"1119:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:8","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"token","nameLocation":"1332:5:8","nodeType":"VariableDeclaration","scope":1039,"src":"1325:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"IERC20","nameLocations":["1325:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"1325:6:8"},"referencedDeclaration":927,"src":"1325:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"to","nameLocation":"1347:2:8","nodeType":"VariableDeclaration","scope":1039,"src":"1339:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"1359:5:8","nodeType":"VariableDeclaration","scope":1039,"src":"1351:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:8"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"1375:0:8"},"scope":1279,"src":"1303:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1065,"nodeType":"Block","src":"1792:98:8","statements":[{"expression":{"arguments":[{"id":1053,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1822:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1844:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":926,"src":"1844:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1058,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1865:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"1871:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1875:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1054,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1052,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1802:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"1802:81:8"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1469:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1066,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:8","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"token","nameLocation":"1735:5:8","nodeType":"VariableDeclaration","scope":1066,"src":"1728:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1042,"nodeType":"UserDefinedTypeName","pathNode":{"id":1041,"name":"IERC20","nameLocations":["1728:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"1728:6:8"},"referencedDeclaration":927,"src":"1728:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"1750:4:8","nodeType":"VariableDeclaration","scope":1066,"src":"1742:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"to","nameLocation":"1764:2:8","nodeType":"VariableDeclaration","scope":1066,"src":"1756:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"value","nameLocation":"1776:5:8","nodeType":"VariableDeclaration","scope":1066,"src":"1768:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:8"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"1792:0:8"},"scope":1279,"src":"1702:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1096,"nodeType":"Block","src":"2167:139:8","statements":[{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:8","nodeType":"VariableDeclaration","scope":1096,"src":"2177:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"arguments":[{"arguments":[{"id":1083,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:8","typeDescriptions":{}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2200:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":904,"src":"2200:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:8"},{"expression":{"arguments":[{"id":1089,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2262:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"id":1090,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2269:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"2278:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2293:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2249:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"2249:50:8"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"1896:180:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:8","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"token","nameLocation":"2119:5:8","nodeType":"VariableDeclaration","scope":1097,"src":"2112:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1069,"nodeType":"UserDefinedTypeName","pathNode":{"id":1068,"name":"IERC20","nameLocations":["2112:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"2112:6:8"},"referencedDeclaration":927,"src":"2112:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"spender","nameLocation":"2134:7:8","nodeType":"VariableDeclaration","scope":1097,"src":"2126:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"value","nameLocation":"2151:5:8","nodeType":"VariableDeclaration","scope":1097,"src":"2143:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:8"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"2167:0:8"},"scope":1279,"src":"2081:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"2607:370:8","statements":[{"id":1138,"nodeType":"UncheckedBlock","src":"2617:354:8","statements":[{"assignments":[1109],"declarations":[{"constant":false,"id":1109,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:8","nodeType":"VariableDeclaration","scope":1138,"src":"2641:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1118,"initialValue":{"arguments":[{"arguments":[{"id":1114,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}],"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:8","typeDescriptions":{}}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2699:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2668:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":904,"src":"2668:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2725:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1120,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2744:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1129,"nodeType":"IfStatement","src":"2721:160:8","trueBody":{"id":1128,"nodeType":"Block","src":"2763:118:8","statements":[{"errorCall":{"arguments":[{"id":1123,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2821:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2830:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1125,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2788:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"RevertStatement","src":"2781:85:8"}]}},{"expression":{"arguments":[{"id":1131,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2907:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"id":1132,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2914:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2923:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1134,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2942:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2894:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"2894:66:8"}]}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"2312:192:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:8","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"token","nameLocation":"2547:5:8","nodeType":"VariableDeclaration","scope":1140,"src":"2540:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1100,"nodeType":"UserDefinedTypeName","pathNode":{"id":1099,"name":"IERC20","nameLocations":["2540:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"2540:6:8"},"referencedDeclaration":927,"src":"2540:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"spender","nameLocation":"2562:7:8","nodeType":"VariableDeclaration","scope":1140,"src":"2554:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:8","nodeType":"VariableDeclaration","scope":1140,"src":"2571:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:8"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"2607:0:8"},"scope":1279,"src":"2509:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"3373:303:8","statements":[{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:8","nodeType":"VariableDeclaration","scope":1186,"src":"3383:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[{"expression":{"id":1155,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3426:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":914,"src":"3426:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1157,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3442:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1153,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:8"},{"condition":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:8","subExpression":{"arguments":[{"id":1163,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3498:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"id":1164,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3505:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1162,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3474:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"nodeType":"IfStatement","src":"3469:201:8","trueBody":{"id":1184,"nodeType":"Block","src":"3520:150:8","statements":[{"expression":{"arguments":[{"id":1168,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3554:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1171,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3576:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":914,"src":"3576:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1173,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3592:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1169,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1167,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3534:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"ExpressionStatement","src":"3534:71:8"},{"expression":{"arguments":[{"id":1180,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3639:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"id":1181,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3646:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1179,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3619:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"3619:40:8"}]}}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"2983:308:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:8","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"token","nameLocation":"3325:5:8","nodeType":"VariableDeclaration","scope":1187,"src":"3318:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"IERC20","nameLocations":["3318:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"3318:6:8"},"referencedDeclaration":927,"src":"3318:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"spender","nameLocation":"3340:7:8","nodeType":"VariableDeclaration","scope":1187,"src":"3332:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"value","nameLocation":"3357:5:8","nodeType":"VariableDeclaration","scope":1187,"src":"3349:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:8"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"3373:0:8"},"scope":1279,"src":"3296:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"4129:559:8","statements":[{"assignments":[1197],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:8","nodeType":"VariableDeclaration","scope":1228,"src":"4478:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1205,"initialValue":{"arguments":[{"id":1203,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4532:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1200,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:8","typeDescriptions":{}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:8","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"4504:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1206,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4551:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:8","memberName":"length","nodeType":"MemberAccess","src":"4551:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:8","subExpression":{"arguments":[{"id":1212,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4589:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1213,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:8","typeDescriptions":{}}}],"id":1215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1210,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:8","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1227,"nodeType":"IfStatement","src":"4547:135:8","trueBody":{"id":1226,"nodeType":"Block","src":"4610:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4664:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:8","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1219,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"4631:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"RevertStatement","src":"4624:47:8"}]}}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"3682:372:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:8","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"token","nameLocation":"4095:5:8","nodeType":"VariableDeclaration","scope":1229,"src":"4088:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1190,"nodeType":"UserDefinedTypeName","pathNode":{"id":1189,"name":"IERC20","nameLocations":["4088:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"4088:6:8"},"referencedDeclaration":927,"src":"4088:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"data","nameLocation":"4115:4:8","nodeType":"VariableDeclaration","scope":1229,"src":"4102:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:8"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"4129:0:8"},"scope":1279,"src":"4059:629:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1277,"nodeType":"Block","src":"5278:489:8","statements":[{"assignments":[1241,1243],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"success","nameLocation":"5579:7:8","nodeType":"VariableDeclaration","scope":1277,"src":"5574:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1240,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:8","nodeType":"VariableDeclaration","scope":1277,"src":"5588:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1242,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[{"id":1249,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"5635:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1246,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5623:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:8","typeDescriptions":{}}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:8","memberName":"call","nodeType":"MemberAccess","src":"5615:19:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5657:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1253,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5669:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:8","memberName":"length","nodeType":"MemberAccess","src":"5669:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1259,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5706:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1260,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:8","typeDescriptions":{}}}],"id":1262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1257,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:8","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1269,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:8","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:8","memberName":"code","nodeType":"MemberAccess","src":"5730:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:8","memberName":"length","nodeType":"MemberAccess","src":"5730:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1239,"id":1276,"nodeType":"Return","src":"5650:110:8"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"4694:490:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:8","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"token","nameLocation":"5229:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"5222:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"IERC20","nameLocations":["5222:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"5222:6:8"},"referencedDeclaration":927,"src":"5222:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"data","nameLocation":"5249:4:8","nodeType":"VariableDeclaration","scope":1278,"src":"5236:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1234,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:8"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"5272:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1237,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:8"},"scope":1279,"src":"5189:578:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1280,"src":"751:5018:8","usedErrors":[1006,1015],"usedEvents":[]}],"src":"115:5655:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1532]},"id":1533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1281,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"127:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1532,"linearizedBaseContracts":[1532],"name":"Address","nameLocation":"203:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"217:94:9","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1287,"name":"AddressInsufficientBalance","nameLocation":"322:26:9","nodeType":"ErrorDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"account","nameLocation":"357:7:9","nodeType":"VariableDeclaration","scope":1287,"src":"349:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:9"},"src":"316:50:9"},{"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"372:75:9","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1292,"name":"AddressEmptyCode","nameLocation":"458:16:9","nodeType":"ErrorDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"target","nameLocation":"483:6:9","nodeType":"VariableDeclaration","scope":1292,"src":"475:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:9"},"src":"452:39:9"},{"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"497:89:9","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1295,"name":"FailedInnerCall","nameLocation":"597:15:9","nodeType":"ErrorDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"612:2:9"},"src":"591:24:9"},{"body":{"id":1335,"nodeType":"Block","src":"1602:260:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1305,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:9","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1640:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1318,"nodeType":"IfStatement","src":"1612:109:9","trueBody":{"id":1317,"nodeType":"Block","src":"1648:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1313,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}],"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:9","typeDescriptions":{}}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1310,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1669:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1316,"nodeType":"RevertStatement","src":"1662:48:9"}]}},{"assignments":[1320,null],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"success","nameLocation":"1737:7:9","nodeType":"VariableDeclaration","scope":1335,"src":"1732:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1319,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1327,"initialValue":{"arguments":[{"hexValue":"","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1321,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"1750:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:9","memberName":"call","nodeType":"MemberAccess","src":"1750:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1772:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:9"},{"condition":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:9","subExpression":{"id":1328,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"1798:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1334,"nodeType":"IfStatement","src":"1793:63:9","trueBody":{"id":1333,"nodeType":"Block","src":"1807:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1330,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1828:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"RevertStatement","src":"1821:24:9"}]}}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"621:905:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:9","nodeType":"VariableDeclaration","scope":1336,"src":"1550:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"amount","nameLocation":"1585:6:9","nodeType":"VariableDeclaration","scope":1336,"src":"1577:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:9"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1602:0:9"},"scope":1532,"src":"1531:331:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"2794:62:9","statements":[{"expression":{"arguments":[{"id":1347,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"2833:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"2841:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2811:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1345,"id":1351,"nodeType":"Return","src":"2804:45:9"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"1868:832:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:9","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"target","nameLocation":"2735:6:9","nodeType":"VariableDeclaration","scope":1353,"src":"2727:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"data","nameLocation":"2756:4:9","nodeType":"VariableDeclaration","scope":1353,"src":"2743:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:9"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"2780:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1343,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:9"},"scope":1532,"src":"2705:151:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"3293:279:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1367,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:9","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:9","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3331:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"3303:108:9","trueBody":{"id":1379,"nodeType":"Block","src":"3338:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1375,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1532","typeString":"library Address"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:9","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1372,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3359:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"RevertStatement","src":"3352:48:9"}]}},{"assignments":[1382,1384],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"success","nameLocation":"3426:7:9","nodeType":"VariableDeclaration","scope":1398,"src":"3421:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1381,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:9","nodeType":"VariableDeclaration","scope":1398,"src":"3435:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1391,"initialValue":{"arguments":[{"id":1389,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"3488:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1385,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"3462:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:9","memberName":"call","nodeType":"MemberAccess","src":"3462:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3481:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:9"},{"expression":{"arguments":[{"id":1393,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"3537:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1394,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"3545:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1395,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3554:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1392,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"3510:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1364,"id":1397,"nodeType":"Return","src":"3503:62:9"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"2862:313:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:9","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"target","nameLocation":"3219:6:9","nodeType":"VariableDeclaration","scope":1399,"src":"3211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"data","nameLocation":"3240:4:9","nodeType":"VariableDeclaration","scope":1399,"src":"3227:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1357,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"value","nameLocation":"3254:5:9","nodeType":"VariableDeclaration","scope":1399,"src":"3246:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:9"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"3279:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1362,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:9"},"scope":1532,"src":"3180:392:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1424,"nodeType":"Block","src":"3811:154:9","statements":[{"assignments":[1410,1412],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"success","nameLocation":"3827:7:9","nodeType":"VariableDeclaration","scope":1424,"src":"3822:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1409,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:9","nodeType":"VariableDeclaration","scope":1424,"src":"3836:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1417,"initialValue":{"arguments":[{"id":1415,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"3881:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1413,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3863:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:9"},{"expression":{"arguments":[{"id":1419,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3930:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3938:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1421,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"3947:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1418,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"3903:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1408,"id":1423,"nodeType":"Return","src":"3896:62:9"}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"3578:128:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1425,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:9","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"target","nameLocation":"3747:6:9","nodeType":"VariableDeclaration","scope":1425,"src":"3739:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"data","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":1425,"src":"3755:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1403,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:9"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1425,"src":"3797:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:9"},"scope":1532,"src":"3711:254:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"4203:156:9","statements":[{"assignments":[1436,1438],"declarations":[{"constant":false,"id":1436,"mutability":"mutable","name":"success","nameLocation":"4219:7:9","nodeType":"VariableDeclaration","scope":1450,"src":"4214:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1435,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:9","nodeType":"VariableDeclaration","scope":1450,"src":"4228:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1443,"initialValue":{"arguments":[{"id":1441,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"4275:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1439,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4255:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:9"},{"expression":{"arguments":[{"id":1445,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4324:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"4332:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1447,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4341:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1444,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"4297:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1434,"id":1449,"nodeType":"Return","src":"4290:62:9"}]},"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"3971:130:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:9","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"target","nameLocation":"4144:6:9","nodeType":"VariableDeclaration","scope":1451,"src":"4136:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"data","nameLocation":"4165:4:9","nodeType":"VariableDeclaration","scope":1451,"src":"4152:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1429,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:9"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"4189:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1432,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:9"},"scope":1532,"src":"4106:253:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"4783:424:9","statements":[{"condition":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:9","subExpression":{"id":1463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"4798:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1488,"nodeType":"Block","src":"4857:344:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1470,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5045:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:9","memberName":"length","nodeType":"MemberAccess","src":"5045:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1474,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5071:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:9","memberName":"code","nodeType":"MemberAccess","src":"5071:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:9","memberName":"length","nodeType":"MemberAccess","src":"5071:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1485,"nodeType":"IfStatement","src":"5041:119:9","trueBody":{"id":1484,"nodeType":"Block","src":"5096:64:9","statements":[{"errorCall":{"arguments":[{"id":1481,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5138:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1480,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5121:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"RevertStatement","src":"5114:31:9"}]}},{"expression":{"id":1486,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5180:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1462,"id":1487,"nodeType":"Return","src":"5173:17:9"}]},"id":1489,"nodeType":"IfStatement","src":"4793:408:9","trueBody":{"id":1469,"nodeType":"Block","src":"4807:44:9","statements":[{"expression":{"arguments":[{"id":1466,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4829:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1465,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4821:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"ExpressionStatement","src":"4821:19:9"}]}}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"4365:255:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:9","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"target","nameLocation":"4678:6:9","nodeType":"VariableDeclaration","scope":1491,"src":"4670:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"success","nameLocation":"4699:7:9","nodeType":"VariableDeclaration","scope":1491,"src":"4694:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1455,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:9","nodeType":"VariableDeclaration","scope":1491,"src":"4716:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:9"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"4769:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1460,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:9"},"scope":1532,"src":"4625:582:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1512,"nodeType":"Block","src":"5509:122:9","statements":[{"condition":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:9","subExpression":{"id":1501,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"5524:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1510,"nodeType":"Block","src":"5583:42:9","statements":[{"expression":{"id":1508,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5604:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1500,"id":1509,"nodeType":"Return","src":"5597:17:9"}]},"id":1511,"nodeType":"IfStatement","src":"5519:106:9","trueBody":{"id":1507,"nodeType":"Block","src":"5533:44:9","statements":[{"expression":{"arguments":[{"id":1504,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5555:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1503,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5547:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"5547:19:9"}]}}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"5213:189:9","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:9","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"success","nameLocation":"5438:7:9","nodeType":"VariableDeclaration","scope":1513,"src":"5433:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1493,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:9","nodeType":"VariableDeclaration","scope":1513,"src":"5447:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:9"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1513,"src":"5495:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1498,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:9"},"scope":1532,"src":"5407:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"5798:461:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1519,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5874:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:9","memberName":"length","nodeType":"MemberAccess","src":"5874:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1528,"nodeType":"Block","src":"6204:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1525,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6225:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1527,"nodeType":"RevertStatement","src":"6218:24:9"}]},"id":1529,"nodeType":"IfStatement","src":"5870:383:9","trueBody":{"id":1524,"nodeType":"Block","src":"5897:301:9","statements":[{"AST":{"nativeSrc":"6055:133:9","nodeType":"YulBlock","src":"6055:133:9","statements":[{"nativeSrc":"6073:40:9","nodeType":"YulVariableDeclaration","src":"6073:40:9","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:9","nodeType":"YulIdentifier","src":"6102:10:9"}],"functionName":{"name":"mload","nativeSrc":"6096:5:9","nodeType":"YulIdentifier","src":"6096:5:9"},"nativeSrc":"6096:17:9","nodeType":"YulFunctionCall","src":"6096:17:9"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:9","nodeType":"YulTypedName","src":"6077:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:9","nodeType":"YulLiteral","src":"6141:2:9","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:9","nodeType":"YulIdentifier","src":"6145:10:9"}],"functionName":{"name":"add","nativeSrc":"6137:3:9","nodeType":"YulIdentifier","src":"6137:3:9"},"nativeSrc":"6137:19:9","nodeType":"YulFunctionCall","src":"6137:19:9"},{"name":"returndata_size","nativeSrc":"6158:15:9","nodeType":"YulIdentifier","src":"6158:15:9"}],"functionName":{"name":"revert","nativeSrc":"6130:6:9","nodeType":"YulIdentifier","src":"6130:6:9"},"nativeSrc":"6130:44:9","nodeType":"YulFunctionCall","src":"6130:44:9"},"nativeSrc":"6130:44:9","nodeType":"YulExpressionStatement","src":"6130:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":false,"src":"6102:10:9","valueSize":1},{"declaration":1516,"isOffset":false,"isSlot":false,"src":"6145:10:9","valueSize":1}],"id":1523,"nodeType":"InlineAssembly","src":"6046:142:9"}]}}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"5637:101:9","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:9","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:9","nodeType":"VariableDeclaration","scope":1531,"src":"5760:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:9"},"returnParameters":{"id":1518,"nodeType":"ParameterList","parameters":[],"src":"5798:0:9"},"scope":1532,"src":"5743:516:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1533,"src":"195:6066:9","usedErrors":[1287,1292,1295],"usedEvents":[]}],"src":"101:6161:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1562]},"id":1563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1534,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1562,"linearizedBaseContracts":[1562],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1543,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1539,"id":1542,"nodeType":"Return","src":"728:17:10"}]},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1562,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1548,"id":1551,"nodeType":"Return","src":"835:15:10"}]},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1546,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1562,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1560,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1557,"id":1559,"nodeType":"Return","src":"945:8:10"}]},"id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1562,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1563,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1631]},"id":1632,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"135:750:11","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1631,"linearizedBaseContracts":[1631],"name":"ReentrancyGuard","nameLocation":"904:15:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1568,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:11","nodeType":"VariableDeclaration","scope":1631,"src":"1674:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1571,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:11","nodeType":"VariableDeclaration","scope":1631,"src":"1720:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1573,"mutability":"mutable","name":"_status","nameLocation":"1779:7:11","nodeType":"VariableDeclaration","scope":1631,"src":"1763:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"1793:52:11","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1576,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:11","nodeType":"ErrorDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"1884:2:11"},"src":"1850:37:11"},{"body":{"id":1583,"nodeType":"Block","src":"1907:38:11","statements":[{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"1917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1580,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"1927:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"1917:21:11"}]},"id":1584,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[],"src":"1904:2:11"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"1907:0:11"},"scope":1631,"src":"1893:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"2346:79:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1587,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2356:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"ExpressionStatement","src":"2356:21:11"},{"id":1590,"nodeType":"PlaceholderStatement","src":"2387:1:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1591,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"2398:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"ExpressionStatement","src":"2398:20:11"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"1951:366:11","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1595,"name":"nonReentrant","nameLocation":"2331:12:11","nodeType":"ModifierDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"2343:2:11"},"src":"2322:103:11","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"2470:268:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1599,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2569:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1605,"nodeType":"IfStatement","src":"2554:86:11","trueBody":{"id":1604,"nodeType":"Block","src":"2578:62:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1601,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2599:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"RevertStatement","src":"2592:37:11"}]}},{"expression":{"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1606,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2714:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1607,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1609,"nodeType":"ExpressionStatement","src":"2714:17:11"}]},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:11","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"2459:2:11"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"2470:0:11"},"scope":1631,"src":"2431:307:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1618,"nodeType":"Block","src":"2782:170:11","statements":[{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1614,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2924:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1615,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2934:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"2924:21:11"}]},"id":1619,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:11","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[],"src":"2771:2:11"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"2782:0:11"},"scope":1631,"src":"2744:208:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1629,"nodeType":"Block","src":"3195:42:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3212:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1626,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3223:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1624,"id":1628,"nodeType":"Return","src":"3205:25:11"}]},"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"2958:168:11","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:11","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"3163:2:11"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"3189:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:11"},"scope":1631,"src":"3131:106:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1632,"src":"886:2353:11","usedErrors":[1576],"usedEvents":[]}],"src":"109:3131:11"},"id":11},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2244]},"id":2245,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1633,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"231:1098:12","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2244,"linearizedBaseContracts":[2244],"name":"EnumerableSet","nameLocation":"1338:13:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1642,"members":[{"constant":false,"id":1637,"mutability":"mutable","name":"_values","nameLocation":"1862:7:12","nodeType":"VariableDeclaration","scope":1642,"src":"1852:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1636,"nodeType":"ArrayTypeName","src":"1852:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:12","nodeType":"VariableDeclaration","scope":1642,"src":"2020:44:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1640,"keyName":"value","keyNameLocation":"2036:5:12","keyType":{"id":1638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:12","nodeType":"StructDefinition","scope":2244,"src":"1798:273:12","visibility":"public"},{"body":{"id":1683,"nodeType":"Block","src":"2310:337:12","statements":[{"condition":{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:12","subExpression":{"arguments":[{"id":1654,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2335:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2340:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1653,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"2325:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1681,"nodeType":"Block","src":"2604:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1652,"id":1680,"nodeType":"Return","src":"2618:12:12"}]},"id":1682,"nodeType":"IfStatement","src":"2320:321:12","trueBody":{"id":1678,"nodeType":"Block","src":"2348:250:12","statements":[{"expression":{"arguments":[{"id":1663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2379:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1658,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2362:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"2362:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:12","memberName":"push","nodeType":"MemberAccess","src":"2362:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"2362:23:12"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1666,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2520:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"2520:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1670,"indexExpression":{"id":1668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2535:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1671,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2544:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"2544:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:12","memberName":"length","nodeType":"MemberAccess","src":"2544:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"2520:42:12"},{"expression":{"hexValue":"74727565","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1652,"id":1677,"nodeType":"Return","src":"2576:11:12"}]}}]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"2077:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:12","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"set","nameLocation":"2267:3:12","nodeType":"VariableDeclaration","scope":1684,"src":"2255:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1645,"nodeType":"UserDefinedTypeName","pathNode":{"id":1644,"name":"Set","nameLocations":["2255:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"2255:3:12"},"referencedDeclaration":1642,"src":"2255:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"value","nameLocation":"2280:5:12","nodeType":"VariableDeclaration","scope":1684,"src":"2272:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:12"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"2304:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1650,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:12"},"scope":2244,"src":"2241:406:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1767,"nodeType":"Block","src":"2887:1296:12","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"position","nameLocation":"2999:8:12","nodeType":"VariableDeclaration","scope":1767,"src":"2991:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"baseExpression":{"expression":{"id":1697,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3010:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"3010:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1700,"indexExpression":{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"3025:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3046:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1765,"nodeType":"Block","src":"4140:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1694,"id":1764,"nodeType":"Return","src":"4154:12:12"}]},"id":1766,"nodeType":"IfStatement","src":"3042:1135:12","trueBody":{"id":1762,"nodeType":"Block","src":"3061:1073:12","statements":[{"assignments":[1706],"declarations":[{"constant":false,"id":1706,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:12","nodeType":"VariableDeclaration","scope":1762,"src":"3413:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1710,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3434:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:12"},{"assignments":[1712],"declarations":[{"constant":false,"id":1712,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:12","nodeType":"VariableDeclaration","scope":1762,"src":"3460:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1718,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1713,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3480:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"3480:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:12","memberName":"length","nodeType":"MemberAccess","src":"3480:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"3521:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1720,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3535:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1746,"nodeType":"IfStatement","src":"3517:378:12","trueBody":{"id":1745,"nodeType":"Block","src":"3546:349:12","statements":[{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:12","nodeType":"VariableDeclaration","scope":1745,"src":"3564:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1728,"initialValue":{"baseExpression":{"expression":{"id":1724,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3584:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"3584:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1727,"indexExpression":{"id":1726,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3596:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:12"},{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1729,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3705:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"3705:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1733,"indexExpression":{"id":1731,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"3717:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1734,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3731:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1736,"nodeType":"ExpressionStatement","src":"3705:35:12"},{"expression":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1737,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3844:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"3844:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1741,"indexExpression":{"id":1739,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3859:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1742,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3872:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1744,"nodeType":"ExpressionStatement","src":"3844:36:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1747,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3973:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"3973:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:12","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"3973:17:12"},{"expression":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:12","subExpression":{"baseExpression":{"expression":{"id":1754,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"4076:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"4076:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1757,"indexExpression":{"id":1756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"4091:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"4069:28:12"},{"expression":{"hexValue":"74727565","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1694,"id":1761,"nodeType":"Return","src":"4112:11:12"}]}}]},"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"2653:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:12","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"set","nameLocation":"2844:3:12","nodeType":"VariableDeclaration","scope":1768,"src":"2832:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1687,"nodeType":"UserDefinedTypeName","pathNode":{"id":1686,"name":"Set","nameLocations":["2832:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"2832:3:12"},"referencedDeclaration":1642,"src":"2832:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"2857:5:12","nodeType":"VariableDeclaration","scope":1768,"src":"2849:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:12"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"2881:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1692,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:12"},"scope":2244,"src":"2815:1368:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1786,"nodeType":"Block","src":"4343:50:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1779,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4360:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:12","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"4360:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1782,"indexExpression":{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4375:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1778,"id":1785,"nodeType":"Return","src":"4353:33:12"}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"4189:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:12","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"set","nameLocation":"4295:3:12","nodeType":"VariableDeclaration","scope":1787,"src":"4283:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1771,"nodeType":"UserDefinedTypeName","pathNode":{"id":1770,"name":"Set","nameLocations":["4283:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"4283:3:12"},"referencedDeclaration":1642,"src":"4283:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"value","nameLocation":"4308:5:12","nodeType":"VariableDeclaration","scope":1787,"src":"4300:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:12"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"4337:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1776,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:12"},"scope":2244,"src":"4264:129:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1800,"nodeType":"Block","src":"4539:42:12","statements":[{"expression":{"expression":{"expression":{"id":1796,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"4556:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"4556:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:12","memberName":"length","nodeType":"MemberAccess","src":"4556:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1795,"id":1799,"nodeType":"Return","src":"4549:25:12"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"4399:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:12","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"set","nameLocation":"4503:3:12","nodeType":"VariableDeclaration","scope":1801,"src":"4491:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1790,"nodeType":"UserDefinedTypeName","pathNode":{"id":1789,"name":"Set","nameLocations":["4491:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"4491:3:12"},"referencedDeclaration":1642,"src":"4491:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:12"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"4530:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:12"},"scope":2244,"src":"4474:107:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1817,"nodeType":"Block","src":"4999:42:12","statements":[{"expression":{"baseExpression":{"expression":{"id":1812,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"5016:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"5016:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1815,"indexExpression":{"id":1814,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"5028:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1811,"id":1816,"nodeType":"Return","src":"5009:25:12"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"4587:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:12","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"set","nameLocation":"4948:3:12","nodeType":"VariableDeclaration","scope":1818,"src":"4936:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"Set","nameLocations":["4936:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"4936:3:12"},"referencedDeclaration":1642,"src":"4936:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"index","nameLocation":"4961:5:12","nodeType":"VariableDeclaration","scope":1818,"src":"4953:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:12"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"4990:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:12"},"scope":2244,"src":"4923:118:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1831,"nodeType":"Block","src":"5655:35:12","statements":[{"expression":{"expression":{"id":1828,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"5672:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"5672:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1827,"id":1830,"nodeType":"Return","src":"5665:18:12"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"5047:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:12","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"set","nameLocation":"5610:3:12","nodeType":"VariableDeclaration","scope":1832,"src":"5598:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"Set","nameLocations":["5598:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"5598:3:12"},"referencedDeclaration":1642,"src":"5598:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:12"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"5637:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1825,"nodeType":"ArrayTypeName","src":"5637:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:12"},"scope":2244,"src":"5581:109:12","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1836,"members":[{"constant":false,"id":1835,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:12","nodeType":"VariableDeclaration","scope":1836,"src":"5743:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1834,"nodeType":"UserDefinedTypeName","pathNode":{"id":1833,"name":"Set","nameLocations":["5743:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"5743:3:12"},"referencedDeclaration":1642,"src":"5743:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:12","nodeType":"StructDefinition","scope":2244,"src":"5715:45:12","visibility":"public"},{"body":{"id":1853,"nodeType":"Block","src":"6006:47:12","statements":[{"expression":{"arguments":[{"expression":{"id":1848,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"6028:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"6028:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"6040:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1847,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6023:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1846,"id":1852,"nodeType":"Return","src":"6016:30:12"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"5766:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:12","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"set","nameLocation":"5962:3:12","nodeType":"VariableDeclaration","scope":1854,"src":"5943:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1839,"nodeType":"UserDefinedTypeName","pathNode":{"id":1838,"name":"Bytes32Set","nameLocations":["5943:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"5943:10:12"},"referencedDeclaration":1836,"src":"5943:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"value","nameLocation":"5975:5:12","nodeType":"VariableDeclaration","scope":1854,"src":"5967:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:12"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1854,"src":"6000:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1844,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:12"},"scope":2244,"src":"5930:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"6300:50:12","statements":[{"expression":{"arguments":[{"expression":{"id":1866,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6325:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"6325:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"6337:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1865,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6317:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1864,"id":1870,"nodeType":"Return","src":"6310:33:12"}]},"documentation":{"id":1855,"nodeType":"StructuredDocumentation","src":"6059:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:12","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"set","nameLocation":"6256:3:12","nodeType":"VariableDeclaration","scope":1872,"src":"6237:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1857,"nodeType":"UserDefinedTypeName","pathNode":{"id":1856,"name":"Bytes32Set","nameLocations":["6237:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"6237:10:12"},"referencedDeclaration":1836,"src":"6237:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"value","nameLocation":"6269:5:12","nodeType":"VariableDeclaration","scope":1872,"src":"6261:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:12"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"6294:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1862,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:12"},"scope":2244,"src":"6221:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"6517:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":1884,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6544:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"6544:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6556:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1883,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"6534:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1882,"id":1888,"nodeType":"Return","src":"6527:35:12"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"6356:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:12","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"set","nameLocation":"6468:3:12","nodeType":"VariableDeclaration","scope":1890,"src":"6449:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"Bytes32Set","nameLocations":["6449:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"6449:10:12"},"referencedDeclaration":1836,"src":"6449:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"value","nameLocation":"6481:5:12","nodeType":"VariableDeclaration","scope":1890,"src":"6473:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:12"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"6511:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:12"},"scope":2244,"src":"6431:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1904,"nodeType":"Block","src":"6722:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":1900,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6747:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"6747:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1899,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"6739:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1898,"id":1903,"nodeType":"Return","src":"6732:26:12"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"6575:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:12","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"set","nameLocation":"6685:3:12","nodeType":"VariableDeclaration","scope":1905,"src":"6666:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1893,"nodeType":"UserDefinedTypeName","pathNode":{"id":1892,"name":"Bytes32Set","nameLocations":["6666:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"6666:10:12"},"referencedDeclaration":1836,"src":"6666:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:12"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1905,"src":"6713:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:12"},"scope":2244,"src":"6650:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"7190:46:12","statements":[{"expression":{"arguments":[{"expression":{"id":1917,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7211:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"7211:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1919,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"7223:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1916,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7207:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1915,"id":1921,"nodeType":"Return","src":"7200:29:12"}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"6771:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:12","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"set","nameLocation":"7138:3:12","nodeType":"VariableDeclaration","scope":1923,"src":"7119:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1908,"nodeType":"UserDefinedTypeName","pathNode":{"id":1907,"name":"Bytes32Set","nameLocations":["7119:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"7119:10:12"},"referencedDeclaration":1836,"src":"7119:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"index","nameLocation":"7151:5:12","nodeType":"VariableDeclaration","scope":1923,"src":"7143:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:12"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"7181:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:12"},"scope":2244,"src":"7107:129:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"7857:219:12","statements":[{"assignments":[1937],"declarations":[{"constant":false,"id":1937,"mutability":"mutable","name":"store","nameLocation":"7884:5:12","nodeType":"VariableDeclaration","scope":1952,"src":"7867:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1936,"nodeType":"ArrayTypeName","src":"7867:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1942,"initialValue":{"arguments":[{"expression":{"id":1939,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"7900:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1835,"src":"7900:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1938,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"7892:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:12"},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"result","nameLocation":"7938:6:12","nodeType":"VariableDeclaration","scope":1952,"src":"7921:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1946,"nodeType":"ArrayTypeName","src":"7921:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1948,"nodeType":"VariableDeclarationStatement","src":"7921:23:12"},{"AST":{"nativeSrc":"8007:39:12","nodeType":"YulBlock","src":"8007:39:12","statements":[{"nativeSrc":"8021:15:12","nodeType":"YulAssignment","src":"8021:15:12","value":{"name":"store","nativeSrc":"8031:5:12","nodeType":"YulIdentifier","src":"8031:5:12"},"variableNames":[{"name":"result","nativeSrc":"8021:6:12","nodeType":"YulIdentifier","src":"8021:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1947,"isOffset":false,"isSlot":false,"src":"8021:6:12","valueSize":1},{"declaration":1937,"isOffset":false,"isSlot":false,"src":"8031:5:12","valueSize":1}],"id":1949,"nodeType":"InlineAssembly","src":"7998:48:12"},{"expression":{"id":1950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"8063:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1932,"id":1951,"nodeType":"Return","src":"8056:13:12"}]},"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"7242:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:12","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"set","nameLocation":"7811:3:12","nodeType":"VariableDeclaration","scope":1953,"src":"7792:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1926,"nodeType":"UserDefinedTypeName","pathNode":{"id":1925,"name":"Bytes32Set","nameLocations":["7792:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"7792:10:12"},"referencedDeclaration":1836,"src":"7792:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1836_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:12"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"7839:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1930,"nodeType":"ArrayTypeName","src":"7839:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:12"},"scope":2244,"src":"7776:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1957,"members":[{"constant":false,"id":1956,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:12","nodeType":"VariableDeclaration","scope":1957,"src":"8129:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1955,"nodeType":"UserDefinedTypeName","pathNode":{"id":1954,"name":"Set","nameLocations":["8129:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"8129:3:12"},"referencedDeclaration":1642,"src":"8129:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:12","nodeType":"StructDefinition","scope":2244,"src":"8101:45:12","visibility":"public"},{"body":{"id":1983,"nodeType":"Block","src":"8392:74:12","statements":[{"expression":{"arguments":[{"expression":{"id":1969,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"8414:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"8414:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"8450:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1975,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:12","typeDescriptions":{}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:12","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:12","typeDescriptions":{}}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1968,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"8409:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1967,"id":1982,"nodeType":"Return","src":"8402:57:12"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"8152:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:12","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"set","nameLocation":"8348:3:12","nodeType":"VariableDeclaration","scope":1984,"src":"8329:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"AddressSet","nameLocations":["8329:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"8329:10:12"},"referencedDeclaration":1957,"src":"8329:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"8361:5:12","nodeType":"VariableDeclaration","scope":1984,"src":"8353:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:12"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"8386:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:12"},"scope":2244,"src":"8316:150:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"8713:77:12","statements":[{"expression":{"arguments":[{"expression":{"id":1996,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8738:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"8738:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"8774:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2002,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:12","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:12","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:12","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1995,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8730:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1994,"id":2009,"nodeType":"Return","src":"8723:60:12"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"8472:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:12","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"set","nameLocation":"8669:3:12","nodeType":"VariableDeclaration","scope":2011,"src":"8650:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1987,"nodeType":"UserDefinedTypeName","pathNode":{"id":1986,"name":"AddressSet","nameLocations":["8650:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"8650:10:12"},"referencedDeclaration":1957,"src":"8650:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"value","nameLocation":"8682:5:12","nodeType":"VariableDeclaration","scope":2011,"src":"8674:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:12"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"8707:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1992,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:12"},"scope":2244,"src":"8634:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"8957:79:12","statements":[{"expression":{"arguments":[{"expression":{"id":2023,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"8984:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"8984:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"9020:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2029,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:12","typeDescriptions":{}}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:12","typeDescriptions":{}}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:12","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2022,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"8974:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2021,"id":2036,"nodeType":"Return","src":"8967:62:12"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"8796:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:12","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"set","nameLocation":"8908:3:12","nodeType":"VariableDeclaration","scope":2038,"src":"8889:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2014,"nodeType":"UserDefinedTypeName","pathNode":{"id":2013,"name":"AddressSet","nameLocations":["8889:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"8889:10:12"},"referencedDeclaration":1957,"src":"8889:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"value","nameLocation":"8921:5:12","nodeType":"VariableDeclaration","scope":2038,"src":"8913:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:12"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"8951:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2019,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:12"},"scope":2244,"src":"8871:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2052,"nodeType":"Block","src":"9189:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2048,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"9214:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"9214:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2047,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"9206:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2046,"id":2051,"nodeType":"Return","src":"9199:26:12"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"9042:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2053,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:12","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"set","nameLocation":"9152:3:12","nodeType":"VariableDeclaration","scope":2053,"src":"9133:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2041,"nodeType":"UserDefinedTypeName","pathNode":{"id":2040,"name":"AddressSet","nameLocations":["9133:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"9133:10:12"},"referencedDeclaration":1957,"src":"9133:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:12"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2053,"src":"9180:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:12"},"scope":2244,"src":"9117:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2079,"nodeType":"Block","src":"9657:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2071,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"9702:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"9702:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2073,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"9714:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2070,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"9698:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:12","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2066,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:12","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:12","typeDescriptions":{}}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2063,"id":2078,"nodeType":"Return","src":"9667:56:12"}]},"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"9238:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:12","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"set","nameLocation":"9605:3:12","nodeType":"VariableDeclaration","scope":2080,"src":"9586:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2056,"nodeType":"UserDefinedTypeName","pathNode":{"id":2055,"name":"AddressSet","nameLocations":["9586:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"9586:10:12"},"referencedDeclaration":1957,"src":"9586:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"index","nameLocation":"9618:5:12","nodeType":"VariableDeclaration","scope":2080,"src":"9610:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:12"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2080,"src":"9648:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:12"},"scope":2244,"src":"9574:156:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"10351:219:12","statements":[{"assignments":[2094],"declarations":[{"constant":false,"id":2094,"mutability":"mutable","name":"store","nameLocation":"10378:5:12","nodeType":"VariableDeclaration","scope":2109,"src":"10361:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2093,"nodeType":"ArrayTypeName","src":"10361:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2099,"initialValue":{"arguments":[{"expression":{"id":2096,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10394:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"10394:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2095,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"10386:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:12"},{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"result","nameLocation":"10432:6:12","nodeType":"VariableDeclaration","scope":2109,"src":"10415:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2103,"nodeType":"ArrayTypeName","src":"10415:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2105,"nodeType":"VariableDeclarationStatement","src":"10415:23:12"},{"AST":{"nativeSrc":"10501:39:12","nodeType":"YulBlock","src":"10501:39:12","statements":[{"nativeSrc":"10515:15:12","nodeType":"YulAssignment","src":"10515:15:12","value":{"name":"store","nativeSrc":"10525:5:12","nodeType":"YulIdentifier","src":"10525:5:12"},"variableNames":[{"name":"result","nativeSrc":"10515:6:12","nodeType":"YulIdentifier","src":"10515:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2104,"isOffset":false,"isSlot":false,"src":"10515:6:12","valueSize":1},{"declaration":2094,"isOffset":false,"isSlot":false,"src":"10525:5:12","valueSize":1}],"id":2106,"nodeType":"InlineAssembly","src":"10492:48:12"},{"expression":{"id":2107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"10557:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2089,"id":2108,"nodeType":"Return","src":"10550:13:12"}]},"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"9736:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:12","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"set","nameLocation":"10305:3:12","nodeType":"VariableDeclaration","scope":2110,"src":"10286:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2083,"nodeType":"UserDefinedTypeName","pathNode":{"id":2082,"name":"AddressSet","nameLocations":["10286:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"10286:10:12"},"referencedDeclaration":1957,"src":"10286:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:12"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"10333:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2087,"nodeType":"ArrayTypeName","src":"10333:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:12"},"scope":2244,"src":"10270:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2114,"members":[{"constant":false,"id":2113,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:12","nodeType":"VariableDeclaration","scope":2114,"src":"10617:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"Set","nameLocations":["10617:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"10617:3:12"},"referencedDeclaration":1642,"src":"10617:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:12","nodeType":"StructDefinition","scope":2244,"src":"10592:42:12","visibility":"public"},{"body":{"id":2134,"nodeType":"Block","src":"10877:56:12","statements":[{"expression":{"arguments":[{"expression":{"id":2126,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10899:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"10899:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10919:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:12","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2125,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"10894:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2124,"id":2133,"nodeType":"Return","src":"10887:39:12"}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"10640:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:12","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"set","nameLocation":"10833:3:12","nodeType":"VariableDeclaration","scope":2135,"src":"10817:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2117,"nodeType":"UserDefinedTypeName","pathNode":{"id":2116,"name":"UintSet","nameLocations":["10817:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"10817:7:12"},"referencedDeclaration":2114,"src":"10817:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"value","nameLocation":"10846:5:12","nodeType":"VariableDeclaration","scope":2135,"src":"10838:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:12"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"10871:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2122,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:12"},"scope":2244,"src":"10804:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"11177:59:12","statements":[{"expression":{"arguments":[{"expression":{"id":2147,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"11202:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"11202:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"11222:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:12","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2146,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"11194:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2145,"id":2154,"nodeType":"Return","src":"11187:42:12"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"10939:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:12","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"set","nameLocation":"11133:3:12","nodeType":"VariableDeclaration","scope":2156,"src":"11117:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2138,"nodeType":"UserDefinedTypeName","pathNode":{"id":2137,"name":"UintSet","nameLocations":["11117:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"11117:7:12"},"referencedDeclaration":2114,"src":"11117:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"value","nameLocation":"11146:5:12","nodeType":"VariableDeclaration","scope":2156,"src":"11138:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:12"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"11171:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2143,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:12"},"scope":2244,"src":"11101:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"11400:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":2168,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11427:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"11427:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11447:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:12","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2167,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"11417:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2166,"id":2175,"nodeType":"Return","src":"11410:44:12"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"11242:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:12","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"set","nameLocation":"11351:3:12","nodeType":"VariableDeclaration","scope":2177,"src":"11335:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2159,"nodeType":"UserDefinedTypeName","pathNode":{"id":2158,"name":"UintSet","nameLocations":["11335:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"11335:7:12"},"referencedDeclaration":2114,"src":"11335:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"value","nameLocation":"11364:5:12","nodeType":"VariableDeclaration","scope":2177,"src":"11356:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:12"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"11394:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2164,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:12"},"scope":2244,"src":"11317:144:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"11611:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2187,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"11636:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"11636:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2186,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"11628:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2185,"id":2190,"nodeType":"Return","src":"11621:26:12"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"11467:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:12","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"set","nameLocation":"11574:3:12","nodeType":"VariableDeclaration","scope":2192,"src":"11558:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2180,"nodeType":"UserDefinedTypeName","pathNode":{"id":2179,"name":"UintSet","nameLocations":["11558:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"11558:7:12"},"referencedDeclaration":2114,"src":"11558:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:12"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"11602:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:12"},"scope":2244,"src":"11542:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"12076:55:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2206,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"12105:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"12105:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2208,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"12117:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2205,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"12101:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:12","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2202,"id":2211,"nodeType":"Return","src":"12086:38:12"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"11660:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:12","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"set","nameLocation":"12024:3:12","nodeType":"VariableDeclaration","scope":2213,"src":"12008:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"UintSet","nameLocations":["12008:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"12008:7:12"},"referencedDeclaration":2114,"src":"12008:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"index","nameLocation":"12037:5:12","nodeType":"VariableDeclaration","scope":2213,"src":"12029:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:12"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2213,"src":"12067:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:12"},"scope":2244,"src":"11996:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2242,"nodeType":"Block","src":"12749:219:12","statements":[{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"store","nameLocation":"12776:5:12","nodeType":"VariableDeclaration","scope":2242,"src":"12759:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2226,"nodeType":"ArrayTypeName","src":"12759:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2232,"initialValue":{"arguments":[{"expression":{"id":2229,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"12792:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2113,"src":"12792:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1642_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2228,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"12784:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1642_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:12"},{"assignments":[2237],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"result","nameLocation":"12830:6:12","nodeType":"VariableDeclaration","scope":2242,"src":"12813:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2236,"nodeType":"ArrayTypeName","src":"12813:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2238,"nodeType":"VariableDeclarationStatement","src":"12813:23:12"},{"AST":{"nativeSrc":"12899:39:12","nodeType":"YulBlock","src":"12899:39:12","statements":[{"nativeSrc":"12913:15:12","nodeType":"YulAssignment","src":"12913:15:12","value":{"name":"store","nativeSrc":"12923:5:12","nodeType":"YulIdentifier","src":"12923:5:12"},"variableNames":[{"name":"result","nativeSrc":"12913:6:12","nodeType":"YulIdentifier","src":"12913:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2237,"isOffset":false,"isSlot":false,"src":"12913:6:12","valueSize":1},{"declaration":2227,"isOffset":false,"isSlot":false,"src":"12923:5:12","valueSize":1}],"id":2239,"nodeType":"InlineAssembly","src":"12890:48:12"},{"expression":{"id":2240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"12955:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2222,"id":2241,"nodeType":"Return","src":"12948:13:12"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"12137:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2243,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:12","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"set","nameLocation":"12703:3:12","nodeType":"VariableDeclaration","scope":2243,"src":"12687:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2216,"nodeType":"UserDefinedTypeName","pathNode":{"id":2215,"name":"UintSet","nameLocations":["12687:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2114,"src":"12687:7:12"},"referencedDeclaration":2114,"src":"12687:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2114_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:12"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2243,"src":"12731:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2220,"nodeType":"ArrayTypeName","src":"12731:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:12"},"scope":2244,"src":"12671:297:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2245,"src":"1330:11640:12","usedErrors":[],"usedEvents":[]}],"src":"205:12766:12"},"id":12},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[2327]},"id":2328,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2246,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Factory","contractDependencies":[],"contractKind":"interface","documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"71:163:13","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":2327,"linearizedBaseContracts":[2327],"name":"IUniswapV3Factory","nameLocation":"244:17:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"268:185:13","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"eventSelector":"b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c","id":2254,"name":"OwnerChanged","nameLocation":"464:12:13","nodeType":"EventDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:13","nodeType":"VariableDeclaration","scope":2254,"src":"477:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2252,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:13","nodeType":"VariableDeclaration","scope":2254,"src":"503:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:13"},"src":"458:71:13"},{"anonymous":false,"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"535:421:13","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"eventSelector":"783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118","id":2267,"name":"PoolCreated","nameLocation":"967:11:13","nodeType":"EventDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:13","nodeType":"VariableDeclaration","scope":2267,"src":"988:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:13","nodeType":"VariableDeclaration","scope":2267,"src":"1020:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:13","nodeType":"VariableDeclaration","scope":2267,"src":"1052:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2260,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2263,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:13","nodeType":"VariableDeclaration","scope":2267,"src":"1080:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2262,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2265,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:13","nodeType":"VariableDeclaration","scope":2267,"src":"1107:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:13"},"src":"961:165:13"},{"anonymous":false,"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"1132:275:13","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"eventSelector":"c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc","id":2274,"name":"FeeAmountEnabled","nameLocation":"1418:16:13","nodeType":"EventDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:13","nodeType":"VariableDeclaration","scope":2274,"src":"1435:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2269,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2272,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:13","nodeType":"VariableDeclaration","scope":2274,"src":"1455:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2271,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:13"},"src":"1412:70:13"},{"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"1488:163:13","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":2280,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:13","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[],"src":"1670:2:13"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"1696:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:13"},"scope":2327,"src":"1656:49:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"1711:348:13","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":2288,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:13","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"fee","nameLocation":"2101:3:13","nodeType":"VariableDeclaration","scope":2288,"src":"2094:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2282,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:13"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2288,"src":"2129:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2285,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:13"},"scope":2327,"src":"2064:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"2142:471:13","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":2300,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:13","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:13","nodeType":"VariableDeclaration","scope":2300,"src":"2644:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:13","nodeType":"VariableDeclaration","scope":2300,"src":"2668:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"fee","nameLocation":"2699:3:13","nodeType":"VariableDeclaration","scope":2300,"src":"2692:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2294,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:13"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"pool","nameLocation":"2740:4:13","nodeType":"VariableDeclaration","scope":2300,"src":"2732:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:13"},"scope":2327,"src":"2618:128:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"2752:554:13","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":2312,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:13","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:13","nodeType":"VariableDeclaration","scope":2312,"src":"3340:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:13","nodeType":"VariableDeclaration","scope":2312,"src":"3364:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"fee","nameLocation":"3395:3:13","nodeType":"VariableDeclaration","scope":2312,"src":"3388:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2306,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:13"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"pool","nameLocation":"3431:4:13","nodeType":"VariableDeclaration","scope":2312,"src":"3423:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:13"},"scope":2327,"src":"3311:126:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"3443:144:13","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":2318,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:13","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:13","nodeType":"VariableDeclaration","scope":2318,"src":"3610:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:13"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[],"src":"3634:0:13"},"scope":2327,"src":"3592:43:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"3641:326:13","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":2326,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:13","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"fee","nameLocation":"4004:3:13","nodeType":"VariableDeclaration","scope":2326,"src":"3997:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2320,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:13","nodeType":"VariableDeclaration","scope":2326,"src":"4009:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2322,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:13"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[],"src":"4036:0:13"},"scope":2327,"src":"3972:65:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2328,"src":"234:3805:13","usedErrors":[],"usedEvents":[2254,2267,2274]}],"src":"45:3995:13"},"id":13},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[2341]},"id":2342,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2329,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"71:144:14","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":2341,"linearizedBaseContracts":[2341],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"254:898:14","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":2340,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:14","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:14","nodeType":"VariableDeclaration","scope":2340,"src":"1197:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2332,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:14","nodeType":"VariableDeclaration","scope":2340,"src":"1226:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2334,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"data","nameLocation":"1270:4:14","nodeType":"VariableDeclaration","scope":2340,"src":"1255:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2336,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:14"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[],"src":"1289:0:14"},"scope":2341,"src":"1157:133:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2342,"src":"215:1077:14","usedErrors":[],"usedEvents":[]}],"src":"45:1248:14"},"id":14},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[2441],"IUniswapV3SwapCallback":[2341]},"id":2442,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2343,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:15"},{"id":2344,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:15"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":2345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2442,"sourceUnit":2342,"src":"91:83:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2347,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:15"],"nodeType":"IdentifierPath","referencedDeclaration":2341,"src":"305:22:15"},"id":2348,"nodeType":"InheritanceSpecifier","src":"305:22:15"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"176:104:15","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":2441,"linearizedBaseContracts":[2441,2341],"name":"ISwapRouter","nameLocation":"290:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":2365,"members":[{"constant":false,"id":2350,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:15","nodeType":"VariableDeclaration","scope":2365,"src":"374:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:15","nodeType":"VariableDeclaration","scope":2365,"src":"399:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"fee","nameLocation":"432:3:15","nodeType":"VariableDeclaration","scope":2365,"src":"425:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2353,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"recipient","nameLocation":"453:9:15","nodeType":"VariableDeclaration","scope":2365,"src":"445:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"deadline","nameLocation":"480:8:15","nodeType":"VariableDeclaration","scope":2365,"src":"472:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:15","nodeType":"VariableDeclaration","scope":2365,"src":"498:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:15","nodeType":"VariableDeclaration","scope":2365,"src":"524:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:15","nodeType":"VariableDeclaration","scope":2365,"src":"558:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2363,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:15","nodeType":"StructDefinition","scope":2441,"src":"334:256:15","visibility":"public"},{"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"596:250:15","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":2374,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:15","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"params","nameLocation":"909:6:15","nodeType":"VariableDeclaration","scope":2374,"src":"877:38:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"ExactInputSingleParams","nameLocations":["877:22:15"],"nodeType":"IdentifierPath","referencedDeclaration":2365,"src":"877:22:15"},"referencedDeclaration":2365,"src":"877:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:15"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:15","nodeType":"VariableDeclaration","scope":2374,"src":"943:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:15"},"scope":2441,"src":"851:111:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":2385,"members":[{"constant":false,"id":2376,"mutability":"mutable","name":"path","nameLocation":"1008:4:15","nodeType":"VariableDeclaration","scope":2385,"src":"1002:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2375,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:15","nodeType":"VariableDeclaration","scope":2385,"src":"1022:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:15","nodeType":"VariableDeclaration","scope":2385,"src":"1049:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:15","nodeType":"VariableDeclaration","scope":2385,"src":"1075:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:15","nodeType":"VariableDeclaration","scope":2385,"src":"1101:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:15","nodeType":"StructDefinition","scope":2441,"src":"968:164:15","visibility":"public"},{"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"1138:273:15","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":2394,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:15","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"params","nameLocation":"1462:6:15","nodeType":"VariableDeclaration","scope":2394,"src":"1436:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2385_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":2388,"nodeType":"UserDefinedTypeName","pathNode":{"id":2387,"name":"ExactInputParams","nameLocations":["1436:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":2385,"src":"1436:16:15"},"referencedDeclaration":2385,"src":"1436:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2385_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:15"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:15","nodeType":"VariableDeclaration","scope":2394,"src":"1496:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:15"},"scope":2441,"src":"1416:99:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":2411,"members":[{"constant":false,"id":2396,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:15","nodeType":"VariableDeclaration","scope":2411,"src":"1562:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:15","nodeType":"VariableDeclaration","scope":2411,"src":"1587:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"fee","nameLocation":"1620:3:15","nodeType":"VariableDeclaration","scope":2411,"src":"1613:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2399,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:15","nodeType":"VariableDeclaration","scope":2411,"src":"1633:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:15","nodeType":"VariableDeclaration","scope":2411,"src":"1660:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:15","nodeType":"VariableDeclaration","scope":2411,"src":"1686:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:15","nodeType":"VariableDeclaration","scope":2411,"src":"1713:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:15","nodeType":"VariableDeclaration","scope":2411,"src":"1746:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2409,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:15","nodeType":"StructDefinition","scope":2441,"src":"1521:257:15","visibility":"public"},{"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"1784:250:15","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":2420,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:15","nodeType":"FunctionDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"params","nameLocation":"2099:6:15","nodeType":"VariableDeclaration","scope":2420,"src":"2066:39:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2411_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":2414,"nodeType":"UserDefinedTypeName","pathNode":{"id":2413,"name":"ExactOutputSingleParams","nameLocations":["2066:23:15"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"2066:23:15"},"referencedDeclaration":2411,"src":"2066:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2411_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:15"},"returnParameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:15","nodeType":"VariableDeclaration","scope":2420,"src":"2133:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:15"},"scope":2441,"src":"2039:112:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":2431,"members":[{"constant":false,"id":2422,"mutability":"mutable","name":"path","nameLocation":"2198:4:15","nodeType":"VariableDeclaration","scope":2431,"src":"2192:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2421,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:15","nodeType":"VariableDeclaration","scope":2431,"src":"2212:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:15","nodeType":"VariableDeclaration","scope":2431,"src":"2239:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:15","nodeType":"VariableDeclaration","scope":2431,"src":"2265:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:15","nodeType":"VariableDeclaration","scope":2431,"src":"2292:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:15","nodeType":"StructDefinition","scope":2441,"src":"2157:165:15","visibility":"public"},{"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"2328:284:15","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":2440,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:15","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"params","nameLocation":"2665:6:15","nodeType":"VariableDeclaration","scope":2440,"src":"2638:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2431_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":2434,"nodeType":"UserDefinedTypeName","pathNode":{"id":2433,"name":"ExactOutputParams","nameLocations":["2638:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"2638:17:15"},"referencedDeclaration":2431,"src":"2638:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2431_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:15"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:15","nodeType":"VariableDeclaration","scope":2440,"src":"2699:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:15"},"scope":2441,"src":"2617:100:15","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2442,"src":"280:2439:15","usedErrors":[],"usedEvents":[]}],"src":"45:2675:15"},"id":15},"contracts/community/Pool.sol":{"ast":{"absolutePath":"contracts/community/Pool.sol","exportedSymbols":{"Address":[1532],"AggregatorV3Interface":[45],"IERC20":[927],"IVault":[7979],"IWETH":[7999],"Oracle":[7912],"Pool":[3380],"ReentrancyGuard":[1631]},"id":3381,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2443,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:16"},{"absolutePath":"contracts/helpers/Oracle.sol","file":"../helpers/Oracle.sol","id":2444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3381,"sourceUnit":7913,"src":"58:31:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3381,"sourceUnit":1632,"src":"91:59:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":2446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3381,"sourceUnit":1533,"src":"152:51:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWETH.sol","file":"../interfaces/IWETH.sol","id":2447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3381,"sourceUnit":8000,"src":"205:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IVault.sol","file":"../interfaces/IVault.sol","id":2448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3381,"sourceUnit":7980,"src":"240:34:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3381,"sourceUnit":928,"src":"276:56:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2450,"name":"ReentrancyGuard","nameLocations":["353:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"353:15:16"},"id":2451,"nodeType":"InheritanceSpecifier","src":"353:15:16"}],"canonicalName":"Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3380,"linearizedBaseContracts":[3380,1631],"name":"Pool","nameLocation":"345:4:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"7dc0d1d0","id":2454,"mutability":"mutable","name":"oracle","nameLocation":"387:6:16","nodeType":"VariableDeclaration","scope":3380,"src":"373:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"Oracle","nameLocations":["373:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":7912,"src":"373:6:16"},"referencedDeclaration":7912,"src":"373:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"visibility":"public"},{"canonicalName":"Pool.Coin","id":2456,"members":[{"id":2455,"name":"MATIC","nameLocation":"414:5:16","nodeType":"EnumValue","src":"414:5:16"}],"name":"Coin","nameLocation":"404:4:16","nodeType":"EnumDefinition","src":"399:24:16"},{"canonicalName":"Pool.Prediction","id":2476,"members":[{"constant":false,"id":2458,"mutability":"mutable","name":"predictor","nameLocation":"459:9:16","nodeType":"VariableDeclaration","scope":2476,"src":"451:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"token","nameLocation":"478:5:16","nodeType":"VariableDeclaration","scope":2476,"src":"473:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"},"typeName":{"id":2460,"nodeType":"UserDefinedTypeName","pathNode":{"id":2459,"name":"Coin","nameLocations":["473:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":2456,"src":"473:4:16"},"referencedDeclaration":2456,"src":"473:4:16","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"predictedPrice","nameLocation":"496:14:16","nodeType":"VariableDeclaration","scope":2476,"src":"488:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"actualPrice","nameLocation":"523:11:16","nodeType":"VariableDeclaration","scope":2476,"src":"515:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"resolvedPrice","nameLocation":"547:13:16","nodeType":"VariableDeclaration","scope":2476,"src":"539:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"difference","nameLocation":"573:10:16","nodeType":"VariableDeclaration","scope":2476,"src":"565:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"timestamp","nameLocation":"596:9:16","nodeType":"VariableDeclaration","scope":2476,"src":"588:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"endTime","nameLocation":"618:7:16","nodeType":"VariableDeclaration","scope":2476,"src":"610:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"resolved","nameLocation":"635:8:16","nodeType":"VariableDeclaration","scope":2476,"src":"630:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"630:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Prediction","nameLocation":"435:10:16","nodeType":"StructDefinition","scope":3380,"src":"428:220:16","visibility":"public"},{"constant":false,"functionSelector":"004fbbb0","id":2480,"mutability":"mutable","name":"predictions","nameLocation":"673:11:16","nodeType":"VariableDeclaration","scope":3380,"src":"653:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction[]"},"typeName":{"baseType":{"id":2478,"nodeType":"UserDefinedTypeName","pathNode":{"id":2477,"name":"Prediction","nameLocations":["653:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"653:10:16"},"referencedDeclaration":2476,"src":"653:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":2479,"nodeType":"ArrayTypeName","src":"653:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}},"visibility":"public"},{"constant":false,"functionSelector":"2cebdeb2","id":2483,"mutability":"mutable","name":"wnative","nameLocation":"703:7:16","nodeType":"VariableDeclaration","scope":3380,"src":"690:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"IWETH","nameLocations":["690:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":7999,"src":"690:5:16"},"referencedDeclaration":7999,"src":"690:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}},"visibility":"public"},{"constant":false,"functionSelector":"9db5df46","id":2486,"mutability":"mutable","name":"yearnVault","nameLocation":"728:10:16","nodeType":"VariableDeclaration","scope":3380,"src":"714:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"},"typeName":{"id":2485,"nodeType":"UserDefinedTypeName","pathNode":{"id":2484,"name":"IVault","nameLocations":["714:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":7979,"src":"714:6:16"},"referencedDeclaration":7979,"src":"714:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}},"visibility":"public"},{"constant":false,"functionSelector":"cd634792","id":2489,"mutability":"mutable","name":"submissionBaseFee","nameLocation":"759:17:16","nodeType":"VariableDeclaration","scope":3380,"src":"744:45:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:10:16","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":false,"functionSelector":"80450cde","id":2492,"mutability":"mutable","name":"submissionStepFee","nameLocation":"808:17:16","nodeType":"VariableDeclaration","scope":3380,"src":"793:46:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e303031","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:11:16","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"0.001"},"visibility":"public"},{"constant":false,"functionSelector":"70246a1e","id":2495,"mutability":"mutable","name":"predictionDuration","nameLocation":"858:18:16","nodeType":"VariableDeclaration","scope":3380,"src":"843:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:6:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"71d61cd5","id":2498,"mutability":"mutable","name":"resolutionLimit","nameLocation":"904:15:16","nodeType":"VariableDeclaration","scope":3380,"src":"889:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"922:10:16","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_600_by_1","typeString":"int_const 600"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"44ed9f66","id":2501,"mutability":"mutable","name":"exitLimit","nameLocation":"951:9:16","nodeType":"VariableDeclaration","scope":3380,"src":"936:33:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"963:6:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":false,"functionSelector":"779bd562","id":2504,"mutability":"mutable","name":"totalPredictions","nameLocation":"988:16:16","nodeType":"VariableDeclaration","scope":3380,"src":"973:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"e75e454e","id":2507,"mutability":"mutable","name":"totalDistribution","nameLocation":"1027:17:16","nodeType":"VariableDeclaration","scope":3380,"src":"1012:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1047:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"037361e9","id":2511,"mutability":"mutable","name":"distributionCounter","nameLocation":"1089:19:16","nodeType":"VariableDeclaration","scope":3380,"src":"1054:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2510,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1054:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"624d7b72","id":2515,"mutability":"mutable","name":"lastWithdraw","nameLocation":"1147:12:16","nodeType":"VariableDeclaration","scope":3380,"src":"1112:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2514,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1112:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1131:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"600bebf5","id":2519,"mutability":"mutable","name":"userSubmissionFees","nameLocation":"1198:18:16","nodeType":"VariableDeclaration","scope":3380,"src":"1163:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2518,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2516,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1163:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1182:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"046796fc72779cbabd1ea8b64c35f18f13d4d3d4693526deb779040b773c311b","id":2534,"name":"PredictionRegistered","nameLocation":"1228:20:16","nodeType":"EventDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"indexed":true,"mutability":"mutable","name":"predictor","nameLocation":"1269:9:16","nodeType":"VariableDeclaration","scope":2534,"src":"1253:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2524,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1288:5:16","nodeType":"VariableDeclaration","scope":2534,"src":"1283:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"},"typeName":{"id":2523,"nodeType":"UserDefinedTypeName","pathNode":{"id":2522,"name":"Coin","nameLocations":["1283:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":2456,"src":"1283:4:16"},"referencedDeclaration":2456,"src":"1283:4:16","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"}},"visibility":"internal"},{"constant":false,"id":2526,"indexed":false,"mutability":"mutable","name":"predictedPrice","nameLocation":"1306:14:16","nodeType":"VariableDeclaration","scope":2534,"src":"1298:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2528,"indexed":false,"mutability":"mutable","name":"actualPrice","nameLocation":"1333:11:16","nodeType":"VariableDeclaration","scope":2534,"src":"1325:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2530,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1357:9:16","nodeType":"VariableDeclaration","scope":2534,"src":"1349:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1379:7:16","nodeType":"VariableDeclaration","scope":2534,"src":"1371:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:142:16"},"src":"1222:169:16"},{"anonymous":false,"eventSelector":"1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337","id":2540,"name":"RewardWithdrawn","nameLocation":"1400:15:16","nodeType":"EventDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"indexed":true,"mutability":"mutable","name":"predictor","nameLocation":"1432:9:16","nodeType":"VariableDeclaration","scope":2540,"src":"1416:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"1416:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1451:6:16","nodeType":"VariableDeclaration","scope":2540,"src":"1443:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1415:43:16"},"src":"1394:65:16"},{"body":{"id":2569,"nodeType":"Block","src":"1570:108:16","statements":[{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2551,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1575:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2553,"name":"_oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"1591:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2552,"name":"Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"1584:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Oracle_$7912_$","typeString":"type(contract Oracle)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"src":"1575:31:16","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"id":2556,"nodeType":"ExpressionStatement","src":"1575:31:16"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2557,"name":"wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1611:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2559,"name":"_wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"1627:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2558,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"1621:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$7999_$","typeString":"type(contract IWETH)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1621:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}},"src":"1611:25:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}},"id":2562,"nodeType":"ExpressionStatement","src":"1611:25:16"},{"expression":{"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2563,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"1641:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2565,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"1661:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2564,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7979,"src":"1654:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$7979_$","typeString":"type(contract IVault)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}},"src":"1641:32:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}},"id":2568,"nodeType":"ExpressionStatement","src":"1641:32:16"}]},"id":2570,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":2549,"kind":"baseConstructorSpecifier","modifierName":{"id":2548,"name":"ReentrancyGuard","nameLocations":["1552:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"1552:15:16"},"nodeType":"ModifierInvocation","src":"1552:17:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"_oracleAddress","nameLocation":"1488:14:16","nodeType":"VariableDeclaration","scope":2570,"src":"1480:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"_wnative","nameLocation":"1515:8:16","nodeType":"VariableDeclaration","scope":2570,"src":"1507:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"1507:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"_yearnVault","nameLocation":"1536:11:16","nodeType":"VariableDeclaration","scope":2570,"src":"1528:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1475:76:16"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"1570:0:16"},"scope":3380,"src":"1464:214:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2580,"nodeType":"Block","src":"1741:47:16","statements":[{"expression":{"baseExpression":{"id":2575,"name":"userSubmissionFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"1753:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2578,"indexExpression":{"expression":{"id":2576,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1772:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1776:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1772:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1753:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2574,"id":2579,"nodeType":"Return","src":"1746:37:16"}]},"functionSelector":"f9be8523","id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"getSubmissionFee","nameLocation":"1692:16:16","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"1708:2:16"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2581,"src":"1732:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1731:9:16"},"scope":3380,"src":"1683:105:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2703,"nodeType":"Block","src":"1862:873:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1875:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1879:5:16","memberName":"value","nodeType":"MemberAccess","src":"1875:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2592,"name":"submissionBaseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"1888:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1875:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520616d6f756e74","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1907:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_133f65a616a2f21d8162fa86c0e0ac7bde2960a9da4213cedbc33e7b1e844c14","typeString":"literal_string \"Invalid fee amount\""},"value":"Invalid fee amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_133f65a616a2f21d8162fa86c0e0ac7bde2960a9da4213cedbc33e7b1e844c14","typeString":"literal_string \"Invalid fee amount\""}],"id":2589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1867:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"ExpressionStatement","src":"1867:61:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1946:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1950:5:16","memberName":"value","nodeType":"MemberAccess","src":"1946:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":2600,"name":"userSubmissionFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"1959:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2603,"indexExpression":{"expression":{"id":2601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1978:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1982:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1978:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1959:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1946:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520616d6f756e74","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1995:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_133f65a616a2f21d8162fa86c0e0ac7bde2960a9da4213cedbc33e7b1e844c14","typeString":"literal_string \"Invalid fee amount\""},"value":"Invalid fee amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_133f65a616a2f21d8162fa86c0e0ac7bde2960a9da4213cedbc33e7b1e844c14","typeString":"literal_string \"Invalid fee amount\""}],"id":2597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1933:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2607,"nodeType":"ExpressionStatement","src":"1933:87:16"},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2608,"name":"userSubmissionFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2027:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2611,"indexExpression":{"expression":{"id":2609,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2046:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2050:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2046:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2027:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2612,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2060:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2064:5:16","memberName":"value","nodeType":"MemberAccess","src":"2060:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2027:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2615,"nodeType":"ExpressionStatement","src":"2027:42:16"},{"expression":{"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2616,"name":"userSubmissionFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2074:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2619,"indexExpression":{"expression":{"id":2617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2093:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2097:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2093:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2074:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2620,"name":"submissionStepFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2108:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2074:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2622,"nodeType":"ExpressionStatement","src":"2074:51:16"},{"assignments":[2624],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"price","nameLocation":"2140:5:16","nodeType":"VariableDeclaration","scope":2703,"src":"2132:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2132:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2630,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2625,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2148:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2155:14:16","memberName":"getLatestPrice","nodeType":"MemberAccess","referencedDeclaration":7911,"src":"2148:21:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653130","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2174:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"src":"2148:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2132:46:16"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2635,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2224:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2228:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2224:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2637,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2241:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"}},{"id":2638,"name":"_predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"2254:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2639,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"2276:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2288:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2642,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2304:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2310:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2304:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2644,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2326:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2332:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2326:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2646,"name":"predictionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2344:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2326:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2369:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2634,"name":"Prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2207:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Prediction_$2476_storage_ptr_$","typeString":"type(struct Pool.Prediction storage pointer)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2207:173:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction memory"}],"expression":{"id":2631,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2185:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2197:4:16","memberName":"push","nodeType":"MemberAccess","src":"2185:16:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr_$_t_struct$_Prediction_$2476_storage_$returns$__$attached_to$_t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr_$","typeString":"function (struct Pool.Prediction storage ref[] storage pointer,struct Pool.Prediction storage ref)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2185:200:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2651,"nodeType":"ExpressionStatement","src":"2185:200:16"},{"expression":{"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2392:18:16","subExpression":{"id":2652,"name":"totalPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"2392:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2654,"nodeType":"ExpressionStatement","src":"2392:18:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":2655,"name":"wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2415:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2423:7:16","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":7984,"src":"2415:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2439:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2443:5:16","memberName":"value","nodeType":"MemberAccess","src":"2439:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2415:35:16","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"2415:37:16"},{"expression":{"arguments":[{"arguments":[{"id":2672,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"2498:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2490:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"2490:7:16","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2490:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2511:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:5:16","memberName":"value","nodeType":"MemberAccess","src":"2511:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2666,"name":"wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2472:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}],"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2464:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:16","typeDescriptions":{}}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2663,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2457:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2482:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":914,"src":"2457:32:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2677,"nodeType":"ExpressionStatement","src":"2457:64:16"},{"expression":{"arguments":[{"expression":{"id":2681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2545:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2549:5:16","memberName":"value","nodeType":"MemberAccess","src":"2545:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2564:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2556:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"2556:7:16","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2678,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"2526:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2537:7:16","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":7961,"src":"2526:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2688,"nodeType":"ExpressionStatement","src":"2526:44:16"},{"eventCall":{"arguments":[{"expression":{"id":2690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2608:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2612:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2608:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2692,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2624:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"}},{"id":2693,"name":"_predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"2636:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2694,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"2657:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2695,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2668:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2668:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2697,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2689:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2695:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2689:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2699,"name":"predictionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2707:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2689:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2689,"name":"PredictionRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"2582:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Coin_$2456_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,enum Pool.Coin,uint256,uint256,uint256,uint256)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:148:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2702,"nodeType":"EmitStatement","src":"2577:153:16"}]},"functionSelector":"4ce93cc8","id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"submit","nameLocation":"1802:6:16","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"_token","nameLocation":"1814:6:16","nodeType":"VariableDeclaration","scope":2704,"src":"1809:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"},"typeName":{"id":2583,"nodeType":"UserDefinedTypeName","pathNode":{"id":2582,"name":"Coin","nameLocations":["1809:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":2456,"src":"1809:4:16"},"referencedDeclaration":2456,"src":"1809:4:16","typeDescriptions":{"typeIdentifier":"t_enum$_Coin_$2456","typeString":"enum Pool.Coin"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"_predictedPrice","nameLocation":"1830:15:16","nodeType":"VariableDeclaration","scope":2704,"src":"1822:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1808:38:16"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[],"src":"1862:0:16"},"scope":3380,"src":"1793:942:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2837,"nodeType":"Block","src":"2763:979:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2708,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2781:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2787:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"2781:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":2710,"name":"lastWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2799:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2713,"indexExpression":{"expression":{"id":2711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2812:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2816:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2812:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2799:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2781:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2715,"name":"exitLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2827:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2781:55:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5761697420666f7220657869744c696d6974206265666f7265206e657874207769746864726177","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c047c31d86d5b631170ccf68de07fe26dd2a4aed0b2e4e202e213c0596b7655b","typeString":"literal_string \"Wait for exitLimit before next withdraw\""},"value":"Wait for exitLimit before next withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c047c31d86d5b631170ccf68de07fe26dd2a4aed0b2e4e202e213c0596b7655b","typeString":"literal_string \"Wait for exitLimit before next withdraw\""}],"id":2707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2768:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:120:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2719,"nodeType":"ExpressionStatement","src":"2768:120:16"},{"assignments":[2721],"declarations":[{"constant":false,"id":2721,"mutability":"mutable","name":"reward","nameLocation":"2903:6:16","nodeType":"VariableDeclaration","scope":2837,"src":"2895:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2895:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2726,"initialValue":{"arguments":[{"expression":{"id":2723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2928:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2932:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2928:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2722,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2912:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2895:44:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2954:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2963:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2954:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2072657761726420617661696c61626c65","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2966:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382","typeString":"literal_string \"No reward available\""},"value":"No reward available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382","typeString":"literal_string \"No reward available\""}],"id":2727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2946:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2946:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2733,"nodeType":"ExpressionStatement","src":"2946:42:16"},{"expression":{"arguments":[{"arguments":[{"id":2743,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"3039:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}],"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3031:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"3031:7:16","typeDescriptions":{}}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2745,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3052:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2737,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"3010:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3002:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2735,"name":"address","nodeType":"ElementaryTypeName","src":"3002:7:16","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3002:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2734,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2995:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":914,"src":"2995:35:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"ExpressionStatement","src":"2995:64:16"},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"ctxBalanceB4","nameLocation":"3074:12:16","nodeType":"VariableDeclaration","scope":2837,"src":"3066:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3066:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2755,"initialValue":{"expression":{"arguments":[{"id":2752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3097:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3089:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"3089:7:16","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3089:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3103:7:16","memberName":"balance","nodeType":"MemberAccess","src":"3089:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3066:44:16"},{"expression":{"arguments":[{"id":2759,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3135:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2762,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3151:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3143:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:16","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2766,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3166:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3158:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:16","typeDescriptions":{}}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3158:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"323030","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"}],"expression":{"id":2756,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"3115:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3126:8:16","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":7975,"src":"3115:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256) external"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3115:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2770,"nodeType":"ExpressionStatement","src":"3115:62:16"},{"assignments":[2772],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"ctxBalanceAfter","nameLocation":"3190:15:16","nodeType":"VariableDeclaration","scope":2837,"src":"3182:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3182:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2778,"initialValue":{"expression":{"arguments":[{"id":2775,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3216:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}],"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3208:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:16","typeDescriptions":{}}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3222:7:16","memberName":"balance","nodeType":"MemberAccess","src":"3208:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3182:47:16"},{"assignments":[2780],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"rewardToTransfer","nameLocation":"3242:16:16","nodeType":"VariableDeclaration","scope":2837,"src":"3234:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"ctxBalanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"3261:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2782,"name":"ctxBalanceB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"3279:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3234:57:16"},{"expression":{"arguments":[{"id":2788,"name":"rewardToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"3315:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2785,"name":"wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"3298:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$7999","typeString":"contract IWETH"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3306:8:16","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":7998,"src":"3298:16:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3298:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2790,"nodeType":"ExpressionStatement","src":"3298:34:16"},{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"totalPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3422:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":2792,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3442:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2795,"indexExpression":{"expression":{"id":2793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3462:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3466:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3462:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3442:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2797,"nodeType":"ExpressionStatement","src":"3422:51:16"},{"expression":{"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2798,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3478:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2801,"indexExpression":{"expression":{"id":2799,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3498:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3502:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3498:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3478:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3512:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3478:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2804,"nodeType":"ExpressionStatement","src":"3478:35:16"},{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2805,"name":"lastWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3518:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2808,"indexExpression":{"expression":{"id":2806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3531:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3535:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3531:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3518:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2809,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3545:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3551:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"3545:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3518:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"3518:42:16"},{"expression":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2813,"name":"userSubmissionFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"3567:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2816,"indexExpression":{"expression":{"id":2814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3586:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3590:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3586:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3567:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2817,"name":"submissionBaseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"3600:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3567:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2819,"nodeType":"ExpressionStatement","src":"3567:50:16"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2825,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3650:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3654:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3650:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3642:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"3642:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2828,"name":"rewardToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"3663:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2820,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3624:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1532_$","typeString":"type(library Address)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3632:9:16","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"3624:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3624:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2830,"nodeType":"ExpressionStatement","src":"3624:56:16"},{"eventCall":{"arguments":[{"expression":{"id":2832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3708:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3712:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3708:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2834,"name":"rewardToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"3720:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2831,"name":"RewardWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3692:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2836,"nodeType":"EmitStatement","src":"3687:50:16"}]},"functionSelector":"e9fad8ee","id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"exit","nameLocation":"2749:4:16","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[],"src":"2753:2:16"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[],"src":"2763:0:16"},"scope":3380,"src":"2740:1002:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2906,"nodeType":"Block","src":"3816:437:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2846,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3829:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2848,"indexExpression":{"id":2847,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"3849:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3829:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3829:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070726564696374696f6e73206d616465","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3860:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb13dd75d3d30dee58d508eea14c9cd2c64f92d588b7f980f5fa9aa952b1407f","typeString":"literal_string \"No predictions made\""},"value":"No predictions made"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb13dd75d3d30dee58d508eea14c9cd2c64f92d588b7f980f5fa9aa952b1407f","typeString":"literal_string \"No predictions made\""}],"id":2845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3821:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"3821:61:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"totalDistribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"3895:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3915:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3895:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207265776172647320617661696c61626c65","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3918:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040","typeString":"literal_string \"No rewards available\""},"value":"No rewards available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040","typeString":"literal_string \"No rewards available\""}],"id":2854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3887:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3887:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2860,"nodeType":"ExpressionStatement","src":"3887:54:16"},{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"userShare","nameLocation":"3954:9:16","nodeType":"VariableDeclaration","scope":2906,"src":"3946:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2871,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2863,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3967:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2865,"indexExpression":{"id":2864,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"3987:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3967:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3967:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3966:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2869,"name":"totalDistribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"4007:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3966:58:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3946:78:16"},{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"yeanBalance","nameLocation":"4037:11:16","nodeType":"VariableDeclaration","scope":2906,"src":"4029:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"4029:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2886,"initialValue":{"arguments":[{"arguments":[{"id":2883,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4102:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$3380","typeString":"contract Pool"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4094:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"4094:7:16","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2877,"name":"yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"4066:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$7979","typeString":"contract IVault"}],"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4058:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"4058:7:16","typeDescriptions":{}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2874,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4051:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4051:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4079:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4051:37:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4051:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4029:83:16"},{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"userBalance","nameLocation":"4125:11:16","nodeType":"VariableDeclaration","scope":2906,"src":"4117:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2895,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"yeanBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4140:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2890,"name":"userShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"4154:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4140:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4139:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4167:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"4139:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4117:54:16"},{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"userReward","nameLocation":"4184:10:16","nodeType":"VariableDeclaration","scope":2906,"src":"4176:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"4176:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"4197:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"4211:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4225:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4211:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4197:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4176:50:16"},{"expression":{"id":2904,"name":"userReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4238:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2844,"id":2905,"nodeType":"Return","src":"4231:17:16"}]},"functionSelector":"d82e3962","id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReward","nameLocation":"3756:15:16","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"user","nameLocation":"3780:4:16","nodeType":"VariableDeclaration","scope":2907,"src":"3772:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"3772:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3771:14:16"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2907,"src":"3807:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3807:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3806:9:16"},"scope":3380,"src":"3747:506:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2968,"nodeType":"Block","src":"4329:270:16","statements":[{"assignments":[2915],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"length","nameLocation":"4342:6:16","nodeType":"VariableDeclaration","scope":2968,"src":"4334:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2918,"initialValue":{"expression":{"id":2916,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"4351:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4363:6:16","memberName":"length","nodeType":"MemberAccess","src":"4351:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4334:35:16"},{"assignments":[2920],"declarations":[{"constant":false,"id":2920,"mutability":"mutable","name":"start","nameLocation":"4382:5:16","nodeType":"VariableDeclaration","scope":2968,"src":"4374:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2929,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4390:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4399:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4390:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4390:29:16","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4404:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3130","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4413:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4404:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4374:45:16"},{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"result","nameLocation":"4444:6:16","nodeType":"VariableDeclaration","scope":2968,"src":"4424:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction[]"},"typeName":{"baseType":{"id":2932,"nodeType":"UserDefinedTypeName","pathNode":{"id":2931,"name":"Prediction","nameLocations":["4424:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"4424:10:16"},"referencedDeclaration":2476,"src":"4424:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":2933,"nodeType":"ArrayTypeName","src":"4424:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}},"visibility":"internal"}],"id":2943,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4470:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2940,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4479:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4470:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4453:16:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pool.Prediction memory[] memory)"},"typeName":{"baseType":{"id":2936,"nodeType":"UserDefinedTypeName","pathNode":{"id":2935,"name":"Prediction","nameLocations":["4457:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"4457:10:16"},"referencedDeclaration":2476,"src":"4457:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":2937,"nodeType":"ArrayTypeName","src":"4457:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4424:61:16"},{"body":{"id":2964,"nodeType":"Block","src":"4531:46:16","statements":[{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"4537:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction memory[] memory"}},"id":2958,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4544:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2956,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4548:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4544:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4537:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2959,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"4557:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":2961,"indexExpression":{"id":2960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4569:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4557:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"src":"4537:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction memory"}},"id":2963,"nodeType":"ExpressionStatement","src":"4537:34:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4514:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2949,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4518:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4514:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2965,"initializationExpression":{"assignments":[2945],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"i","nameLocation":"4503:1:16","nodeType":"VariableDeclaration","scope":2965,"src":"4495:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4495:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2947,"initialValue":{"id":2946,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4507:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4495:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4526:3:16","subExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4526:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"nodeType":"ExpressionStatement","src":"4526:3:16"},"nodeType":"ForStatement","src":"4490:87:16"},{"expression":{"id":2966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"4588:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction memory[] memory"}},"functionReturnParameters":2913,"id":2967,"nodeType":"Return","src":"4581:13:16"}]},"functionSelector":"d1c4e1b4","id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"last10Predictions","nameLocation":"4267:17:16","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[],"src":"4284:2:16"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2969,"src":"4308:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction[]"},"typeName":{"baseType":{"id":2910,"nodeType":"UserDefinedTypeName","pathNode":{"id":2909,"name":"Prediction","nameLocations":["4308:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"4308:10:16"},"referencedDeclaration":2476,"src":"4308:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":2911,"nodeType":"ArrayTypeName","src":"4308:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}},"visibility":"internal"}],"src":"4307:21:16"},"scope":3380,"src":"4258:341:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2989,"nodeType":"Block","src":"4689:92:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2978,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"4702:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2979,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"4710:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4722:6:16","memberName":"length","nodeType":"MemberAccess","src":"4710:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4702:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4730:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":2977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4694:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4694:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2984,"nodeType":"ExpressionStatement","src":"4694:52:16"},{"expression":{"baseExpression":{"id":2985,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"4758:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":2987,"indexExpression":{"id":2986,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"4770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4758:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"functionReturnParameters":2976,"id":2988,"nodeType":"Return","src":"4751:25:16"}]},"functionSelector":"fe83bece","id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"getPrediction","nameLocation":"4613:13:16","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"index","nameLocation":"4639:5:16","nodeType":"VariableDeclaration","scope":2990,"src":"4631:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4626:22:16"},"returnParameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"4670:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction"},"typeName":{"id":2974,"nodeType":"UserDefinedTypeName","pathNode":{"id":2973,"name":"Prediction","nameLocations":["4670:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"4670:10:16"},"referencedDeclaration":2476,"src":"4670:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"visibility":"internal"}],"src":"4669:19:16"},"scope":3380,"src":"4604:177:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3054,"nodeType":"Block","src":"4893:264:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"4906:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4913:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4906:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072616e6765","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4917:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_86f5232cd420b5d8e89c0911fc290331f6cfd7bd7824383c43ece46e2a1c20ec","typeString":"literal_string \"Invalid range\""},"value":"Invalid range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86f5232cd420b5d8e89c0911fc290331f6cfd7bd7824383c43ece46e2a1c20ec","typeString":"literal_string \"Invalid range\""}],"id":3001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4898:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"ExpressionStatement","src":"4898:35:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4946:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3010,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"4952:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4964:6:16","memberName":"length","nodeType":"MemberAccess","src":"4952:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4946:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072616e6765","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4972:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_86f5232cd420b5d8e89c0911fc290331f6cfd7bd7824383c43ece46e2a1c20ec","typeString":"literal_string \"Invalid range\""},"value":"Invalid range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86f5232cd420b5d8e89c0911fc290331f6cfd7bd7824383c43ece46e2a1c20ec","typeString":"literal_string \"Invalid range\""}],"id":3008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4938:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4938:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3015,"nodeType":"ExpressionStatement","src":"4938:50:16"},{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"result","nameLocation":"5013:6:16","nodeType":"VariableDeclaration","scope":3054,"src":"4993:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction[]"},"typeName":{"baseType":{"id":3018,"nodeType":"UserDefinedTypeName","pathNode":{"id":3017,"name":"Prediction","nameLocations":["4993:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"4993:10:16"},"referencedDeclaration":2476,"src":"4993:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":3019,"nodeType":"ArrayTypeName","src":"4993:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}},"visibility":"internal"}],"id":3029,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"5039:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3026,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"5044:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5039:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5022:16:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Pool.Prediction memory[] memory)"},"typeName":{"baseType":{"id":3022,"nodeType":"UserDefinedTypeName","pathNode":{"id":3021,"name":"Prediction","nameLocations":["5026:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"5026:10:16"},"referencedDeclaration":2476,"src":"5026:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":3023,"nodeType":"ArrayTypeName","src":"5026:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5022:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4993:56:16"},{"body":{"id":3050,"nodeType":"Block","src":"5090:45:16","statements":[{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5096:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction memory[] memory"}},"id":3044,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5103:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3042,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"5107:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5103:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5096:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3045,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5115:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3047,"indexExpression":{"id":3046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5127:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5115:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"src":"5096:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_memory_ptr","typeString":"struct Pool.Prediction memory"}},"id":3049,"nodeType":"ExpressionStatement","src":"5096:33:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5077:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3035,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"5081:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5077:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"initializationExpression":{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"i","nameLocation":"5067:1:16","nodeType":"VariableDeclaration","scope":3051,"src":"5059:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"5059:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"initialValue":{"id":3032,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"5071:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5059:16:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5085:3:16","subExpression":{"id":3037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5085:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"5085:3:16"},"nodeType":"ForStatement","src":"5054:81:16"},{"expression":{"id":3052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5146:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction memory[] memory"}},"functionReturnParameters":3000,"id":3053,"nodeType":"Return","src":"5139:13:16"}]},"functionSelector":"5590cfa9","id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"getPredictionFromTo","nameLocation":"4795:19:16","nodeType":"FunctionDefinition","parameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"from","nameLocation":"4827:4:16","nodeType":"VariableDeclaration","scope":3055,"src":"4819:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2994,"mutability":"mutable","name":"to","nameLocation":"4844:2:16","nodeType":"VariableDeclaration","scope":3055,"src":"4836:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4814:36:16"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3055,"src":"4872:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_memory_ptr_$dyn_memory_ptr","typeString":"struct Pool.Prediction[]"},"typeName":{"baseType":{"id":2997,"nodeType":"UserDefinedTypeName","pathNode":{"id":2996,"name":"Prediction","nameLocations":["4872:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"4872:10:16"},"referencedDeclaration":2476,"src":"4872:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage_ptr","typeString":"struct Pool.Prediction"}},"id":2998,"nodeType":"ArrayTypeName","src":"4872:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage_ptr","typeString":"struct Pool.Prediction[]"}},"visibility":"internal"}],"src":"4871:21:16"},"scope":3380,"src":"4786:371:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3063,"nodeType":"Block","src":"5222:35:16","statements":[{"expression":{"expression":{"id":3060,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5234:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5246:6:16","memberName":"length","nodeType":"MemberAccess","src":"5234:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3059,"id":3062,"nodeType":"Return","src":"5227:25:16"}]},"functionSelector":"01668096","id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"getPredictionCount","nameLocation":"5171:18:16","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[],"src":"5189:2:16"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3064,"src":"5213:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"5213:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5212:9:16"},"scope":3380,"src":"5162:95:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3071,"nodeType":"Block","src":"5323:33:16","statements":[{"expression":{"id":3069,"name":"totalPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"5335:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3068,"id":3070,"nodeType":"Return","src":"5328:23:16"}]},"functionSelector":"5c580061","id":3072,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalPredictions","nameLocation":"5271:19:16","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[],"src":"5290:2:16"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3072,"src":"5314:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5313:9:16"},"scope":3380,"src":"5262:94:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3109,"nodeType":"Block","src":"5427:369:16","statements":[{"body":{"id":3105,"nodeType":"Block","src":"5481:218:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5497:24:16","subExpression":{"expression":{"baseExpression":{"id":3088,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5498:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3090,"indexExpression":{"id":3089,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5510:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5498:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5513:8:16","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"5498:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5530:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5536:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"5530:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":3095,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5548:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3097,"indexExpression":{"id":3096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5560:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5548:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5563:7:16","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2473,"src":"5548:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5530:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5497:73:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3104,"nodeType":"IfStatement","src":"5487:207:16","trueBody":{"id":3103,"nodeType":"Block","src":"5577:117:16","statements":[{"expression":{"hexValue":"74727565","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5591:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3076,"id":3102,"nodeType":"Return","src":"5584:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5452:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3082,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5456:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5468:6:16","memberName":"length","nodeType":"MemberAccess","src":"5456:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5452:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3106,"initializationExpression":{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"i","nameLocation":"5445:1:16","nodeType":"VariableDeclaration","scope":3106,"src":"5437:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"5437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3080,"initialValue":{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5449:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5437:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5476:3:16","subExpression":{"id":3085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5476:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3087,"nodeType":"ExpressionStatement","src":"5476:3:16"},"nodeType":"ForStatement","src":"5432:267:16"},{"expression":{"hexValue":"66616c7365","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5710:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3076,"id":3108,"nodeType":"Return","src":"5703:12:16"}]},"functionSelector":"4abf93b7","id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"hasAnyUnresolvedPastEndTime","nameLocation":"5370:27:16","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[],"src":"5397:2:16"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"5421:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3074,"name":"bool","nodeType":"ElementaryTypeName","src":"5421:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5420:6:16"},"scope":3380,"src":"5361:435:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3240,"nodeType":"Block","src":"5827:1019:16","statements":[{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"latestPrice","nameLocation":"5840:11:16","nodeType":"VariableDeclaration","scope":3240,"src":"5832:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"5832:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3120,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3115,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"5854:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5861:14:16","memberName":"getLatestPrice","nodeType":"MemberAccess","referencedDeclaration":7911,"src":"5854:21:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5854:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653130","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5880:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"src":"5854:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5832:52:16"},{"body":{"id":3229,"nodeType":"Block","src":"5940:838:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5956:24:16","subExpression":{"expression":{"baseExpression":{"id":3132,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5957:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3134,"indexExpression":{"id":3133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5969:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5957:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5972:8:16","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"5957:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3137,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5989:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5995:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"5989:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":3139,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6008:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3141,"indexExpression":{"id":3140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6020:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6008:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6023:7:16","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2473,"src":"6008:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5989:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5956:74:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3228,"nodeType":"IfStatement","src":"5946:827:16","trueBody":{"id":3227,"nodeType":"Block","src":"6037:736:16","statements":[{"assignments":[3146],"declarations":[{"constant":false,"id":3146,"mutability":"mutable","name":"predictedPrice","nameLocation":"6052:14:16","nodeType":"VariableDeclaration","scope":3227,"src":"6044:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3151,"initialValue":{"expression":{"baseExpression":{"id":3147,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6069:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3149,"indexExpression":{"id":3148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6081:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6069:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6084:14:16","memberName":"predictedPrice","nodeType":"MemberAccess","referencedDeclaration":2463,"src":"6069:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6044:54:16"},{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"priceDifference","nameLocation":"6113:15:16","nodeType":"VariableDeclaration","scope":3227,"src":"6105:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3164,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6131:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3155,"name":"latestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6148:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6131:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"latestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6205:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3161,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6219:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6205:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6131:102:16","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3157,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6168:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3158,"name":"latestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6185:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6168:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6105:128:16"},{"assignments":[3166],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"score","nameLocation":"6248:5:16","nodeType":"VariableDeclaration","scope":3227,"src":"6240:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3171,"initialValue":{"arguments":[{"id":3168,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6271:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3169,"name":"latestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6287:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3167,"name":"calculateScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"6256:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6256:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6240:59:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3172,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6319:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6325:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"6319:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3174,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6338:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3176,"indexExpression":{"id":3175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6350:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6338:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6353:7:16","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2473,"src":"6338:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3178,"name":"resolutionLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6363:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6338:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6319:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3200,"nodeType":"Block","src":"6492:104:16","statements":[{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3191,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6500:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3196,"indexExpression":{"expression":{"baseExpression":{"id":3192,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6520:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3194,"indexExpression":{"id":3193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6532:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6520:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6535:9:16","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"6520:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6500:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3197,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"6549:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6500:54:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"nodeType":"ExpressionStatement","src":"6500:54:16"}]},"id":3201,"nodeType":"IfStatement","src":"6308:288:16","trueBody":{"id":3190,"nodeType":"Block","src":"6386:100:16","statements":[{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3181,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6394:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3186,"indexExpression":{"expression":{"baseExpression":{"id":3182,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6414:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3184,"indexExpression":{"id":3183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6426:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6414:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6429:9:16","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"6414:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6394:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6443:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6394:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"6394:50:16"}]}},{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3202,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6604:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3204,"indexExpression":{"id":3203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6616:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6604:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6619:10:16","memberName":"difference","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"6604:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3206,"name":"priceDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6632:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6604:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"nodeType":"ExpressionStatement","src":"6604:43:16"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3209,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6654:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3211,"indexExpression":{"id":3210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6666:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6654:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6669:8:16","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"6654:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6680:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6654:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3215,"nodeType":"ExpressionStatement","src":"6654:30:16"},{"expression":{"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3216,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6691:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3218,"indexExpression":{"id":3217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6691:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6706:13:16","memberName":"resolvedPrice","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"6691:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3220,"name":"latestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6722:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6691:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3222,"nodeType":"ExpressionStatement","src":"6691:42:16"},{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3223,"name":"totalDistribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6740:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3224,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"6761:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6740:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"6740:26:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5911:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3126,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5915:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5927:6:16","memberName":"length","nodeType":"MemberAccess","src":"5915:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5911:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"initializationExpression":{"assignments":[3122],"declarations":[{"constant":false,"id":3122,"mutability":"mutable","name":"i","nameLocation":"5904:1:16","nodeType":"VariableDeclaration","scope":3230,"src":"5896:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3124,"initialValue":{"hexValue":"30","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5908:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5896:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5935:3:16","subExpression":{"id":3129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5935:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"5935:3:16"},"nodeType":"ForStatement","src":"5891:887:16"},{"expression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6784:33:16","subExpression":{"baseExpression":{"id":3231,"name":"distributionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6784:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3234,"indexExpression":{"expression":{"id":3232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6804:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6808:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6804:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6784:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3236,"nodeType":"ExpressionStatement","src":"6784:33:16"},{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6822:19:16","subExpression":{"id":3237,"name":"totalDistribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6822:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"6822:19:16"}]},"functionSelector":"2810e1d6","id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"resolve","nameLocation":"5810:7:16","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[],"src":"5817:2:16"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"5827:0:16"},"scope":3380,"src":"5801:1045:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3344,"nodeType":"Block","src":"6963:988:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"resolvedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6972:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6989:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6972:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"6968:32:16","trueBody":{"expression":{"hexValue":"31","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6999:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":3249,"id":3254,"nodeType":"Return","src":"6992:8:16"}},{"assignments":[3257],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"priceDifference","nameLocation":"7041:15:16","nodeType":"VariableDeclaration","scope":3344,"src":"7033:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"7033:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3268,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"7059:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3259,"name":"resolvedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7076:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7059:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"resolvedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7133:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3265,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"7149:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7133:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7059:104:16","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"7096:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3262,"name":"resolvedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7113:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7096:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7033:130:16"},{"assignments":[3270],"declarations":[{"constant":false,"id":3270,"mutability":"mutable","name":"differencePercentage","nameLocation":"7176:20:16","nodeType":"VariableDeclaration","scope":3344,"src":"7168:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"7168:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3277,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"priceDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"7200:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7218:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7200:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7199:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3275,"name":"resolvedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7225:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7199:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7168:70:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7322:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7346:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7322:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7426:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"35","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7426:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7483:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7507:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7483:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3296,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7541:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3135","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7565:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"7541:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7599:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3230","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7623:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"7599:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7657:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3235","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7681:2:16","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"7657:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7715:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3330","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7739:2:16","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"7715:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7773:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3335","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7797:2:16","typeDescriptions":{"typeIdentifier":"t_rational_35_by_1","typeString":"int_const 35"},"value":"35"},"src":"7773:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"differencePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7831:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3430","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7855:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"src":"7831:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3334,"nodeType":"Block","src":"7885:62:16","statements":[{"expression":{"hexValue":"31","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7898:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":3249,"id":3333,"nodeType":"Return","src":"7891:8:16"}]},"id":3335,"nodeType":"IfStatement","src":"7827:120:16","trueBody":{"id":3331,"nodeType":"Block","src":"7859:20:16","statements":[{"expression":{"hexValue":"32","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"functionReturnParameters":3249,"id":3330,"nodeType":"Return","src":"7865:8:16"}]}},"id":3336,"nodeType":"IfStatement","src":"7769:178:16","trueBody":{"id":3325,"nodeType":"Block","src":"7801:20:16","statements":[{"expression":{"hexValue":"33","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7814:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"functionReturnParameters":3249,"id":3324,"nodeType":"Return","src":"7807:8:16"}]}},"id":3337,"nodeType":"IfStatement","src":"7711:236:16","trueBody":{"id":3319,"nodeType":"Block","src":"7743:20:16","statements":[{"expression":{"hexValue":"34","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7756:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"functionReturnParameters":3249,"id":3318,"nodeType":"Return","src":"7749:8:16"}]}},"id":3338,"nodeType":"IfStatement","src":"7653:294:16","trueBody":{"id":3313,"nodeType":"Block","src":"7685:20:16","statements":[{"expression":{"hexValue":"35","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7698:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"functionReturnParameters":3249,"id":3312,"nodeType":"Return","src":"7691:8:16"}]}},"id":3339,"nodeType":"IfStatement","src":"7595:352:16","trueBody":{"id":3307,"nodeType":"Block","src":"7627:20:16","statements":[{"expression":{"hexValue":"36","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"functionReturnParameters":3249,"id":3306,"nodeType":"Return","src":"7633:8:16"}]}},"id":3340,"nodeType":"IfStatement","src":"7537:410:16","trueBody":{"id":3301,"nodeType":"Block","src":"7569:20:16","statements":[{"expression":{"hexValue":"37","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"functionReturnParameters":3249,"id":3300,"nodeType":"Return","src":"7575:8:16"}]}},"id":3341,"nodeType":"IfStatement","src":"7479:468:16","trueBody":{"id":3295,"nodeType":"Block","src":"7511:20:16","statements":[{"expression":{"hexValue":"38","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7524:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"functionReturnParameters":3249,"id":3294,"nodeType":"Return","src":"7517:8:16"}]}},"id":3342,"nodeType":"IfStatement","src":"7422:525:16","trueBody":{"id":3289,"nodeType":"Block","src":"7453:20:16","statements":[{"expression":{"hexValue":"39","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"functionReturnParameters":3249,"id":3288,"nodeType":"Return","src":"7459:8:16"}]}},"id":3343,"nodeType":"IfStatement","src":"7318:629:16","trueBody":{"id":3283,"nodeType":"Block","src":"7349:67:16","statements":[{"expression":{"hexValue":"3130","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7362:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"functionReturnParameters":3249,"id":3282,"nodeType":"Return","src":"7355:9:16"}]}}]},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"calculateScore","nameLocation":"6860:14:16","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"predictedPrice","nameLocation":"6887:14:16","nodeType":"VariableDeclaration","scope":3345,"src":"6879:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"resolvedPrice","nameLocation":"6914:13:16","nodeType":"VariableDeclaration","scope":3345,"src":"6906:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6906:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6874:57:16"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"6954:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6953:9:16"},"scope":3380,"src":"6851:1100:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3374,"nodeType":"Block","src":"8019:141:16","statements":[{"body":{"id":3370,"nodeType":"Block","src":"8073:66:16","statements":[{"condition":{"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8083:24:16","subExpression":{"expression":{"baseExpression":{"id":3361,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"8084:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3363,"indexExpression":{"id":3362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8096:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8084:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$2476_storage","typeString":"struct Pool.Prediction storage ref"}},"id":3364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:8:16","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"8084:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"IfStatement","src":"8079:55:16","trueBody":{"id":3368,"nodeType":"Block","src":"8109:25:16","statements":[{"expression":{"hexValue":"74727565","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8123:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3349,"id":3367,"nodeType":"Return","src":"8116:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8044:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3355,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"8048:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$2476_storage_$dyn_storage","typeString":"struct Pool.Prediction storage ref[] storage ref"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8060:6:16","memberName":"length","nodeType":"MemberAccess","src":"8048:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8044:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"initializationExpression":{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"i","nameLocation":"8037:1:16","nodeType":"VariableDeclaration","scope":3371,"src":"8029:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8029:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3353,"initialValue":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8041:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8029:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8068:3:16","subExpression":{"id":3358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8068:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3360,"nodeType":"ExpressionStatement","src":"8068:3:16"},"nodeType":"ForStatement","src":"8024:115:16"},{"expression":{"hexValue":"66616c7365","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8150:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3349,"id":3373,"nodeType":"Return","src":"8143:12:16"}]},"functionSelector":"371d5d02","id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"hasUnresolvedPredictions","nameLocation":"7965:24:16","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[],"src":"7989:2:16"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"8013:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3347,"name":"bool","nodeType":"ElementaryTypeName","src":"8013:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8012:6:16"},"scope":3380,"src":"7956:204:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3378,"nodeType":"Block","src":"8235:2:16","statements":[]},"id":3379,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[],"src":"8215:2:16"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[],"src":"8235:0:16"},"scope":3380,"src":"8208:29:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3381,"src":"336:7904:16","usedErrors":[1287,1295,1576],"usedEvents":[2534,2540]}],"src":"33:8209:16"},"id":16},"contracts/community/Tournament.sol":{"ast":{"absolutePath":"contracts/community/Tournament.sol","exportedSymbols":{"Address":[1532],"AggregatorV3Interface":[45],"Oracle":[7912],"ReentrancyGuard":[1631],"Tournament":[4229]},"id":4230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3382,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:17"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":3383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4230,"sourceUnit":46,"src":"60:76:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4230,"sourceUnit":1533,"src":"138:51:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":3385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4230,"sourceUnit":1632,"src":"191:59:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/Oracle.sol","file":"../helpers/Oracle.sol","id":3386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4230,"sourceUnit":7913,"src":"252:31:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3387,"name":"ReentrancyGuard","nameLocations":["310:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"310:15:17"},"id":3388,"nodeType":"InheritanceSpecifier","src":"310:15:17"}],"canonicalName":"Tournament","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4229,"linearizedBaseContracts":[4229,1631],"name":"Tournament","nameLocation":"296:10:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"7dc0d1d0","id":3391,"mutability":"mutable","name":"oracle","nameLocation":"344:6:17","nodeType":"VariableDeclaration","scope":4229,"src":"330:20:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"},"typeName":{"id":3390,"nodeType":"UserDefinedTypeName","pathNode":{"id":3389,"name":"Oracle","nameLocations":["330:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":7912,"src":"330:6:17"},"referencedDeclaration":7912,"src":"330:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"visibility":"public"},{"constant":false,"functionSelector":"149c6dac","id":3394,"mutability":"mutable","name":"keeperPercentageFee","nameLocation":"371:19:17","nodeType":"VariableDeclaration","scope":4229,"src":"356:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"393:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"functionSelector":"532eaca0","id":3397,"mutability":"mutable","name":"submissionEndTime","nameLocation":"415:17:17","nodeType":"VariableDeclaration","scope":4229,"src":"400:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"435:7:17","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_28800_by_1","typeString":"int_const 28800"},"value":"8"},"visibility":"public"},{"constant":false,"functionSelector":"93bc976e","id":3400,"mutability":"mutable","name":"verificationEndTime","nameLocation":"461:19:17","nodeType":"VariableDeclaration","scope":4229,"src":"446:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"483:6:17","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"f985ad93","id":3403,"mutability":"mutable","name":"resolutionEndTime","nameLocation":"508:17:17","nodeType":"VariableDeclaration","scope":4229,"src":"493:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"528:7:17","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"visibility":"public"},{"canonicalName":"Tournament.Prediction","id":3412,"members":[{"constant":false,"id":3405,"mutability":"mutable","name":"round","nameLocation":"572:5:17","nodeType":"VariableDeclaration","scope":3412,"src":"564:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"predictor","nameLocation":"590:9:17","nodeType":"VariableDeclaration","scope":3412,"src":"582:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"predictedPrice","nameLocation":"612:14:17","nodeType":"VariableDeclaration","scope":3412,"src":"604:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"amount","nameLocation":"639:6:17","nodeType":"VariableDeclaration","scope":3412,"src":"631:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Prediction","nameLocation":"548:10:17","nodeType":"StructDefinition","scope":4229,"src":"541:109:17","visibility":"public"},{"constant":false,"functionSelector":"24924bf7","id":3414,"mutability":"mutable","name":"maxParticipants","nameLocation":"670:15:17","nodeType":"VariableDeclaration","scope":4229,"src":"655:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8dd78d67","id":3416,"mutability":"mutable","name":"lastRoundPrice","nameLocation":"706:14:17","nodeType":"VariableDeclaration","scope":4229,"src":"691:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"004fbbb0","id":3420,"mutability":"mutable","name":"predictions","nameLocation":"746:11:17","nodeType":"VariableDeclaration","scope":4229,"src":"726:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction[]"},"typeName":{"baseType":{"id":3418,"nodeType":"UserDefinedTypeName","pathNode":{"id":3417,"name":"Prediction","nameLocations":["726:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"726:10:17"},"referencedDeclaration":3412,"src":"726:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage_ptr","typeString":"struct Tournament.Prediction"}},"id":3419,"nodeType":"ArrayTypeName","src":"726:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage_ptr","typeString":"struct Tournament.Prediction[]"}},"visibility":"public"},{"constant":false,"functionSelector":"00614418","id":3422,"mutability":"mutable","name":"verificationTime","nameLocation":"778:16:17","nodeType":"VariableDeclaration","scope":4229,"src":"763:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e0abca0b","id":3424,"mutability":"mutable","name":"priceFeedAddress","nameLocation":"813:16:17","nodeType":"VariableDeclaration","scope":4229,"src":"798:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"719ce73e","id":3426,"mutability":"mutable","name":"prizePool","nameLocation":"848:9:17","nodeType":"VariableDeclaration","scope":4229,"src":"833:24:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8a19c8bc","id":3429,"mutability":"mutable","name":"currentRound","nameLocation":"876:12:17","nodeType":"VariableDeclaration","scope":4229,"src":"861:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":3433,"mutability":"mutable","name":"scores","nameLocation":"926:6:17","nodeType":"VariableDeclaration","scope":4229,"src":"898:34:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3432,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"prizePerScore","nameLocation":"964:13:17","nodeType":"VariableDeclaration","scope":4229,"src":"936:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3436,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"936:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"functionSelector":"76a4956c","id":3440,"mutability":"mutable","name":"roundWinners","nameLocation":"1000:12:17","nodeType":"VariableDeclaration","scope":4229,"src":"983:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3438,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3439,"nodeType":"ArrayTypeName","src":"983:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"canonicalName":"Tournament.WinnerInfo","id":3447,"members":[{"constant":false,"id":3442,"mutability":"mutable","name":"index","nameLocation":"1049:5:17","nodeType":"VariableDeclaration","scope":3447,"src":"1041:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"difference","nameLocation":"1067:10:17","nodeType":"VariableDeclaration","scope":3447,"src":"1059:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"exists","nameLocation":"1087:6:17","nodeType":"VariableDeclaration","scope":3447,"src":"1082:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3445,"name":"bool","nodeType":"ElementaryTypeName","src":"1082:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"WinnerInfo","nameLocation":"1025:10:17","nodeType":"StructDefinition","scope":4229,"src":"1018:80:17","visibility":"public"},{"anonymous":false,"eventSelector":"6508c7e3d28df907ed24f614c03b61c067dbc85e84a98bb8f78ffb1c8a711e55","id":3457,"name":"PredictionSubmitted","nameLocation":"1109:19:17","nodeType":"EventDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"1141:5:17","nodeType":"VariableDeclaration","scope":3457,"src":"1133:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3451,"indexed":true,"mutability":"mutable","name":"predictor","nameLocation":"1167:9:17","nodeType":"VariableDeclaration","scope":3457,"src":"1151:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3450,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3453,"indexed":false,"mutability":"mutable","name":"predictedPrice","nameLocation":"1189:14:17","nodeType":"VariableDeclaration","scope":3457,"src":"1181:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3455,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1216:6:17","nodeType":"VariableDeclaration","scope":3457,"src":"1208:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1128:98:17"},"src":"1103:124:17"},{"anonymous":false,"eventSelector":"4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f","id":3467,"name":"TournamentResolved","nameLocation":"1238:18:17","nodeType":"EventDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"1269:5:17","nodeType":"VariableDeclaration","scope":3467,"src":"1261:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1261:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3462,"indexed":false,"mutability":"mutable","name":"winners","nameLocation":"1289:7:17","nodeType":"VariableDeclaration","scope":3467,"src":"1279:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3460,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3461,"nodeType":"ArrayTypeName","src":"1279:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3465,"indexed":false,"mutability":"mutable","name":"prizeAmounts","nameLocation":"1311:12:17","nodeType":"VariableDeclaration","scope":3467,"src":"1301:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3464,"nodeType":"ArrayTypeName","src":"1301:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1256:71:17"},"src":"1232:96:17"},{"body":{"id":3493,"nodeType":"Block","src":"1423:141:17","statements":[{"expression":{"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3476,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"1428:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3478,"name":"_oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"1444:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3477,"name":"Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"1437:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Oracle_$7912_$","typeString":"type(contract Oracle)"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"src":"1428:31:17","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"id":3481,"nodeType":"ExpressionStatement","src":"1428:31:17"},{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3482,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"1464:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3483,"name":"_maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"1482:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1464:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"1464:34:17"},{"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1503:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1522:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1528:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"1522:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3489,"name":"verificationEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"1540:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1522:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1503:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3492,"nodeType":"ExpressionStatement","src":"1503:56:17"}]},"id":3494,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":3474,"kind":"baseConstructorSpecifier","modifierName":{"id":3473,"name":"ReentrancyGuard","nameLocations":["1405:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"1405:15:17"},"nodeType":"ModifierInvocation","src":"1405:17:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"_oracleAddress","nameLocation":"1357:14:17","nodeType":"VariableDeclaration","scope":3494,"src":"1349:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3468,"name":"address","nodeType":"ElementaryTypeName","src":"1349:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"_maxParticipants","nameLocation":"1384:16:17","nodeType":"VariableDeclaration","scope":3494,"src":"1376:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:60:17"},"returnParameters":{"id":3475,"nodeType":"ParameterList","parameters":[],"src":"1423:0:17"},"scope":4229,"src":"1333:231:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3506,"nodeType":"Block","src":"1619:62:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1631:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1637:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"1631:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1650:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"34","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1669:7:17","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_14400_by_1","typeString":"int_const 14400"},"value":"4"},"src":"1650:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1631:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3498,"id":3505,"nodeType":"Return","src":"1624:52:17"}]},"functionSelector":"bb9b110b","id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"isRoundOpen","nameLocation":"1578:11:17","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[],"src":"1589:2:17"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"1613:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3496,"name":"bool","nodeType":"ElementaryTypeName","src":"1613:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1612:6:17"},"scope":4229,"src":"1569:112:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3565,"nodeType":"Block","src":"1754:520:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1767:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:5:17","memberName":"value","nodeType":"MemberAccess","src":"1767:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"302e3031","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1780:10:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"src":"1767:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e7472792066656520697320302e3031206574686572","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1792:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_822b347668b42a926c21efc332ae6f3fd44485a0cb74fd7c6f245132d36893a0","typeString":"literal_string \"Entry fee is 0.01 ether\""},"value":"Entry fee is 0.01 ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_822b347668b42a926c21efc332ae6f3fd44485a0cb74fd7c6f245132d36893a0","typeString":"literal_string \"Entry fee is 0.01 ether\""}],"id":3512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1759:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1759:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3519,"nodeType":"ExpressionStatement","src":"1759:59:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3521,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"1836:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1848:6:17","memberName":"length","nodeType":"MemberAccess","src":"1836:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3523,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"1857:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1836:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061727469636970616e74206c696d69742072656163686564","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1878:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e50bf9c2b0a1ac8ef85127dd5a091c5a2778e83de142a8c807aaeba34e46f3cc","typeString":"literal_string \"Participant limit reached\""},"value":"Participant limit reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e50bf9c2b0a1ac8ef85127dd5a091c5a2778e83de142a8c807aaeba34e46f3cc","typeString":"literal_string \"Participant limit reached\""}],"id":3520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1823:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3527,"nodeType":"ExpressionStatement","src":"1823:87:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3529,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1928:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1934:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"1928:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1947:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3532,"name":"submissionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"1966:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1947:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1928:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5375626d697373696f6e7320636c6f736564203420686f757273206265666f726520726f756e6420656e6473","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1989:46:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_af1088ef8a7b24f6a49f3e16e5003cd55338567fd798470b96991dff4081ad4e","typeString":"literal_string \"Submissions closed 4 hours before round ends\""},"value":"Submissions closed 4 hours before round ends"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af1088ef8a7b24f6a49f3e16e5003cd55338567fd798470b96991dff4081ad4e","typeString":"literal_string \"Submissions closed 4 hours before round ends\""}],"id":3528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1915:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1915:125:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3537,"nodeType":"ExpressionStatement","src":"1915:125:17"},{"expression":{"arguments":[{"arguments":[{"id":3542,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"2080:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2094:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2098:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2094:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3545,"name":"_predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2106:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2123:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2127:5:17","memberName":"value","nodeType":"MemberAccess","src":"2123:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3541,"name":"Prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2069:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Prediction_$3412_storage_ptr_$","typeString":"type(struct Tournament.Prediction storage pointer)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2069:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_memory_ptr","typeString":"struct Tournament.Prediction memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Prediction_$3412_memory_ptr","typeString":"struct Tournament.Prediction memory"}],"expression":{"id":3538,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2047:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2059:4:17","memberName":"push","nodeType":"MemberAccess","src":"2047:16:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage_ptr_$_t_struct$_Prediction_$3412_storage_$returns$__$attached_to$_t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage_ptr_$","typeString":"function (struct Tournament.Prediction storage ref[] storage pointer,struct Tournament.Prediction storage ref)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3550,"nodeType":"ExpressionStatement","src":"2047:91:17"},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3551,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"2143:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2156:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2160:5:17","memberName":"value","nodeType":"MemberAccess","src":"2156:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2143:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ExpressionStatement","src":"2143:22:17"},{"eventCall":{"arguments":[{"id":3557,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"2200:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2218:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2222:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2218:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3560,"name":"_predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2234:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2255:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2259:5:17","memberName":"value","nodeType":"MemberAccess","src":"2255:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3556,"name":"PredictionSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2175:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"EmitStatement","src":"2170:99:17"}]},"functionSelector":"85d62b45","id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"submitPrediction","nameLocation":"1695:16:17","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"_predictedPrice","nameLocation":"1720:15:17","nodeType":"VariableDeclaration","scope":3566,"src":"1712:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1711:25:17"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[],"src":"1754:0:17"},"scope":4229,"src":"1686:588:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3587,"nodeType":"Block","src":"2315:129:17","statements":[{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2320:18:17","subExpression":{"id":3569,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2327:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3571,"nodeType":"ExpressionStatement","src":"2320:18:17"},{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"2343:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2343:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3575,"nodeType":"ExpressionStatement","src":"2343:13:17"},{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3576,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"2361:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3577,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2380:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2386:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2380:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3579,"name":"verificationEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"2398:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2380:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2361:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3582,"nodeType":"ExpressionStatement","src":"2361:56:17"},{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3583,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"2422:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2438:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2422:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ExpressionStatement","src":"2422:17:17"}]},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTournament","nameLocation":"2288:16:17","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[],"src":"2304:2:17"},"returnParameters":{"id":3568,"nodeType":"ParameterList","parameters":[],"src":"2315:0:17"},"scope":4229,"src":"2279:165:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4095,"nodeType":"Block","src":"2500:3727:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2518:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2524:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2518:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3596,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"2537:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2518:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f75726e616d656e742063616e6e6f74206265207265736f6c76656420796574","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2559:35:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_14138f9c9ad2b748ab35f5880f6790a1812084a0a0628b0c7963db6d28dd6b92","typeString":"literal_string \"Tournament cannot be resolved yet\""},"value":"Tournament cannot be resolved yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14138f9c9ad2b748ab35f5880f6790a1812084a0a0628b0c7963db6d28dd6b92","typeString":"literal_string \"Tournament cannot be resolved yet\""}],"id":3593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2505:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3600,"nodeType":"ExpressionStatement","src":"2505:94:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3601,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2610:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2616:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2610:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"2629:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3604,"name":"resolutionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"2648:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2629:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2610:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3655,"nodeType":"IfStatement","src":"2606:365:17","trueBody":{"id":3654,"nodeType":"Block","src":"2667:304:17","statements":[{"body":{"id":3634,"nodeType":"Block","src":"2722:108:17","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3623,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2762:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3625,"indexExpression":{"id":3624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2774:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2762:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2777:9:17","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"2762:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2754:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"2754:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"baseExpression":{"id":3628,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2795:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3630,"indexExpression":{"id":3629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2807:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2795:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2810:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3411,"src":"2795:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3618,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2729:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1532_$","typeString":"type(library Address)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:9:17","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"2729:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3633,"nodeType":"ExpressionStatement","src":"2729:94:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2693:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3612,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2697:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2709:6:17","memberName":"length","nodeType":"MemberAccess","src":"2697:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2693:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"initializationExpression":{"assignments":[3608],"declarations":[{"constant":false,"id":3608,"mutability":"mutable","name":"i","nameLocation":"2686:1:17","nodeType":"VariableDeclaration","scope":3635,"src":"2678:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3610,"initialValue":{"hexValue":"30","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2690:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2678:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2717:3:17","subExpression":{"id":3615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2717:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"2717:3:17"},"nodeType":"ForStatement","src":"2673:157:17"},{"eventCall":{"arguments":[{"id":3637,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"2865:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2898:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2884:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3638,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3639,"nodeType":"ArrayTypeName","src":"2888:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2884:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2907:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2911:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3644,"nodeType":"ArrayTypeName","src":"2911:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2907:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3636,"name":"TournamentResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"2840:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2840:89:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"EmitStatement","src":"2835:94:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3650,"name":"_resetTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"2935:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2935:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3652,"nodeType":"ExpressionStatement","src":"2935:18:17"},{"functionReturnParameters":3592,"id":3653,"nodeType":"Return","src":"2959:7:17"}]}},{"assignments":[3657],"declarations":[{"constant":false,"id":3657,"mutability":"mutable","name":"actualPrice","nameLocation":"2985:11:17","nodeType":"VariableDeclaration","scope":4095,"src":"2977:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2977:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3658,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"2999:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3006:14:17","memberName":"getLatestPrice","nodeType":"MemberAccess","referencedDeclaration":7911,"src":"2999:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2977:45:17"},{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"actualPriceUint","nameLocation":"3035:15:17","nodeType":"VariableDeclaration","scope":4095,"src":"3027:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3027:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"3053:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653130","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3067:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"src":"3053:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3027:44:17"},{"expression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3668,"name":"lastRoundPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3076:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3669,"name":"actualPriceUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3093:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3076:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3671,"nodeType":"ExpressionStatement","src":"3076:32:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3672,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"3119:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3131:6:17","memberName":"length","nodeType":"MemberAccess","src":"3119:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3141:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3119:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"IfStatement","src":"3115:208:17","trueBody":{"id":3702,"nodeType":"Block","src":"3144:179:17","statements":[{"eventCall":{"arguments":[{"id":3677,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"3180:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3213:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3199:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3678,"name":"address","nodeType":"ElementaryTypeName","src":"3203:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3679,"nodeType":"ArrayTypeName","src":"3203:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"hexValue":"30","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3236:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3222:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3684,"nodeType":"ArrayTypeName","src":"3226:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3222:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3676,"name":"TournamentResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"3155:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3155:89:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3689,"nodeType":"EmitStatement","src":"3150:94:17"},{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3690,"name":"roundWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"3250:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3279:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3265:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"3269:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3692,"nodeType":"ArrayTypeName","src":"3269:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"3250:31:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3697,"nodeType":"ExpressionStatement","src":"3250:31:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3698,"name":"_resetTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"3287:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3287:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3700,"nodeType":"ExpressionStatement","src":"3287:18:17"},{"functionReturnParameters":3592,"id":3701,"nodeType":"Return","src":"3311:7:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3704,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"3333:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3345:6:17","memberName":"length","nodeType":"MemberAccess","src":"3333:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3355:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3333:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3774,"nodeType":"IfStatement","src":"3329:483:17","trueBody":{"id":3773,"nodeType":"Block","src":"3358:454:17","statements":[{"assignments":[3712],"declarations":[{"constant":false,"id":3712,"mutability":"mutable","name":"winnerAddress","nameLocation":"3433:13:17","nodeType":"VariableDeclaration","scope":3773,"src":"3416:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"3416:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3711,"nodeType":"ArrayTypeName","src":"3416:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3718,"initialValue":{"arguments":[{"hexValue":"31","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3463:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3449:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3713,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3714,"nodeType":"ArrayTypeName","src":"3453:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3449:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3416:49:17"},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"winnerPrize","nameLocation":"3488:11:17","nodeType":"VariableDeclaration","scope":3773,"src":"3471:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"3471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ArrayTypeName","src":"3471:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3729,"initialValue":{"arguments":[{"hexValue":"31","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3516:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3502:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ArrayTypeName","src":"3506:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3471:47:17"},{"expression":{"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3730,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"3524:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3732,"indexExpression":{"hexValue":"30","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3538:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3524:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3733,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"3543:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3735,"indexExpression":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3555:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3543:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3558:9:17","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"3543:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3524:43:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3738,"nodeType":"ExpressionStatement","src":"3524:43:17"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3739,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3573:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3741,"indexExpression":{"hexValue":"30","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3573:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3742,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"3590:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3573:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"3573:26:17"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3750,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"3631:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3752,"indexExpression":{"hexValue":"30","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3631:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3623:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3748,"name":"address","nodeType":"ElementaryTypeName","src":"3623:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":3754,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3650:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3756,"indexExpression":{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3650:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3745,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3605:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1532_$","typeString":"type(library Address)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3613:9:17","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"3605:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"ExpressionStatement","src":"3605:60:17"},{"eventCall":{"arguments":[{"id":3760,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"3695:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3761,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"3709:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3762,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3724:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3759,"name":"TournamentResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"3676:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3676:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3764,"nodeType":"EmitStatement","src":"3671:65:17"},{"expression":{"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"roundWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"3742:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3766,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"3757:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"3742:28:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3768,"nodeType":"ExpressionStatement","src":"3742:28:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3769,"name":"_resetTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"3776:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3776:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3771,"nodeType":"ExpressionStatement","src":"3776:18:17"},{"functionReturnParameters":3592,"id":3772,"nodeType":"Return","src":"3800:7:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3775,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"3822:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3834:6:17","memberName":"length","nodeType":"MemberAccess","src":"3822:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3844:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3822:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3863,"nodeType":"IfStatement","src":"3818:565:17","trueBody":{"id":3862,"nodeType":"Block","src":"3847:536:17","statements":[{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"winnersAddresses","nameLocation":"3923:16:17","nodeType":"VariableDeclaration","scope":3862,"src":"3906:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3781,"name":"address","nodeType":"ElementaryTypeName","src":"3906:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3782,"nodeType":"ArrayTypeName","src":"3906:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3789,"initialValue":{"arguments":[{"hexValue":"32","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3942:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3784,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3785,"nodeType":"ArrayTypeName","src":"3946:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3942:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3906:52:17"},{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"prizes","nameLocation":"3981:6:17","nodeType":"VariableDeclaration","scope":3862,"src":"3964:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ArrayTypeName","src":"3964:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3800,"initialValue":{"arguments":[{"hexValue":"32","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3990:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3796,"nodeType":"ArrayTypeName","src":"3994:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3990:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3964:42:17"},{"assignments":[3802],"declarations":[{"constant":false,"id":3802,"mutability":"mutable","name":"halfPrize","nameLocation":"4020:9:17","nodeType":"VariableDeclaration","scope":3862,"src":"4012:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3806,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"4032:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4044:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4032:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4012:33:17"},{"body":{"id":3846,"nodeType":"Block","src":"4083:153:17","statements":[{"expression":{"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3817,"name":"winnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"4090:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3819,"indexExpression":{"id":3818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4107:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4090:19:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3820,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4112:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3822,"indexExpression":{"id":3821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4124:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4112:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4127:9:17","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"4112:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4090:46:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3825,"nodeType":"ExpressionStatement","src":"4090:46:17"},{"expression":{"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3826,"name":"prizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4143:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3828,"indexExpression":{"id":3827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4150:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4143:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3829,"name":"halfPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"4155:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4143:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3831,"nodeType":"ExpressionStatement","src":"4143:21:17"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3837,"name":"winnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"4197:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3839,"indexExpression":{"id":3838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4214:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4197:19:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4189:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3835,"name":"address","nodeType":"ElementaryTypeName","src":"4189:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4189:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":3841,"name":"prizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4219:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3843,"indexExpression":{"id":3842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4226:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4219:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3832,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"4171:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1532_$","typeString":"type(library Address)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4179:9:17","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"4171:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4171:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3845,"nodeType":"ExpressionStatement","src":"4171:58:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4071:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4071:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3847,"initializationExpression":{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"i","nameLocation":"4064:1:17","nodeType":"VariableDeclaration","scope":3847,"src":"4056:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3810,"initialValue":{"hexValue":"30","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4056:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4078:3:17","subExpression":{"id":3814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4078:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"4078:3:17"},"nodeType":"ForStatement","src":"4051:185:17"},{"eventCall":{"arguments":[{"id":3849,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"4265:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3850,"name":"winnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"4279:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3851,"name":"prizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"4297:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3848,"name":"TournamentResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4246:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3853,"nodeType":"EmitStatement","src":"4241:63:17"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3854,"name":"roundWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"4310:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3855,"name":"winnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"4325:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"4310:31:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3857,"nodeType":"ExpressionStatement","src":"4310:31:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3858,"name":"_resetTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"4347:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4347:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"4347:18:17"},{"functionReturnParameters":3592,"id":3861,"nodeType":"Return","src":"4371:7:17"}]}},{"assignments":[3869],"declarations":[{"constant":false,"id":3869,"mutability":"mutable","name":"winners","nameLocation":"4410:7:17","nodeType":"VariableDeclaration","scope":4095,"src":"4389:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo[3]"},"typeName":{"baseType":{"id":3867,"nodeType":"UserDefinedTypeName","pathNode":{"id":3866,"name":"WinnerInfo","nameLocations":["4389:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"4389:10:17"},"referencedDeclaration":3447,"src":"4389:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_storage_ptr","typeString":"struct Tournament.WinnerInfo"}},"id":3868,"length":{"hexValue":"33","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4400:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"4389:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_storage_$3_storage_ptr","typeString":"struct Tournament.WinnerInfo[3]"}},"visibility":"internal"}],"id":3870,"nodeType":"VariableDeclarationStatement","src":"4389:28:17"},{"assignments":[3872],"declarations":[{"constant":false,"id":3872,"mutability":"mutable","name":"winnersCount","nameLocation":"4430:12:17","nodeType":"VariableDeclaration","scope":4095,"src":"4422:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4422:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3874,"initialValue":{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4445:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4422:24:17"},{"body":{"id":3984,"nodeType":"Block","src":"4576:777:17","statements":[{"assignments":[3887],"declarations":[{"constant":false,"id":3887,"mutability":"mutable","name":"difference","nameLocation":"4590:10:17","nodeType":"VariableDeclaration","scope":3984,"src":"4582:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"4582:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3907,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3888,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4603:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3890,"indexExpression":{"id":3889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4615:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4603:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4618:14:17","memberName":"predictedPrice","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"4603:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3892,"name":"actualPriceUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4635:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4603:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"actualPriceUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4713:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":3901,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4731:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3903,"indexExpression":{"id":3902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4743:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4731:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4746:14:17","memberName":"predictedPrice","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"4731:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4713:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4603:157:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3894,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4658:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3896,"indexExpression":{"id":3895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4670:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4658:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":3897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4673:14:17","memberName":"predictedPrice","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"4658:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3898,"name":"actualPriceUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4690:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4658:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4582:178:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"4772:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4787:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"4772:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3982,"nodeType":"Block","src":"4886:462:17","statements":[{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"maxDiffIndex","nameLocation":"5010:12:17","nodeType":"VariableDeclaration","scope":3982,"src":"5002:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3928,"initialValue":{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5025:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5002:24:17"},{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"maxDiff","nameLocation":"5041:7:17","nodeType":"VariableDeclaration","scope":3982,"src":"5033:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"5033:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3935,"initialValue":{"expression":{"baseExpression":{"id":3931,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"5051:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo memory[3] memory"}},"id":3933,"indexExpression":{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5051:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"id":3934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5062:10:17","memberName":"difference","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"5051:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5033:39:17"},{"body":{"id":3965,"nodeType":"Block","src":"5111:126:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3946,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"5123:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo memory[3] memory"}},"id":3948,"indexExpression":{"id":3947,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5131:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5123:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"id":3949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5134:10:17","memberName":"difference","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"5123:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3950,"name":"maxDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"5147:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5123:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3964,"nodeType":"IfStatement","src":"5119:111:17","trueBody":{"id":3963,"nodeType":"Block","src":"5156:74:17","statements":[{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"maxDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"5165:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3953,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"5175:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo memory[3] memory"}},"id":3955,"indexExpression":{"id":3954,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5183:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5175:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"id":3956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5186:10:17","memberName":"difference","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"5175:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5165:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"5165:31:17"},{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3959,"name":"maxDiffIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"5205:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3960,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5220:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5205:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3962,"nodeType":"ExpressionStatement","src":"5205:16:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5099:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5103:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"5099:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"initializationExpression":{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"j","nameLocation":"5092:1:17","nodeType":"VariableDeclaration","scope":3966,"src":"5084:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"5084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3939,"initialValue":{"hexValue":"31","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5096:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5084:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5106:3:17","subExpression":{"id":3943,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5106:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ExpressionStatement","src":"5106:3:17"},"nodeType":"ForStatement","src":"5079:158:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5249:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3968,"name":"maxDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"5262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5249:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3981,"nodeType":"IfStatement","src":"5245:97:17","trueBody":{"id":3980,"nodeType":"Block","src":"5271:71:17","statements":[{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3970,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"5279:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo memory[3] memory"}},"id":3972,"indexExpression":{"id":3971,"name":"maxDiffIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"5287:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5279:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"5314:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3975,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5317:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5329:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3973,"name":"WinnerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"5303:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WinnerInfo_$3447_storage_ptr_$","typeString":"type(struct Tournament.WinnerInfo storage pointer)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5303:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"src":"5279:55:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"id":3979,"nodeType":"ExpressionStatement","src":"5279:55:17"}]}}]},"id":3983,"nodeType":"IfStatement","src":"4768:580:17","trueBody":{"id":3924,"nodeType":"Block","src":"4790:90:17","statements":[{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3911,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"4797:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo memory[3] memory"}},"id":3913,"indexExpression":{"id":3912,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"4805:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4797:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4832:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3916,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4835:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4847:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3914,"name":"WinnerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"4821:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WinnerInfo_$3447_storage_ptr_$","typeString":"type(struct Tournament.WinnerInfo storage pointer)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"src":"4797:55:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"id":3920,"nodeType":"ExpressionStatement","src":"4797:55:17"},{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4859:14:17","subExpression":{"id":3921,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"4859:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"4859:14:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4547:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3880,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4551:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4563:6:17","memberName":"length","nodeType":"MemberAccess","src":"4551:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4547:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3985,"initializationExpression":{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"i","nameLocation":"4540:1:17","nodeType":"VariableDeclaration","scope":3985,"src":"4532:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4532:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3878,"initialValue":{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4544:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4532:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4571:3:17","subExpression":{"id":3883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4571:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"4571:3:17"},"nodeType":"ForStatement","src":"4527:826:17"},{"assignments":[3987],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"keeperFee","nameLocation":"5367:9:17","nodeType":"VariableDeclaration","scope":4095,"src":"5359:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3994,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5380:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3989,"name":"keeperPercentageFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"5392:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5380:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5415:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5379:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5359:61:17"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3995,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5425:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3996,"name":"keeperFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5438:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5425:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3998,"nodeType":"ExpressionStatement","src":"5425:22:17"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4004,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5478:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5482:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5478:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5470:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"5470:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4007,"name":"keeperFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5491:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3999,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5452:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1532_$","typeString":"type(library Address)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5460:9:17","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"5452:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5452:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4009,"nodeType":"ExpressionStatement","src":"5452:49:17"},{"assignments":[4011],"declarations":[{"constant":false,"id":4011,"mutability":"mutable","name":"totalPrize","nameLocation":"5516:10:17","nodeType":"VariableDeclaration","scope":4095,"src":"5508:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5508:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4013,"initialValue":{"id":4012,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5529:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5508:30:17"},{"assignments":[4018],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"finalWinnersAddresses","nameLocation":"5619:21:17","nodeType":"VariableDeclaration","scope":4095,"src":"5602:38:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"5602:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4017,"nodeType":"ArrayTypeName","src":"5602:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4024,"initialValue":{"arguments":[{"id":4022,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5657:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5643:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4019,"name":"address","nodeType":"ElementaryTypeName","src":"5647:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4020,"nodeType":"ArrayTypeName","src":"5647:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5602:68:17"},{"assignments":[4029],"declarations":[{"constant":false,"id":4029,"mutability":"mutable","name":"finalPrizeAmounts","nameLocation":"5692:17:17","nodeType":"VariableDeclaration","scope":4095,"src":"5675:34:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ArrayTypeName","src":"5675:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4035,"initialValue":{"arguments":[{"id":4033,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5726:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5712:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"5716:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4031,"nodeType":"ArrayTypeName","src":"5716:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5712:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5675:64:17"},{"body":{"id":4080,"nodeType":"Block","src":"5789:265:17","statements":[{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4046,"name":"finalWinnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5795:21:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4048,"indexExpression":{"id":4047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5817:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5795:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4049,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"5822:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":4054,"indexExpression":{"expression":{"baseExpression":{"id":4050,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"5834:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$3447_memory_ptr_$3_memory_ptr","typeString":"struct Tournament.WinnerInfo memory[3] memory"}},"id":4052,"indexExpression":{"id":4051,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5842:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5834:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$3447_memory_ptr","typeString":"struct Tournament.WinnerInfo memory"}},"id":4053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5845:5:17","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3442,"src":"5834:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5822:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":4055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5852:9:17","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"5822:39:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5795:66:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4057,"nodeType":"ExpressionStatement","src":"5795:66:17"},{"expression":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4058,"name":"finalPrizeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"5904:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4060,"indexExpression":{"id":4059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5922:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5904:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"totalPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"5927:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4062,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5940:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5927:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5904:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4065,"nodeType":"ExpressionStatement","src":"5904:48:17"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":4071,"name":"finalWinnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5990:21:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4073,"indexExpression":{"id":4072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6012:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5990:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5982:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"5982:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":4075,"name":"finalPrizeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"6022:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4077,"indexExpression":{"id":4076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6040:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6022:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4066,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5958:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1532_$","typeString":"type(library Address)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5966:9:17","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"5958:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5958:90:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"ExpressionStatement","src":"5958:90:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5766:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4041,"name":"winnersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5770:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5766:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"initializationExpression":{"assignments":[4037],"declarations":[{"constant":false,"id":4037,"mutability":"mutable","name":"i","nameLocation":"5759:1:17","nodeType":"VariableDeclaration","scope":4081,"src":"5751:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"5751:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4039,"initialValue":{"hexValue":"30","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5751:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5784:3:17","subExpression":{"id":4043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"5784:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4045,"nodeType":"ExpressionStatement","src":"5784:3:17"},"nodeType":"ForStatement","src":"5746:308:17"},{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4082,"name":"roundWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"6060:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4083,"name":"finalWinnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"6075:21:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"6060:36:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4085,"nodeType":"ExpressionStatement","src":"6060:36:17"},{"eventCall":{"arguments":[{"id":4087,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"6132:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4088,"name":"finalWinnersAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"6150:21:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4089,"name":"finalPrizeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"6177:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":4086,"name":"TournamentResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6108:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6108:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4091,"nodeType":"EmitStatement","src":"6103:96:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4092,"name":"_resetTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6204:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6204:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4094,"nodeType":"ExpressionStatement","src":"6204:18:17"}]},"functionSelector":"ef949f4a","id":4096,"implemented":true,"kind":"function","modifiers":[{"id":3591,"kind":"modifierInvocation","modifierName":{"id":3590,"name":"nonReentrant","nameLocations":["2487:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"2487:12:17"},"nodeType":"ModifierInvocation","src":"2487:12:17"}],"name":"resolveTournament","nameLocation":"2458:17:17","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[],"src":"2475:2:17"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"2500:0:17"},"scope":4229,"src":"2449:3778:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4104,"nodeType":"Block","src":"6299:29:17","statements":[{"expression":{"id":4102,"name":"roundWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"6311:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4101,"id":4103,"nodeType":"Return","src":"6304:19:17"}]},"functionSelector":"95690936","id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"getLastWinners","nameLocation":"6241:14:17","nodeType":"FunctionDefinition","parameters":{"id":4097,"nodeType":"ParameterList","parameters":[],"src":"6255:2:17"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"6281:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4099,"nodeType":"ArrayTypeName","src":"6281:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6280:18:17"},"scope":4229,"src":"6232:96:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4116,"nodeType":"Block","src":"6383:47:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4110,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6395:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$7912","typeString":"contract Oracle"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6402:14:17","memberName":"getLatestPrice","nodeType":"MemberAccess","referencedDeclaration":7911,"src":"6395:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6395:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653130","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6421:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"src":"6395:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4109,"id":4115,"nodeType":"Return","src":"6388:37:17"}]},"functionSelector":"98d5fdca","id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"6342:8:17","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[],"src":"6350:2:17"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"6374:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"6374:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6373:9:17"},"scope":4229,"src":"6333:97:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4124,"nodeType":"Block","src":"6498:31:17","statements":[{"expression":{"id":4122,"name":"lastRoundPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"6510:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4121,"id":4123,"nodeType":"Return","src":"6503:21:17"}]},"functionSelector":"58f6b9c5","id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestRoundPrice","nameLocation":"6444:19:17","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"6463:2:17"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4125,"src":"6489:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"6489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6488:9:17"},"scope":4229,"src":"6435:94:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4132,"nodeType":"Block","src":"6593:29:17","statements":[{"expression":{"id":4130,"name":"currentRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"6605:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4129,"id":4131,"nodeType":"Return","src":"6598:19:17"}]},"functionSelector":"a32bf597","id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentRound","nameLocation":"6543:15:17","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[],"src":"6558:2:17"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"6584:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"6584:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6583:9:17"},"scope":4229,"src":"6534:88:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4140,"nodeType":"Block","src":"6689:32:17","statements":[{"expression":{"id":4138,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"6701:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4137,"id":4139,"nodeType":"Return","src":"6694:22:17"}]},"functionSelector":"308d19ab","id":4141,"implemented":true,"kind":"function","modifiers":[],"name":"getMaxPartecipants","nameLocation":"6636:18:17","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[],"src":"6654:2:17"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4141,"src":"6680:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"6680:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6679:9:17"},"scope":4229,"src":"6627:94:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4149,"nodeType":"Block","src":"6797:35:17","statements":[{"expression":{"expression":{"id":4146,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"6809:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6821:6:17","memberName":"length","nodeType":"MemberAccess","src":"6809:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4145,"id":4148,"nodeType":"Return","src":"6802:25:17"}]},"functionSelector":"e2f1dcc6","id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentRoundPartecipants","nameLocation":"6735:27:17","nodeType":"FunctionDefinition","parameters":{"id":4142,"nodeType":"ParameterList","parameters":[],"src":"6762:2:17"},"returnParameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4150,"src":"6788:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"6788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6787:9:17"},"scope":4229,"src":"6726:106:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4157,"nodeType":"Block","src":"6900:26:17","statements":[{"expression":{"id":4155,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"6912:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4154,"id":4156,"nodeType":"Return","src":"6905:16:17"}]},"functionSelector":"5d21b255","id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentPricePool","nameLocation":"6846:19:17","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[],"src":"6865:2:17"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4158,"src":"6891:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6891:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6890:9:17"},"scope":4229,"src":"6837:89:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4165,"nodeType":"Block","src":"6998:33:17","statements":[{"expression":{"id":4163,"name":"verificationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"7010:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4162,"id":4164,"nodeType":"Return","src":"7003:23:17"}]},"functionSelector":"344c8e37","id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"getNextVerificationTime","nameLocation":"6940:23:17","nodeType":"FunctionDefinition","parameters":{"id":4159,"nodeType":"ParameterList","parameters":[],"src":"6963:2:17"},"returnParameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"6989:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6989:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6988:9:17"},"scope":4229,"src":"6931:100:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4175,"nodeType":"Block","src":"7106:28:17","statements":[{"expression":{"id":4173,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7118:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"functionReturnParameters":4172,"id":4174,"nodeType":"Return","src":"7111:18:17"}]},"functionSelector":"c78c3a83","id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"getPredictions","nameLocation":"7045:14:17","nodeType":"FunctionDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[],"src":"7059:2:17"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4176,"src":"7085:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_memory_ptr_$dyn_memory_ptr","typeString":"struct Tournament.Prediction[]"},"typeName":{"baseType":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"Prediction","nameLocations":["7085:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"7085:10:17"},"referencedDeclaration":3412,"src":"7085:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage_ptr","typeString":"struct Tournament.Prediction"}},"id":4170,"nodeType":"ArrayTypeName","src":"7085:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage_ptr","typeString":"struct Tournament.Prediction[]"}},"visibility":"internal"}],"src":"7084:21:17"},"scope":4229,"src":"7036:98:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4218,"nodeType":"Block","src":"7207:206:17","statements":[{"assignments":[4186],"declarations":[{"constant":false,"id":4186,"mutability":"mutable","name":"partecipants","nameLocation":"7229:12:17","nodeType":"VariableDeclaration","scope":4218,"src":"7212:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"7212:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4185,"nodeType":"ArrayTypeName","src":"7212:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4193,"initialValue":{"arguments":[{"expression":{"id":4190,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7258:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7270:6:17","memberName":"length","nodeType":"MemberAccess","src":"7258:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7244:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4187,"name":"address","nodeType":"ElementaryTypeName","src":"7248:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4188,"nodeType":"ArrayTypeName","src":"7248:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7244:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7212:65:17"},{"body":{"id":4214,"nodeType":"Block","src":"7331:54:17","statements":[{"expression":{"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4205,"name":"partecipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"7337:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4207,"indexExpression":{"id":4206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"7350:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7337:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4208,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7355:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":4210,"indexExpression":{"id":4209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"7367:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7355:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$3412_storage","typeString":"struct Tournament.Prediction storage ref"}},"id":4211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7370:9:17","memberName":"predictor","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"7355:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7337:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4213,"nodeType":"ExpressionStatement","src":"7337:42:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"7302:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4199,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7306:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Prediction_$3412_storage_$dyn_storage","typeString":"struct Tournament.Prediction storage ref[] storage ref"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7318:6:17","memberName":"length","nodeType":"MemberAccess","src":"7306:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7302:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"initializationExpression":{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"i","nameLocation":"7295:1:17","nodeType":"VariableDeclaration","scope":4215,"src":"7287:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"7287:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4197,"initialValue":{"hexValue":"30","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7299:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7287:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7326:3:17","subExpression":{"id":4202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"7326:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4204,"nodeType":"ExpressionStatement","src":"7326:3:17"},"nodeType":"ForStatement","src":"7282:103:17"},{"expression":{"id":4216,"name":"partecipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"7396:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4181,"id":4217,"nodeType":"Return","src":"7389:19:17"}]},"functionSelector":"f9ceb3ea","id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"getPartecipants","nameLocation":"7148:15:17","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[],"src":"7163:2:17"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4219,"src":"7189:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4178,"name":"address","nodeType":"ElementaryTypeName","src":"7189:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4179,"nodeType":"ArrayTypeName","src":"7189:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7188:18:17"},"scope":4229,"src":"7139:274:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4227,"nodeType":"Block","src":"7445:32:17","statements":[{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"7450:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7463:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7467:5:17","memberName":"value","nodeType":"MemberAccess","src":"7463:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7450:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4226,"nodeType":"ExpressionStatement","src":"7450:22:17"}]},"id":4228,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[],"src":"7425:2:17"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[],"src":"7445:0:17"},"scope":4229,"src":"7418:59:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4230,"src":"287:7193:17","usedErrors":[1287,1295,1576],"usedEvents":[3457,3467]}],"src":"33:7449:17"},"id":17},"contracts/core/BaluniAgent.sol":{"ast":{"absolutePath":"contracts/core/BaluniAgent.sol","exportedSymbols":{"Address":[1532],"BaluniAgent":[4560],"IERC20":[927],"IERC20Metadata":[953],"IERC20Permit":[989],"IRouter":[4240],"SafeERC20":[1279]},"id":4561,"nodeType":"SourceUnit","nodes":[{"id":4231,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"0:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4561,"sourceUnit":954,"src":"27:75:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4561,"sourceUnit":1280,"src":"104:65:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":4234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4561,"sourceUnit":1533,"src":"171:51:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4240,"linearizedBaseContracts":[4240],"name":"IRouter","nameLocation":"236:7:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"185fcffe","id":4239,"implemented":false,"kind":"function","modifiers":[],"name":"getBpsFee","nameLocation":"257:9:18","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[],"src":"266:2:18"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4239,"src":"292:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:9:18"},"scope":4240,"src":"248:53:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4561,"src":"226:78:18","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"BaluniAgent","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4560,"linearizedBaseContracts":[4560],"name":"BaluniAgent","nameLocation":"317:11:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4244,"libraryName":{"id":4241,"name":"SafeERC20","nameLocations":["339:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":1279,"src":"339:9:18"},"nodeType":"UsingForDirective","src":"333:35:18","typeName":{"id":4243,"nodeType":"UserDefinedTypeName","pathNode":{"id":4242,"name":"IERC20Metadata","nameLocations":["353:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":953,"src":"353:14:18"},"referencedDeclaration":953,"src":"353:14:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}},{"global":false,"id":4247,"libraryName":{"id":4245,"name":"Address","nameLocations":["377:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"377:7:18"},"nodeType":"UsingForDirective","src":"371:34:18","typeName":{"id":4246,"name":"address","nodeType":"ElementaryTypeName","src":"389:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"constant":false,"functionSelector":"8da5cb5b","id":4249,"mutability":"mutable","name":"owner","nameLocation":"425:5:18","nodeType":"VariableDeclaration","scope":4560,"src":"410:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4251,"mutability":"mutable","name":"router","nameLocation":"450:6:18","nodeType":"VariableDeclaration","scope":4560,"src":"434:22:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4250,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":4254,"mutability":"constant","name":"_NATIVE","nameLocation":"486:7:18","nodeType":"VariableDeclaration","scope":4560,"src":"460:81:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4252,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"499:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"internal"},{"constant":true,"id":4260,"mutability":"constant","name":"WNATIVE","nameLocation":"580:7:18","nodeType":"VariableDeclaration","scope":4560,"src":"547:104:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"},"typeName":{"id":4256,"nodeType":"UserDefinedTypeName","pathNode":{"id":4255,"name":"IERC20Metadata","nameLocations":["547:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":953,"src":"547:14:18"},"referencedDeclaration":953,"src":"547:14:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"value":{"arguments":[{"hexValue":"307830643530304231643845386546333145323143393964314462394136343434643341446631323730","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"608:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4257,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"593:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"593:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"visibility":"internal"},{"constant":true,"id":4263,"mutability":"constant","name":"_DUST","nameLocation":"683:5:18","nodeType":"VariableDeclaration","scope":4560,"src":"657:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"691:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"internal"},{"constant":true,"id":4266,"mutability":"constant","name":"_BPS_BASE","nameLocation":"723:9:18","nodeType":"VariableDeclaration","scope":4560,"src":"697:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"735:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"canonicalName":"BaluniAgent.Call","id":4273,"members":[{"constant":false,"id":4268,"mutability":"mutable","name":"to","nameLocation":"771:2:18","nodeType":"VariableDeclaration","scope":4273,"src":"763:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4267,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"value","nameLocation":"786:5:18","nodeType":"VariableDeclaration","scope":4273,"src":"778:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"data","nameLocation":"802:4:18","nodeType":"VariableDeclaration","scope":4273,"src":"796:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4271,"name":"bytes","nodeType":"ElementaryTypeName","src":"796:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"753:4:18","nodeType":"StructDefinition","scope":4560,"src":"746:65:18","visibility":"public"},{"body":{"id":4297,"nodeType":"Block","src":"1107:95:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1120:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1124:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1120:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4284,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"1134:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1120:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920526f75746572","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1143:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a9bf083c774727c2203c4b3975901a22657e6fb3666f6b94d01385a9039a491","typeString":"literal_string \"Only Router\""},"value":"Only Router"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a9bf083c774727c2203c4b3975901a22657e6fb3666f6b94d01385a9039a491","typeString":"literal_string \"Only Router\""}],"id":4281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1112:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4288,"nodeType":"ExpressionStatement","src":"1112:45:18"},{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"1162:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4290,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"1170:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1162:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4292,"nodeType":"ExpressionStatement","src":"1162:14:18"},{"expression":{"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"1181:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4294,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"1190:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1181:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4296,"nodeType":"ExpressionStatement","src":"1181:16:18"}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"816:243:18","text":" @dev Initializes a new instance of the Agent contract.\n @param _owner The address of the contract owner.\n @param _router The address of the router contract.\n @notice Only the router contract can deploy this contract."},"id":4298,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"_owner","nameLocation":"1082:6:18","nodeType":"VariableDeclaration","scope":4298,"src":"1074:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"_router","nameLocation":"1098:7:18","nodeType":"VariableDeclaration","scope":4298,"src":"1090:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4277,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1073:33:18"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[],"src":"1107:0:18"},"scope":4560,"src":"1062:140:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4309,"nodeType":"Block","src":"1229:76:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4301,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1242:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1246:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1242:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4303,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"1256:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1242:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c61626c65206f6e6c792062792074686520726f75746572","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1264:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f288cef4bb462eac7507b059e37e08390ab98484d1c030cf9363145ee84c382c","typeString":"literal_string \"Callable only by the router\""},"value":"Callable only by the router"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f288cef4bb462eac7507b059e37e08390ab98484d1c030cf9363145ee84c382c","typeString":"literal_string \"Callable only by the router\""}],"id":4300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1234:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1234:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4307,"nodeType":"ExpressionStatement","src":"1234:60:18"},{"id":4308,"nodeType":"PlaceholderStatement","src":"1299:1:18"}]},"id":4310,"name":"onlyRouter","nameLocation":"1216:10:18","nodeType":"ModifierDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[],"src":"1226:2:18"},"src":"1207:98:18","virtual":false,"visibility":"internal"},{"body":{"id":4367,"nodeType":"Block","src":"1734:252:18","statements":[{"body":{"id":4357,"nodeType":"Block","src":"1779:141:18","statements":[{"assignments":[4335,null],"declarations":[{"constant":false,"id":4335,"mutability":"mutable","name":"success","nameLocation":"1791:7:18","nodeType":"VariableDeclaration","scope":4357,"src":"1786:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4334,"name":"bool","nodeType":"ElementaryTypeName","src":"1786:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4351,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":4346,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"1852:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call calldata[] calldata"}},"id":4348,"indexExpression":{"id":4347,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"1858:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1852:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4273_calldata_ptr","typeString":"struct BaluniAgent.Call calldata"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1861:4:18","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"1852:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"expression":{"baseExpression":{"id":4336,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"1804:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call calldata[] calldata"}},"id":4338,"indexExpression":{"id":4337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"1810:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1804:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4273_calldata_ptr","typeString":"struct BaluniAgent.Call calldata"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1813:2:18","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"1804:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1816:4:18","memberName":"call","nodeType":"MemberAccess","src":"1804:16:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"baseExpression":{"id":4341,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"1829:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call calldata[] calldata"}},"id":4343,"indexExpression":{"id":4342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"1835:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1829:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4273_calldata_ptr","typeString":"struct BaluniAgent.Call calldata"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1838:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"1829:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1804:41:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1785:86:18"},{"expression":{"arguments":[{"id":4353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"1885:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617463682063616c6c206661696c6564","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1894:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c09e899dfcc1fcf0d7dd9e543f8a91b17a7de5379720d80ee73296e900d7ae60","typeString":"literal_string \"Batch call failed\""},"value":"Batch call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c09e899dfcc1fcf0d7dd9e543f8a91b17a7de5379720d80ee73296e900d7ae60","typeString":"literal_string \"Batch call failed\""}],"id":4352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1877:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1877:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4356,"nodeType":"ExpressionStatement","src":"1877:37:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"1756:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4328,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"1760:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call calldata[] calldata"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:6:18","memberName":"length","nodeType":"MemberAccess","src":"1760:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4358,"initializationExpression":{"assignments":[4324],"declarations":[{"constant":false,"id":4324,"mutability":"mutable","name":"i","nameLocation":"1749:1:18","nodeType":"VariableDeclaration","scope":4358,"src":"1744:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint","nodeType":"ElementaryTypeName","src":"1744:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4326,"initialValue":{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1744:10:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1774:3:18","subExpression":{"id":4331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"1774:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4333,"nodeType":"ExpressionStatement","src":"1774:3:18"},"nodeType":"ForStatement","src":"1739:181:18"},{"expression":{"arguments":[{"id":4360,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"1936:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":4359,"name":"_chargeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"1924:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$returns$__$","typeString":"function (address[] calldata)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4362,"nodeType":"ExpressionStatement","src":"1924:25:18"},{"expression":{"arguments":[{"id":4364,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"1968:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":4363,"name":"_returnTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"1954:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$returns$__$","typeString":"function (address[] calldata)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4366,"nodeType":"ExpressionStatement","src":"1954:27:18"}]},"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"1310:318:18","text":" @dev Executes a batch of calls and performs token operations.\n @param calls An array of Call structs representing the calls to be executed.\n @param tokensReturn An array of token addresses to return after the batch call.\n @notice Only the router contract is allowed to execute this function."},"functionSelector":"eedc3c50","id":4368,"implemented":true,"kind":"function","modifiers":[{"id":4321,"kind":"modifierInvocation","modifierName":{"id":4320,"name":"onlyRouter","nameLocations":["1723:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":4310,"src":"1723:10:18"},"nodeType":"ModifierInvocation","src":"1723:10:18"}],"name":"execute","nameLocation":"1640:7:18","nodeType":"FunctionDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"calls","nameLocation":"1668:5:18","nodeType":"VariableDeclaration","scope":4368,"src":"1652:21:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call[]"},"typeName":{"baseType":{"id":4313,"nodeType":"UserDefinedTypeName","pathNode":{"id":4312,"name":"Call","nameLocations":["1652:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"1652:4:18"},"referencedDeclaration":4273,"src":"1652:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4273_storage_ptr","typeString":"struct BaluniAgent.Call"}},"id":4314,"nodeType":"ArrayTypeName","src":"1652:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_storage_$dyn_storage_ptr","typeString":"struct BaluniAgent.Call[]"}},"visibility":"internal"},{"constant":false,"id":4318,"mutability":"mutable","name":"tokensReturn","nameLocation":"1697:12:18","nodeType":"VariableDeclaration","scope":4368,"src":"1678:31:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4316,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4317,"nodeType":"ArrayTypeName","src":"1678:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1647:66:18"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[],"src":"1734:0:18"},"scope":4560,"src":"1631:355:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4376,"nodeType":"Block","src":"2157:23:18","statements":[{"expression":{"id":4374,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2169:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4373,"id":4375,"nodeType":"Return","src":"2162:13:18"}]},"documentation":{"id":4369,"nodeType":"StructuredDocumentation","src":"1991:112:18","text":" @dev Returns the address of the router contract.\n @return The address of the router contract."},"functionSelector":"b0f479a1","id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"getRouter","nameLocation":"2115:9:18","nodeType":"FunctionDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[],"src":"2124:2:18"},"returnParameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4377,"src":"2148:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4371,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2147:9:18"},"scope":4560,"src":"2106:74:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4470,"nodeType":"Block","src":"2393:591:18","statements":[{"assignments":[4385],"declarations":[{"constant":false,"id":4385,"mutability":"mutable","name":"amount","nameLocation":"2406:6:18","nodeType":"VariableDeclaration","scope":4470,"src":"2398:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"2398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4386,"nodeType":"VariableDeclarationStatement","src":"2398:14:18"},{"assignments":[4388],"declarations":[{"constant":false,"id":4388,"mutability":"mutable","name":"bpsFee","nameLocation":"2425:6:18","nodeType":"VariableDeclaration","scope":4470,"src":"2417:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4394,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4390,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2442:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4389,"name":"IRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"2434:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRouter_$4240_$","typeString":"type(contract IRouter)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRouter_$4240","typeString":"contract IRouter"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:9:18","memberName":"getBpsFee","nodeType":"MemberAccess","referencedDeclaration":4239,"src":"2434:25:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2417:44:18"},{"body":{"id":4468,"nodeType":"Block","src":"2516:464:18","statements":[{"assignments":[4407],"declarations":[{"constant":false,"id":4407,"mutability":"mutable","name":"token","nameLocation":"2530:5:18","nodeType":"VariableDeclaration","scope":4468,"src":"2522:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4406,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4411,"initialValue":{"baseExpression":{"id":4408,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2538:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4410,"indexExpression":{"id":4409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2538:15:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2522:31:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"2563:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4413,"name":"_NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2572:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2563:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4466,"nodeType":"Block","src":"2802:173:18","statements":[{"assignments":[4438],"declarations":[{"constant":false,"id":4438,"mutability":"mutable","name":"balance","nameLocation":"2817:7:18","nodeType":"VariableDeclaration","scope":4466,"src":"2809:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4448,"initialValue":{"arguments":[{"arguments":[{"id":4445,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2859:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2851:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4443,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:18","typeDescriptions":{}}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2851:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"2834:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4439,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2827:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"2827:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2809:56:18"},{"expression":{"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"2872:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4451,"name":"bpsFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"2892:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2882:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2881:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4454,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"2902:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2881:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4457,"nodeType":"ExpressionStatement","src":"2872:39:18"},{"expression":{"arguments":[{"id":4462,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2953:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4463,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"2961:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4459,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"2933:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4458,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2918:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2918:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2940:12:18","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1039,"src":"2918:34:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$927_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2918:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4465,"nodeType":"ExpressionStatement","src":"2918:50:18"}]},"id":4467,"nodeType":"IfStatement","src":"2559:416:18","trueBody":{"id":4436,"nodeType":"Block","src":"2581:215:18","statements":[{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"2673:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4418,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2691:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2683:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:18","typeDescriptions":{}}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2697:7:18","memberName":"balance","nodeType":"MemberAccess","src":"2683:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4421,"name":"bpsFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"2707:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2683:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2682:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4424,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"2717:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2682:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2673:53:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4427,"nodeType":"ExpressionStatement","src":"2673:53:18"},{"expression":{"arguments":[{"id":4433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"2782:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4430,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2764:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2756:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4428,"name":"address","nodeType":"ElementaryTypeName","src":"2756:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2756:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:9:18","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"2756:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2756:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4435,"nodeType":"ExpressionStatement","src":"2756:33:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"2486:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4400,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2490:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2503:6:18","memberName":"length","nodeType":"MemberAccess","src":"2490:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2486:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4469,"initializationExpression":{"assignments":[4396],"declarations":[{"constant":false,"id":4396,"mutability":"mutable","name":"i","nameLocation":"2479:1:18","nodeType":"VariableDeclaration","scope":4469,"src":"2471:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4398,"initialValue":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2483:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2471:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2511:3:18","subExpression":{"id":4403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"2511:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4405,"nodeType":"ExpressionStatement","src":"2511:3:18"},"nodeType":"ForStatement","src":"2466:514:18"}]},"documentation":{"id":4378,"nodeType":"StructuredDocumentation","src":"2185:142:18","text":" @dev Internal function to charge fees for the tokens returned.\n @param tokensReturn The array of tokens to charge fees for."},"id":4471,"implemented":true,"kind":"function","modifiers":[],"name":"_chargeFees","nameLocation":"2339:11:18","nodeType":"FunctionDefinition","parameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"tokensReturn","nameLocation":"2370:12:18","nodeType":"VariableDeclaration","scope":4471,"src":"2351:31:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4379,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4380,"nodeType":"ArrayTypeName","src":"2351:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2350:33:18"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[],"src":"2393:0:18"},"scope":4560,"src":"2330:654:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"3181:561:18","statements":[{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"tokensReturnLength","nameLocation":"3194:18:18","nodeType":"VariableDeclaration","scope":4558,"src":"3186:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4482,"initialValue":{"expression":{"id":4480,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"3215:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3228:6:18","memberName":"length","nodeType":"MemberAccess","src":"3215:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3186:48:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"tokensReturnLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3243:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3264:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3243:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4557,"nodeType":"IfStatement","src":"3239:499:18","trueBody":{"id":4556,"nodeType":"Block","src":"3267:471:18","statements":[{"body":{"id":4554,"nodeType":"Block","src":"3315:418:18","statements":[{"assignments":[4493],"declarations":[{"constant":false,"id":4493,"mutability":"mutable","name":"token","nameLocation":"3330:5:18","nodeType":"VariableDeclaration","scope":4554,"src":"3322:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4492,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4497,"initialValue":{"baseExpression":{"id":4494,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"3338:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4496,"indexExpression":{"id":4495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"3351:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3338:15:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3322:31:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"3364:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4499,"name":"_NATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"3373:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3364:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4548,"nodeType":"Block","src":"3499:191:18","statements":[{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"balance","nameLocation":"3515:7:18","nodeType":"VariableDeclaration","scope":4548,"src":"3507:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3507:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"initialValue":{"arguments":[{"arguments":[{"id":4531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3573:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4529,"name":"address","nodeType":"ElementaryTypeName","src":"3565:7:18","typeDescriptions":{}}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4526,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"3540:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4525,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3525:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3525:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3547:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"3525:31:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3525:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3507:79:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"3598:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4536,"name":"_DUST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"3608:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3598:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4547,"nodeType":"IfStatement","src":"3594:89:18","trueBody":{"id":4546,"nodeType":"Block","src":"3615:68:18","statements":[{"expression":{"arguments":[{"id":4542,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3659:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4543,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"3666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4539,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"3639:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4538,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3624:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3624:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3646:12:18","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1039,"src":"3624:34:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$927_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3624:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4545,"nodeType":"ExpressionStatement","src":"3624:50:18"}]}}]},"id":4549,"nodeType":"IfStatement","src":"3360:330:18","trueBody":{"id":4522,"nodeType":"Block","src":"3382:111:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4503,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3402:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3394:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4501,"name":"address","nodeType":"ElementaryTypeName","src":"3394:7:18","typeDescriptions":{}}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3408:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3394:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3394:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4521,"nodeType":"IfStatement","src":"3390:96:18","trueBody":{"id":4520,"nodeType":"Block","src":"3421:65:18","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":4515,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3463:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4513,"name":"address","nodeType":"ElementaryTypeName","src":"3455:7:18","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3455:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4510,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3438:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3430:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"3430:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3445:9:18","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1336,"src":"3430:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"ExpressionStatement","src":"3430:47:18"}]}}]}},{"id":4553,"nodeType":"UncheckedBlock","src":"3698:29:18","statements":[{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3716:3:18","subExpression":{"id":4550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"3718:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"nodeType":"ExpressionStatement","src":"3716:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"3289:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4490,"name":"tokensReturnLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3293:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3289:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4555,"initializationExpression":{"assignments":[4487],"declarations":[{"constant":false,"id":4487,"mutability":"mutable","name":"i","nameLocation":"3286:1:18","nodeType":"VariableDeclaration","scope":4555,"src":"3278:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3278:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4488,"nodeType":"VariableDeclarationStatement","src":"3278:9:18"},"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"3273:460:18"}]}}]},"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"2989:124:18","text":" @dev Internal function to return tokens to the owner.\n @param tokensReturn The array of tokens to return."},"id":4559,"implemented":true,"kind":"function","modifiers":[],"name":"_returnTokens","nameLocation":"3125:13:18","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"tokensReturn","nameLocation":"3158:12:18","nodeType":"VariableDeclaration","scope":4559,"src":"3139:31:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4473,"name":"address","nodeType":"ElementaryTypeName","src":"3139:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4474,"nodeType":"ArrayTypeName","src":"3139:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3138:33:18"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[],"src":"3181:0:18"},"scope":4560,"src":"3116:626:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4561,"src":"308:3437:18","usedErrors":[1006,1287,1292,1295],"usedEvents":[]}],"src":"0:3747:18"},"id":18},"contracts/core/BaluniRouter.sol":{"ast":{"absolutePath":"contracts/core/BaluniRouter.sol","exportedSymbols":{"Address":[1532],"BaluniAgent":[4560],"BaluniRouter":[7433],"BaluniStake":[7877],"Context":[1562],"ERC20":[849],"EnumerableSet":[2244],"IERC20":[927],"IERC20Errors":[239],"IERC20Metadata":[953],"IERC20Permit":[989],"IOracle":[4585],"IRouter":[4240],"ISwapRouter":[2441],"IUniswapV3Factory":[2327],"IUniswapV3SwapCallback":[2341],"Ownable":[193],"ReentrancyGuard":[1631],"SafeERC20":[1279]},"id":7434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4562,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"33:23:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4563,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":194,"src":"1463:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":1280,"src":"1517:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4565,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":850,"src":"1584:55:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"@openzeppelin/contracts/interfaces/IERC20.sol","id":4566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":198,"src":"1641:55:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":4567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":2245,"src":"1698:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":4568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":2442,"src":"1767:68:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":4569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":2328,"src":"1837:69:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BaluniAgent.sol","file":"./BaluniAgent.sol","id":4570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":4561,"src":"1910:27:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BaluniStake.sol","file":"./BaluniStake.sol","id":4571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7434,"sourceUnit":7878,"src":"1939:27:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IOracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4585,"linearizedBaseContracts":[4585],"name":"IOracle","nameLocation":"1980:7:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":4584,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"2001:7:19","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"srcToken","nameLocation":"2020:8:19","nodeType":"VariableDeclaration","scope":4584,"src":"2013:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":4573,"nodeType":"UserDefinedTypeName","pathNode":{"id":4572,"name":"IERC20","nameLocations":["2013:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"2013:6:19"},"referencedDeclaration":927,"src":"2013:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"dstToken","nameLocation":"2040:8:19","nodeType":"VariableDeclaration","scope":4584,"src":"2033:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":4576,"nodeType":"UserDefinedTypeName","pathNode":{"id":4575,"name":"IERC20","nameLocations":["2033:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"2033:6:19"},"referencedDeclaration":927,"src":"2033:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"useWrappers","nameLocation":"2058:11:19","nodeType":"VariableDeclaration","scope":4584,"src":"2053:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4578,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2008:65:19"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"weightedRate","nameLocation":"2105:12:19","nodeType":"VariableDeclaration","scope":4584,"src":"2097:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2096:22:19"},"scope":4585,"src":"1992:127:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7434,"src":"1970:152:19","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4586,"name":"Ownable","nameLocations":["2151:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":193,"src":"2151:7:19"},"id":4587,"nodeType":"InheritanceSpecifier","src":"2151:7:19"},{"baseName":{"id":4588,"name":"ERC20","nameLocations":["2160:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"2160:5:19"},"id":4589,"nodeType":"InheritanceSpecifier","src":"2160:5:19"},{"baseName":{"id":4590,"name":"BaluniStake","nameLocations":["2167:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7877,"src":"2167:11:19"},"id":4591,"nodeType":"InheritanceSpecifier","src":"2167:11:19"}],"canonicalName":"BaluniRouter","contractDependencies":[4560],"contractKind":"contract","fullyImplemented":true,"id":7433,"linearizedBaseContracts":[7433,7877,1631,849,239,953,927,193,1562],"name":"BaluniRouter","nameLocation":"2135:12:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4595,"libraryName":{"id":4592,"name":"SafeERC20","nameLocations":["2189:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":1279,"src":"2189:9:19"},"nodeType":"UsingForDirective","src":"2183:27:19","typeName":{"id":4594,"nodeType":"UserDefinedTypeName","pathNode":{"id":4593,"name":"IERC20","nameLocations":["2203:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"2203:6:19"},"referencedDeclaration":927,"src":"2203:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"34decfc9","id":4598,"mutability":"constant","name":"_MAX_BPS_FEE","nameLocation":"2239:12:19","nodeType":"VariableDeclaration","scope":7433,"src":"2215:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2254:3:19","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":false,"functionSelector":"b9f5e617","id":4601,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"2278:8:19","nodeType":"VariableDeclaration","scope":7433,"src":"2263:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2289:2:19","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"public"},{"constant":false,"functionSelector":"85377188","id":4604,"mutability":"mutable","name":"_BPS_BASE","nameLocation":"2319:9:19","nodeType":"VariableDeclaration","scope":7433,"src":"2304:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2331:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"65534d52","id":4607,"mutability":"mutable","name":"_BPS_LIQUIDATE_FEE","nameLocation":"2355:18:19","nodeType":"VariableDeclaration","scope":7433,"src":"2340:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:2:19","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"public"},{"global":false,"id":4611,"libraryName":{"id":4608,"name":"EnumerableSet","nameLocations":["2399:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"2399:13:19"},"nodeType":"UsingForDirective","src":"2393:49:19","typeName":{"id":4610,"nodeType":"UserDefinedTypeName","pathNode":{"id":4609,"name":"EnumerableSet.AddressSet","nameLocations":["2417:13:19","2431:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"2417:24:19"},"referencedDeclaration":1957,"src":"2417:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":4614,"mutability":"mutable","name":"tokens","nameLocation":"2480:6:19","nodeType":"VariableDeclaration","scope":7433,"src":"2447:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4613,"nodeType":"UserDefinedTypeName","pathNode":{"id":4612,"name":"EnumerableSet.AddressSet","nameLocations":["2447:13:19","2461:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"2447:24:19"},"referencedDeclaration":1957,"src":"2447:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":true,"functionSelector":"89a30271","id":4620,"mutability":"constant","name":"USDC","nameLocation":"2515:4:19","nodeType":"VariableDeclaration","scope":7433,"src":"2492:83:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":4616,"nodeType":"UserDefinedTypeName","pathNode":{"id":4615,"name":"IERC20","nameLocations":["2492:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"2492:6:19"},"referencedDeclaration":927,"src":"2492:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"value":{"arguments":[{"hexValue":"307832373931426361316632646534363631454438384133304339394137613934343941613834313734","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2532:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4617,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2525:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2525:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"public"},{"constant":true,"id":4626,"mutability":"constant","name":"WNATIVE","nameLocation":"2612:7:19","nodeType":"VariableDeclaration","scope":7433,"src":"2579:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"},"typeName":{"id":4622,"nodeType":"UserDefinedTypeName","pathNode":{"id":4621,"name":"IERC20Metadata","nameLocations":["2579:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":953,"src":"2579:14:19"},"referencedDeclaration":953,"src":"2579:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"value":{"arguments":[{"hexValue":"307830643530304231643845386546333145323143393964314462394136343434643341446631323730","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2640:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4623,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2625:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"visibility":"internal"},{"constant":false,"functionSelector":"7dc0d1d0","id":4632,"mutability":"immutable","name":"oracle","nameLocation":"2712:6:19","nodeType":"VariableDeclaration","scope":7433,"src":"2687:88:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"},"typeName":{"id":4628,"nodeType":"UserDefinedTypeName","pathNode":{"id":4627,"name":"IOracle","nameLocations":["2687:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4585,"src":"2687:7:19"},"referencedDeclaration":4585,"src":"2687:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}},"value":{"arguments":[{"hexValue":"307830416444643235613931353633363936443835363744663738443541303143396139393146394238","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2732:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4629,"name":"IOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"2724:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOracle_$4585_$","typeString":"type(contract IOracle)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}},"visibility":"public"},{"constant":false,"functionSelector":"735de9f7","id":4638,"mutability":"immutable","name":"uniswapRouter","nameLocation":"2833:13:19","nodeType":"VariableDeclaration","scope":7433,"src":"2804:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"},"typeName":{"id":4634,"nodeType":"UserDefinedTypeName","pathNode":{"id":4633,"name":"ISwapRouter","nameLocations":["2804:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2441,"src":"2804:11:19"},"referencedDeclaration":2441,"src":"2804:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}},"value":{"arguments":[{"hexValue":"307845353932343237413041456365393244653345646565314631384530313537433035383631353634","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xE592427A0AEce92De3Edee1F18E0157C05861564"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4635,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"2852:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2441_$","typeString":"type(contract ISwapRouter)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"8bdb2afa","id":4644,"mutability":"immutable","name":"uniswapFactory","nameLocation":"2946:14:19","nodeType":"VariableDeclaration","scope":7433,"src":"2911:116:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"},"typeName":{"id":4640,"nodeType":"UserDefinedTypeName","pathNode":{"id":4639,"name":"IUniswapV3Factory","nameLocations":["2911:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"2911:17:19"},"referencedDeclaration":2327,"src":"2911:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"value":{"arguments":[{"hexValue":"307831463938343331633861443938353233363331414534613539663236373334366561333146393834","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2984:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1F98431c8aD98523631AE4a59f267346ea31F984"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4641,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2966:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2327_$","typeString":"type(contract IUniswapV3Factory)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2966:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"visibility":"public"},{"constant":false,"functionSelector":"7811a785","id":4649,"mutability":"mutable","name":"userAgents","nameLocation":"3072:10:19","nodeType":"VariableDeclaration","scope":7433,"src":"3033:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_BaluniAgent_$4560_$","typeString":"mapping(address => contract BaluniAgent)"},"typeName":{"id":4648,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4645,"name":"address","nodeType":"ElementaryTypeName","src":"3041:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3033:31:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_BaluniAgent_$4560_$","typeString":"mapping(address => contract BaluniAgent)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4647,"nodeType":"UserDefinedTypeName","pathNode":{"id":4646,"name":"BaluniAgent","nameLocations":["3052:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4560,"src":"3052:11:19"},"referencedDeclaration":4560,"src":"3052:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}},"visibility":"public"},{"constant":false,"functionSelector":"833d557f","id":4653,"mutability":"mutable","name":"tokenBalanceMap","nameLocation":"3121:15:19","nodeType":"VariableDeclaration","scope":7433,"src":"3086:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4652,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4650,"name":"address","nodeType":"ElementaryTypeName","src":"3094:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3086:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"8c6e353968e7ffd60dba22ff7d2a4354af301f9d41858a35668e7292ec1301b6","id":4659,"name":"AgentCreated","nameLocation":"3148:12:19","nodeType":"EventDefinition","parameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3169:4:19","nodeType":"VariableDeclaration","scope":4659,"src":"3161:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4654,"name":"address","nodeType":"ElementaryTypeName","src":"3161:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4657,"indexed":false,"mutability":"mutable","name":"agent","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":4659,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4656,"name":"address","nodeType":"ElementaryTypeName","src":"3175:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3160:29:19"},"src":"3142:48:19"},{"anonymous":false,"eventSelector":"959525f9273812bc5ed0bd375df7492e36027567ab13116ec62673c8d46870c8","id":4670,"name":"Execute","nameLocation":"3199:7:19","nodeType":"EventDefinition","parameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3219:4:19","nodeType":"VariableDeclaration","scope":4670,"src":"3211:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4660,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4665,"indexed":false,"mutability":"mutable","name":"calls","nameLocation":"3247:5:19","nodeType":"VariableDeclaration","scope":4670,"src":"3228:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_memory_ptr_$dyn_memory_ptr","typeString":"struct BaluniAgent.Call[]"},"typeName":{"baseType":{"id":4663,"nodeType":"UserDefinedTypeName","pathNode":{"id":4662,"name":"BaluniAgent.Call","nameLocations":["3228:11:19","3240:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"3228:16:19"},"referencedDeclaration":4273,"src":"3228:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4273_storage_ptr","typeString":"struct BaluniAgent.Call"}},"id":4664,"nodeType":"ArrayTypeName","src":"3228:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_storage_$dyn_storage_ptr","typeString":"struct BaluniAgent.Call[]"}},"visibility":"internal"},{"constant":false,"id":4668,"indexed":false,"mutability":"mutable","name":"tokensReturn","nameLocation":"3267:12:19","nodeType":"VariableDeclaration","scope":4670,"src":"3257:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4666,"name":"address","nodeType":"ElementaryTypeName","src":"3257:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4667,"nodeType":"ArrayTypeName","src":"3257:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3206:77:19"},"src":"3193:91:19"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":4676,"name":"Burn","nameLocation":"3293:4:19","nodeType":"EventDefinition","parameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3306:4:19","nodeType":"VariableDeclaration","scope":4676,"src":"3298:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4671,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4674,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3320:5:19","nodeType":"VariableDeclaration","scope":4676,"src":"3312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3297:29:19"},"src":"3287:40:19"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":4682,"name":"Mint","nameLocation":"3336:4:19","nodeType":"EventDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3349:4:19","nodeType":"VariableDeclaration","scope":4682,"src":"3341:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4677,"name":"address","nodeType":"ElementaryTypeName","src":"3341:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4680,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3363:5:19","nodeType":"VariableDeclaration","scope":4682,"src":"3355:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3340:29:19"},"src":"3330:40:19"},{"anonymous":false,"eventSelector":"bea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e0","id":4686,"name":"ChangeBpsFee","nameLocation":"3379:12:19","nodeType":"EventDefinition","parameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"3400:6:19","nodeType":"VariableDeclaration","scope":4686,"src":"3392:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3391:16:19"},"src":"3373:35:19"},{"anonymous":false,"eventSelector":"120de5c966483867382dce1eb95f0d016a917f91b2188b2f4c1413333a9ffb0f","id":4690,"name":"ChangeLiquidateFee","nameLocation":"3417:18:19","nodeType":"EventDefinition","parameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"3444:6:19","nodeType":"VariableDeclaration","scope":4690,"src":"3436:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3435:16:19"},"src":"3411:41:19"},{"body":{"id":4713,"nodeType":"Block","src":"3501:200:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"3519:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4696,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3533:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3539:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3533:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3519:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d657374616d7020746f6f2066617220696e2074686520667574757265","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3554:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_016ebd68339707679f132afabb33d9f4fc21b7b631f048e9b949ae97d3c404ac","typeString":"literal_string \"Timestamp too far in the future\""},"value":"Timestamp too far in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_016ebd68339707679f132afabb33d9f4fc21b7b631f048e9b949ae97d3c404ac","typeString":"literal_string \"Timestamp too far in the future\""}],"id":4694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3506:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:86:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4701,"nodeType":"ExpressionStatement","src":"3506:86:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"3610:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4704,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3624:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3624:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3642:6:19","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"3624:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3610:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d657374616d7020746f6f2066617220696e207468652070617374","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3654:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_978e99e4c6890f15eeca9a287fbcc1f8f2bd7639fdbff5b9e3efee371fbdf1b3","typeString":"literal_string \"Timestamp too far in the past\""},"value":"Timestamp too far in the past"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_978e99e4c6890f15eeca9a287fbcc1f8f2bd7639fdbff5b9e3efee371fbdf1b3","typeString":"literal_string \"Timestamp too far in the past\""}],"id":4702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:93:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4711,"nodeType":"ExpressionStatement","src":"3597:93:19"},{"id":4712,"nodeType":"PlaceholderStatement","src":"3695:1:19"}]},"id":4714,"name":"validTimestamp","nameLocation":"3466:14:19","nodeType":"ModifierDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"_timestamp","nameLocation":"3489:10:19","nodeType":"VariableDeclaration","scope":4714,"src":"3481:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"3481:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3480:20:19"},"src":"3457:244:19","virtual":false,"visibility":"internal"},{"body":{"id":4768,"nodeType":"Block","src":"3819:165:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":4738,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3838:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4736,"name":"address","nodeType":"ElementaryTypeName","src":"3830:7:19","typeDescriptions":{}}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3845:7:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":4735,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3824:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3824:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4742,"nodeType":"ExpressionStatement","src":"3824:29:19"},{"expression":{"arguments":[{"arguments":[{"id":4746,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3883:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3875:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"3875:7:19","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3875:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3890:7:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":4743,"name":"_stakeToContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"3858:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4750,"nodeType":"ExpressionStatement","src":"3858:40:19"},{"expression":{"arguments":[{"arguments":[{"id":4754,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3926:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3918:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4752,"name":"address","nodeType":"ElementaryTypeName","src":"3918:7:19","typeDescriptions":{}}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4751,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"3903:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4757,"nodeType":"ExpressionStatement","src":"3903:29:19"},{"expression":{"arguments":[{"id":4761,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"3957:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},{"arguments":[{"id":4764,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3973:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3965:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4762,"name":"address","nodeType":"ElementaryTypeName","src":"3965:7:19","typeDescriptions":{}}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3965:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4758,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3939:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSet_$2244_$","typeString":"type(library EnumerableSet)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3953:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"3939:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1957_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3939:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"ExpressionStatement","src":"3939:40:19"}]},"id":4769,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3731:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3735:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3731:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4719,"kind":"baseConstructorSpecifier","modifierName":{"id":4716,"name":"Ownable","nameLocations":["3723:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":193,"src":"3723:7:19"},"nodeType":"ModifierInvocation","src":"3723:19:19"},{"arguments":[{"hexValue":"42616c756e69","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3752:8:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d434daf865c4172431fe963e09dfffee59bf02a039f2a16ac1512baa0b52f5ad","typeString":"literal_string \"Baluni\""},"value":"Baluni"},{"hexValue":"42414c554e49","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:8:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dbbcf8e986894bb951b03a039da22e5dd38b473b6e36e83d09344a88817b0fb","typeString":"literal_string \"BALUNI\""},"value":"BALUNI"}],"id":4723,"kind":"baseConstructorSpecifier","modifierName":{"id":4720,"name":"ERC20","nameLocations":["3746:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"3746:5:19"},"nodeType":"ModifierInvocation","src":"3746:25:19"},{"arguments":[{"arguments":[{"id":4727,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3795:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3787:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4725,"name":"address","nodeType":"ElementaryTypeName","src":"3787:7:19","typeDescriptions":{}}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3787:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4731,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3810:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3802:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4729,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:19","typeDescriptions":{}}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4733,"kind":"baseConstructorSpecifier","modifierName":{"id":4724,"name":"BaluniStake","nameLocations":["3775:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7877,"src":"3775:11:19"},"nodeType":"ModifierInvocation","src":"3775:41:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[],"src":"3717:2:19"},"returnParameters":{"id":4734,"nodeType":"ParameterList","parameters":[],"src":"3819:0:19"},"scope":7433,"src":"3706:278:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4803,"nodeType":"Block","src":"4054:186:19","statements":[{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4776,"name":"balanceStakedOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"4059:15:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4778,"indexExpression":{"id":4777,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4075:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4059:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4779,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"4083:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4059:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4781,"nodeType":"ExpressionStatement","src":"4059:31:19"},{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4782,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"4095:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4783,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"4112:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4095:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ExpressionStatement","src":"4095:24:19"},{"expression":{"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4786,"name":"stakeTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"4124:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4789,"indexExpression":{"expression":{"id":4787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4139:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4139:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4124:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4790,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4153:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4159:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"4153:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4124:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4793,"nodeType":"ExpressionStatement","src":"4124:44:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"4179:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4195:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4179:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4802,"nodeType":"IfStatement","src":"4175:61:19","trueBody":{"id":4801,"nodeType":"Block","src":"4198:38:19","statements":[{"expression":{"arguments":[{"id":4798,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"4222:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"name":"updateRewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"4204:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4800,"nodeType":"ExpressionStatement","src":"4204:26:19"}]}}]},"id":4804,"implemented":true,"kind":"function","modifiers":[],"name":"_stakeToContract","nameLocation":"3998:16:19","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"_to","nameLocation":"4023:3:19","nodeType":"VariableDeclaration","scope":4804,"src":"4015:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4770,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4773,"mutability":"mutable","name":"_amount","nameLocation":"4036:7:19","nodeType":"VariableDeclaration","scope":4804,"src":"4028:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"4028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:30:19"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[],"src":"4054:0:19"},"scope":7433,"src":"3989:251:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4814,"nodeType":"Block","src":"4311:32:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4810,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"4323:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4330:6:19","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":2110,"src":"4323:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4809,"id":4813,"nodeType":"Return","src":"4316:22:19"}]},"functionSelector":"5e7f8b76","id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"listAllTokens","nameLocation":"4254:13:19","nodeType":"FunctionDefinition","parameters":{"id":4805,"nodeType":"ParameterList","parameters":[],"src":"4267:2:19"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"4293:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"4293:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4807,"nodeType":"ArrayTypeName","src":"4293:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4292:18:19"},"scope":7433,"src":"4245:98:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4868,"nodeType":"Block","src":"4418:289:19","statements":[{"assignments":[4823],"declarations":[{"constant":false,"id":4823,"mutability":"mutable","name":"salt","nameLocation":"4431:4:19","nodeType":"VariableDeclaration","scope":4868,"src":"4423:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4423:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4830,"initialValue":{"arguments":[{"arguments":[{"id":4827,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"4465:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4825,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4448:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4452:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"4448:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4448:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4824,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4438:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4423:49:19"},{"assignments":[4832],"declarations":[{"constant":false,"id":4832,"mutability":"mutable","name":"bytecode","nameLocation":"4490:8:19","nodeType":"VariableDeclaration","scope":4868,"src":"4477:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4831,"name":"bytes","nodeType":"ElementaryTypeName","src":"4477:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4836,"initialValue":{"arguments":[{"id":4834,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"4513:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4833,"name":"getBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"4501:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4501:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4477:42:19"},{"assignments":[4838],"declarations":[{"constant":false,"id":4838,"mutability":"mutable","name":"hash","nameLocation":"4532:4:19","nodeType":"VariableDeclaration","scope":4868,"src":"4524:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4524:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4856,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30786666","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4584:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4577:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4842,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4577:6:19","typeDescriptions":{}}},"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4577:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[{"id":4848,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4604:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4596:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4846,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:19","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4596:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4850,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"4616:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4852,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"4637:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4851,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4627:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4627:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4840,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4554:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4558:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"4554:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:98:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4839,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4539:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:118:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4524:133:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4863,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"4695:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4687:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"4687:7:19","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4679:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4859,"name":"uint160","nodeType":"ElementaryTypeName","src":"4679:7:19","typeDescriptions":{}}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4679:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4857,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:19","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4821,"id":4867,"nodeType":"Return","src":"4664:38:19"}]},"functionSelector":"27d54a92","id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"4357:15:19","nodeType":"FunctionDefinition","parameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"_user","nameLocation":"4381:5:19","nodeType":"VariableDeclaration","scope":4869,"src":"4373:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4816,"name":"address","nodeType":"ElementaryTypeName","src":"4373:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4372:15:19"},"returnParameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4869,"src":"4409:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4819,"name":"address","nodeType":"ElementaryTypeName","src":"4409:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4408:9:19"},"scope":7433,"src":"4348:359:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4942,"nodeType":"Block","src":"4782:408:19","statements":[{"assignments":[4878],"declarations":[{"constant":false,"id":4878,"mutability":"mutable","name":"salt","nameLocation":"4795:4:19","nodeType":"VariableDeclaration","scope":4942,"src":"4787:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4787:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4885,"initialValue":{"arguments":[{"arguments":[{"id":4882,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"4829:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4880,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4812:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4816:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"4812:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4812:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4879,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4802:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4802:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4787:48:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4888,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"4854:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_BaluniAgent_$4560_$","typeString":"mapping(address => contract BaluniAgent)"}},"id":4890,"indexExpression":{"id":4889,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"4865:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4854:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4846:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:19","typeDescriptions":{}}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4846:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"4875:7:19","typeDescriptions":{}}},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4846:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4937,"nodeType":"IfStatement","src":"4842:316:19","trueBody":{"id":4936,"nodeType":"Block","src":"4887:271:19","statements":[{"assignments":[4899],"declarations":[{"constant":false,"id":4899,"mutability":"mutable","name":"agent","nameLocation":"4905:5:19","nodeType":"VariableDeclaration","scope":4936,"src":"4893:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"},"typeName":{"id":4898,"nodeType":"UserDefinedTypeName","pathNode":{"id":4897,"name":"BaluniAgent","nameLocations":["4893:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4560,"src":"4893:11:19"},"referencedDeclaration":4560,"src":"4893:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"visibility":"internal"}],"id":4911,"initialValue":{"arguments":[{"id":4905,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"4949:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4908,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4968:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4960:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4906,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:19","typeDescriptions":{}}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4960:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"4913:15:19","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_BaluniAgent_$4560_$","typeString":"function (address,address) returns (contract BaluniAgent)"},"typeName":{"id":4901,"nodeType":"UserDefinedTypeName","pathNode":{"id":4900,"name":"BaluniAgent","nameLocations":["4917:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4560,"src":"4917:11:19"},"referencedDeclaration":4560,"src":"4917:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["salt"],"nodeType":"FunctionCallOptions","options":[{"id":4903,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"4936:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"src":"4913:29:19","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_BaluniAgent_$4560_$salt","typeString":"function (address,address) returns (contract BaluniAgent)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4913:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"nodeType":"VariableDeclarationStatement","src":"4893:86:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4916,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5010:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4914,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:19","typeDescriptions":{}}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5010:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4913,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"4999:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4999:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206372656174696f6e206661696c65642c206e6f74206120636f6e7472616374","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac0fb0826e30aa98458c6cf9bc90efc135a5469e91a5eaca89259410b213a0ed","typeString":"literal_string \"Agent creation failed, not a contract\""},"value":"Agent creation failed, not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac0fb0826e30aa98458c6cf9bc90efc135a5469e91a5eaca89259410b213a0ed","typeString":"literal_string \"Agent creation failed, not a contract\""}],"id":4912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4985:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4985:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4921,"nodeType":"ExpressionStatement","src":"4985:92:19"},{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4922,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"5083:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_BaluniAgent_$4560_$","typeString":"mapping(address => contract BaluniAgent)"}},"id":4924,"indexExpression":{"id":4923,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"5094:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5083:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4925,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5102:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"src":"5083:24:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"id":4927,"nodeType":"ExpressionStatement","src":"5083:24:19"},{"eventCall":{"arguments":[{"id":4929,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"5131:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4932,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5145:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5137:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4930,"name":"address","nodeType":"ElementaryTypeName","src":"5137:7:19","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4928,"name":"AgentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"5118:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"EmitStatement","src":"5113:39:19"}]}},{"expression":{"baseExpression":{"id":4938,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"5169:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_BaluniAgent_$4560_$","typeString":"mapping(address => contract BaluniAgent)"}},"id":4940,"indexExpression":{"id":4939,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"5180:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5169:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"functionReturnParameters":4876,"id":4941,"nodeType":"Return","src":"5162:23:19"}]},"id":4943,"implemented":true,"kind":"function","modifiers":[],"name":"getOrCreateAgent","nameLocation":"4721:16:19","nodeType":"FunctionDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"user","nameLocation":"4746:4:19","nodeType":"VariableDeclaration","scope":4943,"src":"4738:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4870,"name":"address","nodeType":"ElementaryTypeName","src":"4738:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4737:14:19"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4943,"src":"4769:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"},"typeName":{"id":4874,"nodeType":"UserDefinedTypeName","pathNode":{"id":4873,"name":"BaluniAgent","nameLocations":["4769:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4560,"src":"4769:11:19"},"referencedDeclaration":4560,"src":"4769:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"visibility":"internal"}],"src":"4768:13:19"},"scope":7433,"src":"4712:478:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4958,"nodeType":"Block","src":"5258:91:19","statements":[{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"size","nameLocation":"5270:4:19","nodeType":"VariableDeclaration","scope":4958,"src":"5263:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4950,"name":"uint32","nodeType":"ElementaryTypeName","src":"5263:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4952,"nodeType":"VariableDeclarationStatement","src":"5263:11:19"},{"AST":{"nativeSrc":"5288:37:19","nodeType":"YulBlock","src":"5288:37:19","statements":[{"nativeSrc":"5294:26:19","nodeType":"YulAssignment","src":"5294:26:19","value":{"arguments":[{"name":"_addr","nativeSrc":"5314:5:19","nodeType":"YulIdentifier","src":"5314:5:19"}],"functionName":{"name":"extcodesize","nativeSrc":"5302:11:19","nodeType":"YulIdentifier","src":"5302:11:19"},"nativeSrc":"5302:18:19","nodeType":"YulFunctionCall","src":"5302:18:19"},"variableNames":[{"name":"size","nativeSrc":"5294:4:19","nodeType":"YulIdentifier","src":"5294:4:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4945,"isOffset":false,"isSlot":false,"src":"5314:5:19","valueSize":1},{"declaration":4951,"isOffset":false,"isSlot":false,"src":"5294:4:19","valueSize":1}],"id":4953,"nodeType":"InlineAssembly","src":"5279:46:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"5336:4:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5336:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4949,"id":4957,"nodeType":"Return","src":"5329:15:19"}]},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"5204:10:19","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"_addr","nameLocation":"5223:5:19","nodeType":"VariableDeclaration","scope":4959,"src":"5215:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5214:15:19"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4959,"src":"5252:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4947,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5251:6:19"},"scope":7433,"src":"5195:154:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4996,"nodeType":"Block","src":"5428:204:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4967,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"5441:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5459:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5451:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4968,"name":"address","nodeType":"ElementaryTypeName","src":"5451:7:19","typeDescriptions":{}}},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5441:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e657220616464726573732063616e6e6f74206265207a65726f2e","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5463:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94d6360097febfd7f4167cfd501bae4c846a62fa5ecf30ee67ec10bc4fca031","typeString":"literal_string \"Owner address cannot be zero.\""},"value":"Owner address cannot be zero."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94d6360097febfd7f4167cfd501bae4c846a62fa5ecf30ee67ec10bc4fca031","typeString":"literal_string \"Owner address cannot be zero.\""}],"id":4966,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5433:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4975,"nodeType":"ExpressionStatement","src":"5433:62:19"},{"assignments":[4977],"declarations":[{"constant":false,"id":4977,"mutability":"mutable","name":"bytecode","nameLocation":"5513:8:19","nodeType":"VariableDeclaration","scope":4996,"src":"5500:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4976,"name":"bytes","nodeType":"ElementaryTypeName","src":"5500:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4982,"initialValue":{"expression":{"arguments":[{"id":4979,"name":"BaluniAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"5529:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniAgent_$4560_$","typeString":"type(contract BaluniAgent)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_BaluniAgent_$4560_$","typeString":"type(contract BaluniAgent)"}],"id":4978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5524:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5524:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_BaluniAgent_$4560","typeString":"type(contract BaluniAgent)"}},"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5542:12:19","memberName":"creationCode","nodeType":"MemberAccess","src":"5524:30:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5500:54:19"},{"expression":{"arguments":[{"id":4985,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"5583:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":4988,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"5604:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4991,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5620:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4989,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:19","typeDescriptions":{}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4986,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5593:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5597:6:19","memberName":"encode","nodeType":"MemberAccess","src":"5593:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5593:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4983,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5566:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5570:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"5566:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4965,"id":4995,"nodeType":"Return","src":"5559:68:19"}]},"id":4997,"implemented":true,"kind":"function","modifiers":[],"name":"getBytecode","nameLocation":"5363:11:19","nodeType":"FunctionDefinition","parameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"_owner","nameLocation":"5383:6:19","nodeType":"VariableDeclaration","scope":4997,"src":"5375:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4960,"name":"address","nodeType":"ElementaryTypeName","src":"5375:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5374:16:19"},"returnParameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4997,"src":"5414:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4963,"name":"bytes","nodeType":"ElementaryTypeName","src":"5414:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5413:14:19"},"scope":7433,"src":"5354:278:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"5690:25:19","statements":[{"expression":{"id":5002,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"5702:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5001,"id":5003,"nodeType":"Return","src":"5695:15:19"}]},"functionSelector":"185fcffe","id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"getBpsFee","nameLocation":"5646:9:19","nodeType":"FunctionDefinition","parameters":{"id":4998,"nodeType":"ParameterList","parameters":[],"src":"5655:2:19"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5005,"src":"5681:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5681:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5680:9:19"},"scope":7433,"src":"5637:78:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5020,"nodeType":"Block","src":"5778:59:19","statements":[{"expression":{"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"5783:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5013,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5783:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5015,"nodeType":"ExpressionStatement","src":"5783:18:19"},{"eventCall":{"arguments":[{"id":5017,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"5824:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"name":"ChangeBpsFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"5811:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5019,"nodeType":"EmitStatement","src":"5806:26:19"}]},"functionSelector":"06497cb9","id":5021,"implemented":true,"kind":"function","modifiers":[{"id":5010,"kind":"modifierInvocation","modifierName":{"id":5009,"name":"onlyOwner","nameLocations":["5768:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"5768:9:19"},"nodeType":"ModifierInvocation","src":"5768:9:19"}],"name":"changeBpsFee","nameLocation":"5729:12:19","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"_newFee","nameLocation":"5750:7:19","nodeType":"VariableDeclaration","scope":5021,"src":"5742:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5741:17:19"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[],"src":"5778:0:19"},"scope":7433,"src":"5720:117:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5036,"nodeType":"Block","src":"5909:75:19","statements":[{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"_BPS_LIQUIDATE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"5914:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5029,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"5935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5914:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"5914:28:19"},{"eventCall":{"arguments":[{"id":5033,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"5971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5032,"name":"ChangeLiquidateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"5952:18:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5035,"nodeType":"EmitStatement","src":"5947:32:19"}]},"functionSelector":"7b848914","id":5037,"implemented":true,"kind":"function","modifiers":[{"id":5026,"kind":"modifierInvocation","modifierName":{"id":5025,"name":"onlyOwner","nameLocations":["5899:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"5899:9:19"},"nodeType":"ModifierInvocation","src":"5899:9:19"}],"name":"changeBpsLiquidateFee","nameLocation":"5851:21:19","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"_newFee","nameLocation":"5881:7:19","nodeType":"VariableDeclaration","scope":5037,"src":"5873:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5873:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5872:17:19"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[],"src":"5909:0:19"},"scope":7433,"src":"5842:142:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5200,"nodeType":"Block","src":"6106:916:19","statements":[{"assignments":[5051],"declarations":[{"constant":false,"id":5051,"mutability":"mutable","name":"agent","nameLocation":"6123:5:19","nodeType":"VariableDeclaration","scope":5200,"src":"6111:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"},"typeName":{"id":5050,"nodeType":"UserDefinedTypeName","pathNode":{"id":5049,"name":"BaluniAgent","nameLocations":["6111:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4560,"src":"6111:11:19"},"referencedDeclaration":4560,"src":"6111:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"visibility":"internal"}],"id":5056,"initialValue":{"arguments":[{"expression":{"id":5053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6148:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6152:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6148:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5052,"name":"getOrCreateAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"6131:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_contract$_BaluniAgent_$4560_$","typeString":"function (address) returns (contract BaluniAgent)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"nodeType":"VariableDeclarationStatement","src":"6111:48:19"},{"assignments":[5061],"declarations":[{"constant":false,"id":5061,"mutability":"mutable","name":"isTokenNew","nameLocation":"6178:10:19","nodeType":"VariableDeclaration","scope":5200,"src":"6164:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5059,"name":"bool","nodeType":"ElementaryTypeName","src":"6164:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5060,"nodeType":"ArrayTypeName","src":"6164:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5068,"initialValue":{"arguments":[{"expression":{"id":5065,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6202:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6215:6:19","memberName":"length","nodeType":"MemberAccess","src":"6202:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6191:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":5062,"name":"bool","nodeType":"ElementaryTypeName","src":"6195:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5063,"nodeType":"ArrayTypeName","src":"6195:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6191:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6164:58:19"},{"body":{"id":5093,"nodeType":"Block","src":"6279:76:19","statements":[{"expression":{"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5080,"name":"isTokenNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6285:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5082,"indexExpression":{"id":5081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6296:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6285:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6301:48:19","subExpression":{"arguments":[{"id":5085,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"6325:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},{"baseExpression":{"id":5086,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6333:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5088,"indexExpression":{"id":5087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6346:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6333:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5083,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6302:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSet_$2244_$","typeString":"type(library EnumerableSet)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:8:19","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"6302:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6302:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6285:64:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5092,"nodeType":"ExpressionStatement","src":"6285:64:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6249:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5074,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6253:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6266:6:19","memberName":"length","nodeType":"MemberAccess","src":"6253:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6249:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5094,"initializationExpression":{"assignments":[5070],"declarations":[{"constant":false,"id":5070,"mutability":"mutable","name":"i","nameLocation":"6242:1:19","nodeType":"VariableDeclaration","scope":5094,"src":"6234:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5072,"initialValue":{"hexValue":"30","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6246:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6234:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6274:3:19","subExpression":{"id":5077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6274:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5079,"nodeType":"ExpressionStatement","src":"6274:3:19"},"nodeType":"ForStatement","src":"6229:126:19"},{"expression":{"arguments":[{"id":5098,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"6375:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call calldata[] calldata"}},{"id":5099,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6382:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call calldata[] calldata"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"expression":{"id":5095,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"6361:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniAgent_$4560","typeString":"contract BaluniAgent"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:7:19","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":4368,"src":"6361:13:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_struct$_Call_$4273_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (struct BaluniAgent.Call memory[] memory,address[] memory) external"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6361:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5101,"nodeType":"ExpressionStatement","src":"6361:34:19"},{"body":{"id":5198,"nodeType":"Block","src":"6452:566:19","statements":[{"assignments":[5114],"declarations":[{"constant":false,"id":5114,"mutability":"mutable","name":"token","nameLocation":"6466:5:19","nodeType":"VariableDeclaration","scope":5198,"src":"6458:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5113,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5118,"initialValue":{"baseExpression":{"id":5115,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6474:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5117,"indexExpression":{"id":5116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"6487:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6474:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6458:31:19"},{"assignments":[5120],"declarations":[{"constant":false,"id":5120,"mutability":"mutable","name":"poolNative3000","nameLocation":"6503:14:19","nodeType":"VariableDeclaration","scope":5198,"src":"6495:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5119,"name":"address","nodeType":"ElementaryTypeName","src":"6495:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5130,"initialValue":{"arguments":[{"id":5123,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"6549:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5126,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"6569:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}],"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6561:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5124,"name":"address","nodeType":"ElementaryTypeName","src":"6561:7:19","typeDescriptions":{}}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6561:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6584:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"id":5121,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"6520:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6535:7:19","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"6520:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6520:74:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6495:99:19"},{"assignments":[5132],"declarations":[{"constant":false,"id":5132,"mutability":"mutable","name":"poolNative500","nameLocation":"6608:13:19","nodeType":"VariableDeclaration","scope":5198,"src":"6600:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5131,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5142,"initialValue":{"arguments":[{"id":5135,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"6653:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5138,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"6673:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6665:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5136,"name":"address","nodeType":"ElementaryTypeName","src":"6665:7:19","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6665:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"353030","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6688:3:19","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"id":5133,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"6624:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6639:7:19","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"6624:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6624:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6600:97:19"},{"assignments":[5144],"declarations":[{"constant":false,"id":5144,"mutability":"mutable","name":"poolExist","nameLocation":"6708:9:19","nodeType":"VariableDeclaration","scope":5198,"src":"6703:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5143,"name":"bool","nodeType":"ElementaryTypeName","src":"6703:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5158,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"poolNative3000","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"6720:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6746:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5146,"name":"address","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{}}},"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6738:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6720:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"poolNative500","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"6757:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6782:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6774:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5152,"name":"address","nodeType":"ElementaryTypeName","src":"6774:7:19","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6774:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6757:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6720:64:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6703:81:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5159,"name":"isTokenNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6796:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5161,"indexExpression":{"id":5160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"6807:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6796:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5162,"name":"poolExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"6813:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5172,"nodeType":"IfStatement","src":"6792:78:19","trueBody":{"id":5171,"nodeType":"Block","src":"6824:46:19","statements":[{"expression":{"arguments":[{"id":5167,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"6849:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},{"id":5168,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"6857:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5164,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6831:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSet_$2244_$","typeString":"type(library EnumerableSet)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6845:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"6831:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1957_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5170,"nodeType":"ExpressionStatement","src":"6831:32:19"}]}},{"condition":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6881:10:19","subExpression":{"id":5173,"name":"poolExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"6882:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5197,"nodeType":"IfStatement","src":"6877:136:19","trueBody":{"id":5196,"nodeType":"Block","src":"6893:120:19","statements":[{"assignments":[5176],"declarations":[{"constant":false,"id":5176,"mutability":"mutable","name":"balance","nameLocation":"6908:7:19","nodeType":"VariableDeclaration","scope":5196,"src":"6900:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"6900:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5186,"initialValue":{"arguments":[{"arguments":[{"id":5183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6950:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6942:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5181,"name":"address","nodeType":"ElementaryTypeName","src":"6942:7:19","typeDescriptions":{}}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6942:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5178,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"6925:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5177,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6918:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6918:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6932:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"6918:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6918:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6900:56:19"},{"expression":{"arguments":[{"expression":{"id":5191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6986:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6990:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6986:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5193,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"6998:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5188,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"6970:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5187,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6963:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6977:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"6963:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"ExpressionStatement","src":"6963:43:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"6422:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5107,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"6426:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6439:6:19","memberName":"length","nodeType":"MemberAccess","src":"6426:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6422:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"initializationExpression":{"assignments":[5103],"declarations":[{"constant":false,"id":5103,"mutability":"mutable","name":"i","nameLocation":"6415:1:19","nodeType":"VariableDeclaration","scope":5199,"src":"6407:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5105,"initialValue":{"hexValue":"30","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6407:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6447:3:19","subExpression":{"id":5110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"6447:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5112,"nodeType":"ExpressionStatement","src":"6447:3:19"},"nodeType":"ForStatement","src":"6402:616:19"}]},"functionSelector":"eedc3c50","id":5201,"implemented":true,"kind":"function","modifiers":[{"id":5047,"kind":"modifierInvocation","modifierName":{"id":5046,"name":"nonReentrant","nameLocations":["6093:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"6093:12:19"},"nodeType":"ModifierInvocation","src":"6093:12:19"}],"name":"execute","nameLocation":"5998:7:19","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5041,"mutability":"mutable","name":"calls","nameLocation":"6038:5:19","nodeType":"VariableDeclaration","scope":5201,"src":"6010:33:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaluniAgent.Call[]"},"typeName":{"baseType":{"id":5039,"nodeType":"UserDefinedTypeName","pathNode":{"id":5038,"name":"BaluniAgent.Call","nameLocations":["6010:11:19","6022:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"6010:16:19"},"referencedDeclaration":4273,"src":"6010:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4273_storage_ptr","typeString":"struct BaluniAgent.Call"}},"id":5040,"nodeType":"ArrayTypeName","src":"6010:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4273_storage_$dyn_storage_ptr","typeString":"struct BaluniAgent.Call[]"}},"visibility":"internal"},{"constant":false,"id":5044,"mutability":"mutable","name":"tokensReturn","nameLocation":"6067:12:19","nodeType":"VariableDeclaration","scope":5201,"src":"6048:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5042,"name":"address","nodeType":"ElementaryTypeName","src":"6048:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5043,"nodeType":"ArrayTypeName","src":"6048:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6005:78:19"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[],"src":"6106:0:19"},"scope":7433,"src":"5989:1033:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5349,"nodeType":"Block","src":"7083:955:19","statements":[{"assignments":[5209],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"7096:17:19","nodeType":"VariableDeclaration","scope":5349,"src":"7088:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"7088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5219,"initialValue":{"arguments":[{"arguments":[{"id":5216,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7148:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7140:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5214,"name":"address","nodeType":"ElementaryTypeName","src":"7140:7:19","typeDescriptions":{}}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7140:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5211,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"7123:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5210,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"7116:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"7116:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7088:66:19"},{"assignments":[5221],"declarations":[{"constant":false,"id":5221,"mutability":"mutable","name":"pool","nameLocation":"7167:4:19","nodeType":"VariableDeclaration","scope":5349,"src":"7159:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5220,"name":"address","nodeType":"ElementaryTypeName","src":"7159:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5231,"initialValue":{"arguments":[{"id":5224,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"7197:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5227,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"7212:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7204:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5225,"name":"address","nodeType":"ElementaryTypeName","src":"7204:7:19","typeDescriptions":{}}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7204:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7219:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"id":5222,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"7174:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7189:7:19","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"7174:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7174:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7159:65:19"},{"expression":{"arguments":[{"id":5233,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"7244:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5236,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"7259:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7251:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5234,"name":"address","nodeType":"ElementaryTypeName","src":"7251:7:19","typeDescriptions":{}}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5238,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7275:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"7229:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5240,"nodeType":"ExpressionStatement","src":"7229:64:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5241,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"7304:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7320:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7312:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5242,"name":"address","nodeType":"ElementaryTypeName","src":"7312:7:19","typeDescriptions":{}}},"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7312:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7304:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5296,"nodeType":"Block","src":"7523:210:19","statements":[{"assignments":[5271],"declarations":[{"constant":false,"id":5271,"mutability":"mutable","name":"amountOutHop","nameLocation":"7537:12:19","nodeType":"VariableDeclaration","scope":5296,"src":"7529:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"7529:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5288,"initialValue":{"arguments":[{"id":5273,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"7571:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5276,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"7591:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}],"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7583:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5274,"name":"address","nodeType":"ElementaryTypeName","src":"7583:7:19","typeDescriptions":{}}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7583:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5280,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"7614:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7606:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5278,"name":"address","nodeType":"ElementaryTypeName","src":"7606:7:19","typeDescriptions":{}}},"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7606:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5282,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7626:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5285,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7658:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7650:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5283,"name":"address","nodeType":"ElementaryTypeName","src":"7650:7:19","typeDescriptions":{}}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7650:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5272,"name":"multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"7552:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:117:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7529:140:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"7683:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7698:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7683:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7701:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":5289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7675:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7675:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5295,"nodeType":"ExpressionStatement","src":"7675:52:19"}]},"id":5297,"nodeType":"IfStatement","src":"7300:433:19","trueBody":{"id":5269,"nodeType":"Block","src":"7324:193:19","statements":[{"assignments":[5248],"declarations":[{"constant":false,"id":5248,"mutability":"mutable","name":"singleSwapResult","nameLocation":"7338:16:19","nodeType":"VariableDeclaration","scope":5269,"src":"7330:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"7330:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5261,"initialValue":{"arguments":[{"id":5250,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"7374:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5253,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"7394:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7386:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5251,"name":"address","nodeType":"ElementaryTypeName","src":"7386:7:19","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7386:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5255,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7406:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7438:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7430:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5256,"name":"address","nodeType":"ElementaryTypeName","src":"7430:7:19","typeDescriptions":{}}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7430:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5249,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"7357:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7357:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7330:119:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"singleSwapResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"7463:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7482:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7463:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7485:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":5262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7455:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7455:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5268,"nodeType":"ExpressionStatement","src":"7455:56:19"}]}},{"assignments":[5299],"declarations":[{"constant":false,"id":5299,"mutability":"mutable","name":"reward","nameLocation":"7747:6:19","nodeType":"VariableDeclaration","scope":5349,"src":"7739:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"7739:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5308,"initialValue":{"arguments":[{"arguments":[{"id":5303,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7772:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7764:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5301,"name":"address","nodeType":"ElementaryTypeName","src":"7764:7:19","typeDescriptions":{}}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7764:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7779:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7783:6:19","memberName":"sender","nodeType":"MemberAccess","src":"7779:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5300,"name":"claimTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) returns (uint256)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7739:51:19"},{"assignments":[5310],"declarations":[{"constant":false,"id":5310,"mutability":"mutable","name":"mintAmount","nameLocation":"7803:10:19","nodeType":"VariableDeclaration","scope":5349,"src":"7795:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5318,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5311,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7817:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7817:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5313,"name":"_BPS_LIQUIDATE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"7833:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7817:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7816:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7855:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7816:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:65:19"},{"expression":{"arguments":[{"arguments":[{"id":5322,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7881:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7873:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5320,"name":"address","nodeType":"ElementaryTypeName","src":"7873:7:19","typeDescriptions":{}}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7873:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5324,"name":"mintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"7888:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5319,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"7867:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7867:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5326,"nodeType":"ExpressionStatement","src":"7867:32:19"},{"expression":{"arguments":[{"arguments":[{"id":5330,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7929:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7921:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5328,"name":"address","nodeType":"ElementaryTypeName","src":"7921:7:19","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7921:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5332,"name":"mintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"7936:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5327,"name":"_stakeToContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"7904:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7904:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5334,"nodeType":"ExpressionStatement","src":"7904:43:19"},{"eventCall":{"arguments":[{"arguments":[{"id":5338,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7972:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7964:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5336,"name":"address","nodeType":"ElementaryTypeName","src":"7964:7:19","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5340,"name":"mintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"7979:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5335,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"7959:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5342,"nodeType":"EmitStatement","src":"7954:36:19"},{"eventCall":{"arguments":[{"expression":{"id":5344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8014:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8018:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8014:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5346,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"8026:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5343,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"8000:13:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8000:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"EmitStatement","src":"7995:38:19"}]},"functionSelector":"2f865568","id":5350,"implemented":true,"kind":"function","modifiers":[{"id":5206,"kind":"modifierInvocation","modifierName":{"id":5205,"name":"nonReentrant","nameLocations":["7070:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"7070:12:19"},"nodeType":"ModifierInvocation","src":"7070:12:19"}],"name":"liquidate","nameLocation":"7036:9:19","nodeType":"FunctionDefinition","parameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"token","nameLocation":"7054:5:19","nodeType":"VariableDeclaration","scope":5350,"src":"7046:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5202,"name":"address","nodeType":"ElementaryTypeName","src":"7046:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7045:15:19"},"returnParameters":{"id":5207,"nodeType":"ParameterList","parameters":[],"src":"7083:0:19"},"scope":7433,"src":"7027:1011:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5454,"nodeType":"Block","src":"8099:647:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8122:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8126:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8122:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5358,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8112:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8112:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5362,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"8137:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8112:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8149:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""},"value":"Insufficient BAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""}],"id":5357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8104:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8104:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5366,"nodeType":"ExpressionStatement","src":"8104:64:19"},{"body":{"id":5440,"nodeType":"Block","src":"8217:453:19","statements":[{"assignments":[5379],"declarations":[{"constant":false,"id":5379,"mutability":"mutable","name":"token","nameLocation":"8231:5:19","nodeType":"VariableDeclaration","scope":5440,"src":"8223:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"8223:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5384,"initialValue":{"arguments":[{"id":5382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8249:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5380,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8239:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8246:2:19","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"8239:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8239:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8223:28:19"},{"assignments":[5386],"declarations":[{"constant":false,"id":5386,"mutability":"mutable","name":"totalBaluni","nameLocation":"8265:11:19","nodeType":"VariableDeclaration","scope":5440,"src":"8257:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"8257:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5389,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5387,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"8279:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8279:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8257:35:19"},{"assignments":[5391],"declarations":[{"constant":false,"id":5391,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"8306:17:19","nodeType":"VariableDeclaration","scope":5440,"src":"8298:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"8298:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5401,"initialValue":{"arguments":[{"arguments":[{"id":5398,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8358:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8350:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5396,"name":"address","nodeType":"ElementaryTypeName","src":"8350:7:19","typeDescriptions":{}}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8350:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5393,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"8333:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5392,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"8326:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8326:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8340:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"8326:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8326:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8298:66:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"8376:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8397:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8376:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5405,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"8402:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8419:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8411:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5406,"name":"address","nodeType":"ElementaryTypeName","src":"8411:7:19","typeDescriptions":{}}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8402:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8376:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5413,"nodeType":"IfStatement","src":"8372:62:19","trueBody":{"id":5412,"nodeType":"Continue","src":"8426:8:19"}},{"assignments":[5415],"declarations":[{"constant":false,"id":5415,"mutability":"mutable","name":"decimals","nameLocation":"8450:8:19","nodeType":"VariableDeclaration","scope":5440,"src":"8442:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"8442:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5421,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5417,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"8476:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5416,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8461:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8461:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8483:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"8461:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8461:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"8442:51:19"},{"assignments":[5423],"declarations":[{"constant":false,"id":5423,"mutability":"mutable","name":"share","nameLocation":"8507:5:19","nodeType":"VariableDeclaration","scope":5440,"src":"8499:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"8499:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5430,"initialValue":{"arguments":[{"id":5425,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"8542:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5426,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"8560:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5427,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"8584:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5428,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"8601:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5424,"name":"_calculateTokenShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"8515:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8515:100:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8499:116:19"},{"expression":{"arguments":[{"expression":{"id":5435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8646:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8646:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5437,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"8658:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"8630:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5431,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"8623:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8623:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8637:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"8623:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8623:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5439,"nodeType":"ExpressionStatement","src":"8623:41:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8191:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5371,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8195:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8202:6:19","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"8195:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8191:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5441,"initializationExpression":{"assignments":[5368],"declarations":[{"constant":false,"id":5368,"mutability":"mutable","name":"i","nameLocation":"8188:1:19","nodeType":"VariableDeclaration","scope":5441,"src":"8180:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"8180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5369,"nodeType":"VariableDeclarationStatement","src":"8180:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8212:3:19","subExpression":{"id":5375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8212:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5377,"nodeType":"ExpressionStatement","src":"8212:3:19"},"nodeType":"ForStatement","src":"8175:495:19"},{"expression":{"arguments":[{"expression":{"id":5443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8680:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8684:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8680:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5445,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"8692:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5442,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"8674:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5447,"nodeType":"ExpressionStatement","src":"8674:29:19"},{"eventCall":{"arguments":[{"expression":{"id":5449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8718:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8722:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8718:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5451,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"8730:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"8713:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8713:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5453,"nodeType":"EmitStatement","src":"8708:33:19"}]},"functionSelector":"42966c68","id":5455,"implemented":true,"kind":"function","modifiers":[{"id":5355,"kind":"modifierInvocation","modifierName":{"id":5354,"name":"nonReentrant","nameLocations":["8086:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"8086:12:19"},"nodeType":"ModifierInvocation","src":"8086:12:19"}],"name":"burn","nameLocation":"8052:4:19","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"burnAmount","nameLocation":"8065:10:19","nodeType":"VariableDeclaration","scope":5455,"src":"8057:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8057:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8056:20:19"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[],"src":"8099:0:19"},"scope":7433,"src":"8043:703:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5633,"nodeType":"Block","src":"8826:1194:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"8839:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8839:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8855:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""},"value":"Insufficient BAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""}],"id":5462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8831:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8831:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5468,"nodeType":"ExpressionStatement","src":"8831:43:19"},{"body":{"id":5619,"nodeType":"Block","src":"8923:1019:19","statements":[{"assignments":[5481],"declarations":[{"constant":false,"id":5481,"mutability":"mutable","name":"token","nameLocation":"8937:5:19","nodeType":"VariableDeclaration","scope":5619,"src":"8929:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5480,"name":"address","nodeType":"ElementaryTypeName","src":"8929:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5486,"initialValue":{"arguments":[{"id":5484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"8955:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5482,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8945:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8952:2:19","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"8945:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8945:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8929:28:19"},{"assignments":[5488],"declarations":[{"constant":false,"id":5488,"mutability":"mutable","name":"totalBaluni","nameLocation":"8971:11:19","nodeType":"VariableDeclaration","scope":5619,"src":"8963:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"8963:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5489,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"8985:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8963:35:19"},{"assignments":[5493],"declarations":[{"constant":false,"id":5493,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"9012:17:19","nodeType":"VariableDeclaration","scope":5619,"src":"9004:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5503,"initialValue":{"arguments":[{"arguments":[{"id":5500,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9064:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9056:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5498,"name":"address","nodeType":"ElementaryTypeName","src":"9056:7:19","typeDescriptions":{}}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5495,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9039:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5494,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9032:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9032:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9046:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"9032:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9032:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9004:66:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"9082:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9082:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9107:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9082:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5510,"nodeType":"IfStatement","src":"9078:44:19","trueBody":{"id":5509,"nodeType":"Continue","src":"9114:8:19"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9132:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5514,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9149:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9141:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5512,"name":"address","nodeType":"ElementaryTypeName","src":"9141:7:19","typeDescriptions":{}}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9141:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9132:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5518,"nodeType":"IfStatement","src":"9128:36:19","trueBody":{"id":5517,"nodeType":"Continue","src":"9156:8:19"}},{"assignments":[5520],"declarations":[{"constant":false,"id":5520,"mutability":"mutable","name":"decimals","nameLocation":"9180:8:19","nodeType":"VariableDeclaration","scope":5619,"src":"9172:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"9172:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5526,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5522,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9206:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5521,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"9191:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9191:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9213:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"9191:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9191:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"9172:51:19"},{"assignments":[5528],"declarations":[{"constant":false,"id":5528,"mutability":"mutable","name":"burnAmountToken","nameLocation":"9237:15:19","nodeType":"VariableDeclaration","scope":5619,"src":"9229:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"9229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5535,"initialValue":{"arguments":[{"id":5530,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"9282:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5531,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"9300:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5532,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"9324:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5533,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"9341:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5529,"name":"_calculateTokenShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"9255:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:100:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9229:126:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9367:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5539,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9384:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9376:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5537,"name":"address","nodeType":"ElementaryTypeName","src":"9376:7:19","typeDescriptions":{}}},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9376:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9367:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5553,"nodeType":"IfStatement","src":"9363:107:19","trueBody":{"id":5552,"nodeType":"Block","src":"9391:79:19","statements":[{"expression":{"arguments":[{"expression":{"id":5546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9420:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9424:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9420:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5548,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"9432:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5543,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9405:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5542,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9398:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9411:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"9398:21:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5550,"nodeType":"ExpressionStatement","src":"9398:50:19"},{"id":5551,"nodeType":"Continue","src":"9455:8:19"}]}},{"assignments":[5555],"declarations":[{"constant":false,"id":5555,"mutability":"mutable","name":"pool","nameLocation":"9485:4:19","nodeType":"VariableDeclaration","scope":5619,"src":"9477:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5554,"name":"address","nodeType":"ElementaryTypeName","src":"9477:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5565,"initialValue":{"arguments":[{"id":5558,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9515:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5561,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9530:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9522:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5559,"name":"address","nodeType":"ElementaryTypeName","src":"9522:7:19","typeDescriptions":{}}},"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"id":5556,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"9492:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9507:7:19","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"9492:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9492:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9477:65:19"},{"expression":{"arguments":[{"id":5567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9563:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5570,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"9578:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9570:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5568,"name":"address","nodeType":"ElementaryTypeName","src":"9570:7:19","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9570:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5572,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"9594:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5566,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"9548:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9548:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5574,"nodeType":"ExpressionStatement","src":"9548:62:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"9622:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9638:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9630:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5576,"name":"address","nodeType":"ElementaryTypeName","src":"9630:7:19","typeDescriptions":{}}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9630:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9622:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5617,"nodeType":"Block","src":"9723:214:19","statements":[{"assignments":[5594],"declarations":[{"constant":false,"id":5594,"mutability":"mutable","name":"amountOutHop","nameLocation":"9738:12:19","nodeType":"VariableDeclaration","scope":5617,"src":"9730:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"9730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5609,"initialValue":{"arguments":[{"id":5596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9773:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5599,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"9794:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}],"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9786:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5597,"name":"address","nodeType":"ElementaryTypeName","src":"9786:7:19","typeDescriptions":{}}},"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9786:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5603,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9818:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9810:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5601,"name":"address","nodeType":"ElementaryTypeName","src":"9810:7:19","typeDescriptions":{}}},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5605,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"9831:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9854:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9858:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9854:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5595,"name":"multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"9753:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9753:118:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9730:141:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5611,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"9886:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9901:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9886:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9904:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":5610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9878:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9878:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5616,"nodeType":"ExpressionStatement","src":"9878:52:19"}]},"id":5618,"nodeType":"IfStatement","src":"9618:319:19","trueBody":{"id":5592,"nodeType":"Block","src":"9642:75:19","statements":[{"expression":{"arguments":[{"id":5582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9660:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5585,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9675:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9667:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5583,"name":"address","nodeType":"ElementaryTypeName","src":"9667:7:19","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5587,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"9682:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9699:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9703:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9699:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5581,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"9649:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9649:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5591,"nodeType":"ExpressionStatement","src":"9649:61:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"8897:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5473,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8901:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8908:6:19","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"8901:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8901:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8897:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5620,"initializationExpression":{"assignments":[5470],"declarations":[{"constant":false,"id":5470,"mutability":"mutable","name":"i","nameLocation":"8894:1:19","nodeType":"VariableDeclaration","scope":5620,"src":"8886:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"8886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5471,"nodeType":"VariableDeclarationStatement","src":"8886:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8918:3:19","subExpression":{"id":5477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"8918:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5479,"nodeType":"ExpressionStatement","src":"8918:3:19"},"nodeType":"ForStatement","src":"8881:1061:19"},{"expression":{"arguments":[{"expression":{"id":5622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9952:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9956:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9952:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5624,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"9964:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5621,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"9946:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9946:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"ExpressionStatement","src":"9946:29:19"},{"eventCall":{"arguments":[{"expression":{"id":5628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9992:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9996:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9992:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5630,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"10004:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5627,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"9987:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9987:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5632,"nodeType":"EmitStatement","src":"9982:33:19"}]},"functionSelector":"cde53358","id":5634,"implemented":true,"kind":"function","modifiers":[{"id":5460,"kind":"modifierInvocation","modifierName":{"id":5459,"name":"nonReentrant","nameLocations":["8813:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"8813:12:19"},"nodeType":"ModifierInvocation","src":"8813:12:19"}],"name":"burnTokensAndSwapToUSDC","nameLocation":"8760:23:19","nodeType":"FunctionDefinition","parameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"burnAmount","nameLocation":"8792:10:19","nodeType":"VariableDeclaration","scope":5634,"src":"8784:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"8784:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8783:20:19"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[],"src":"8826:0:19"},"scope":7433,"src":"8751:1269:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5656,"nodeType":"Block","src":"10117:115:19","statements":[{"assignments":[5642],"declarations":[{"constant":false,"id":5642,"mutability":"mutable","name":"amountInWithFee","nameLocation":"10130:15:19","nodeType":"VariableDeclaration","scope":5656,"src":"10122:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10122:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5653,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"10149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10160:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":5645,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"10173:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10172:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10159:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10149:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10148:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5651,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"10191:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10148:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10122:78:19"},{"expression":{"id":5654,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"10212:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5640,"id":5655,"nodeType":"Return","src":"10205:22:19"}]},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"calculateNetAmountAfterFee","nameLocation":"10034:26:19","nodeType":"FunctionDefinition","parameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"_amount","nameLocation":"10073:7:19","nodeType":"VariableDeclaration","scope":5657,"src":"10065:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"10065:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10060:24:19"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5657,"src":"10108:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"10108:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10107:9:19"},"scope":7433,"src":"10025:207:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"10291:45:19","statements":[{"expression":{"arguments":[{"hexValue":"31653138","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10326:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":5662,"name":"_calculateBaluniToUsdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"10303:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5661,"id":5665,"nodeType":"Return","src":"10296:35:19"}]},"functionSelector":"012a33aa","id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"getUnitPrice","nameLocation":"10246:12:19","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[],"src":"10258:2:19"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"10282:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:9:19"},"scope":7433,"src":"10237:99:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5807,"nodeType":"Block","src":"10429:1031:19","statements":[{"assignments":[5677],"declarations":[{"constant":false,"id":5677,"mutability":"mutable","name":"totalUSDValuation","nameLocation":"10442:17:19","nodeType":"VariableDeclaration","scope":5807,"src":"10434:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"10434:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5680,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5678,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"10462:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10462:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10434:45:19"},{"assignments":[5682],"declarations":[{"constant":false,"id":5682,"mutability":"mutable","name":"totalBalSupply","nameLocation":"10492:14:19","nodeType":"VariableDeclaration","scope":5807,"src":"10484:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5685,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5683,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"10509:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10509:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10484:38:19"},{"assignments":[5687],"declarations":[{"constant":false,"id":5687,"mutability":"mutable","name":"usdcRequired","nameLocation":"10535:12:19","nodeType":"VariableDeclaration","scope":5807,"src":"10527:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5686,"name":"uint256","nodeType":"ElementaryTypeName","src":"10527:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5694,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"10551:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5689,"name":"totalUSDValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"10569:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10551:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10550:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5692,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"10594:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10550:58:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10527:81:19"},{"assignments":[5696],"declarations":[{"constant":false,"id":5696,"mutability":"mutable","name":"balance","nameLocation":"10621:7:19","nodeType":"VariableDeclaration","scope":5807,"src":"10613:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"10613:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5704,"initialValue":{"arguments":[{"expression":{"id":5701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10654:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10658:6:19","memberName":"sender","nodeType":"MemberAccess","src":"10654:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5698,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"10638:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5697,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"10631:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10631:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10644:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"10631:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10631:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10613:52:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"10678:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10678:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65726f","id":5709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10698:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""},"value":"Total BALUNI supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""}],"id":5705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10670:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10670:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5711,"nodeType":"ExpressionStatement","src":"10670:65:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5713,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"10748:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"10759:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10774:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"10759:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10748:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555344432062616c616e636520697320696e73756666696369656e74","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10780:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c","typeString":"literal_string \"USDC balance is insufficient\""},"value":"USDC balance is insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c","typeString":"literal_string \"USDC balance is insufficient\""}],"id":5712,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10740:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10740:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5720,"nodeType":"ExpressionStatement","src":"10740:71:19"},{"assignments":[5722],"declarations":[{"constant":false,"id":5722,"mutability":"mutable","name":"allowed","nameLocation":"10826:7:19","nodeType":"VariableDeclaration","scope":5807,"src":"10818:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5721,"name":"uint256","nodeType":"ElementaryTypeName","src":"10818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5732,"initialValue":{"arguments":[{"expression":{"id":5725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10851:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10855:6:19","memberName":"sender","nodeType":"MemberAccess","src":"10851:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10871:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10863:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5727,"name":"address","nodeType":"ElementaryTypeName","src":"10863:7:19","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10863:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5723,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"10836:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10841:9:19","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":904,"src":"10836:14:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10836:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10818:59:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"10890:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"10901:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10916:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"10901:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10890:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b2074686520746f6b656e20616c6c6f77616e6365","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10922:27:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""},"value":"Check the token allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""}],"id":5733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10882:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10882:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5741,"nodeType":"ExpressionStatement","src":"10882:68:19"},{"expression":{"arguments":[{"expression":{"id":5745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10979:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10983:6:19","memberName":"sender","nodeType":"MemberAccess","src":"10979:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5749,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10999:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10991:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5747,"name":"address","nodeType":"ElementaryTypeName","src":"10991:7:19","typeDescriptions":{}}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10991:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"11006:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11021:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"11006:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5742,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"10957:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10962:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"10957:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$927_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10957:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5755,"nodeType":"ExpressionStatement","src":"10957:69:19"},{"assignments":[5757],"declarations":[{"constant":false,"id":5757,"mutability":"mutable","name":"amountAfterFee","nameLocation":"11041:14:19","nodeType":"VariableDeclaration","scope":5807,"src":"11033:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"11033:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5761,"initialValue":{"arguments":[{"id":5759,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"11085:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"name":"calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"11058:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11058:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11033:68:19"},{"assignments":[5763],"declarations":[{"constant":false,"id":5763,"mutability":"mutable","name":"netBalAmountToMint","nameLocation":"11114:18:19","nodeType":"VariableDeclaration","scope":5807,"src":"11106:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"11106:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5764,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"11135:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5765,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"11153:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11106:61:19"},{"expression":{"arguments":[{"arguments":[{"id":5771,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11188:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11180:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5769,"name":"address","nodeType":"ElementaryTypeName","src":"11180:7:19","typeDescriptions":{}}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11180:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5773,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"11195:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5768,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"11174:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11174:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5775,"nodeType":"ExpressionStatement","src":"11174:40:19"},{"eventCall":{"arguments":[{"arguments":[{"id":5779,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11237:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11229:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5777,"name":"address","nodeType":"ElementaryTypeName","src":"11229:7:19","typeDescriptions":{}}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11229:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5781,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"11244:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5776,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"11224:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11224:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5783,"nodeType":"EmitStatement","src":"11219:44:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5784,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"11274:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11274:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5792,"nodeType":"IfStatement","src":"11270:72:19","trueBody":{"id":5791,"nodeType":"Block","src":"11293:49:19","statements":[{"expression":{"arguments":[{"id":5788,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"11317:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5787,"name":"updateRewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"11299:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11299:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5790,"nodeType":"ExpressionStatement","src":"11299:37:19"}]}},{"expression":{"arguments":[{"expression":{"id":5794,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11354:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11358:6:19","memberName":"sender","nodeType":"MemberAccess","src":"11354:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5796,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"11366:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5793,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"11348:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11348:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5798,"nodeType":"ExpressionStatement","src":"11348:33:19"},{"eventCall":{"arguments":[{"expression":{"id":5800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11396:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11400:6:19","memberName":"sender","nodeType":"MemberAccess","src":"11396:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5802,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"11408:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5799,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"11391:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11391:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"EmitStatement","src":"11386:37:19"},{"expression":{"id":5805,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"11437:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5675,"id":5806,"nodeType":"Return","src":"11430:25:19"}]},"functionSelector":"7d9fc717","id":5808,"implemented":true,"kind":"function","modifiers":[{"id":5672,"kind":"modifierInvocation","modifierName":{"id":5671,"name":"nonReentrant","nameLocations":["10398:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"10398:12:19"},"nodeType":"ModifierInvocation","src":"10398:12:19"}],"name":"mintUSDC","nameLocation":"10350:8:19","nodeType":"FunctionDefinition","parameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"balAmountToMint","nameLocation":"10371:15:19","nodeType":"VariableDeclaration","scope":5808,"src":"10363:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10363:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:32:19"},"returnParameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5808,"src":"10420:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"10420:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10419:9:19"},"scope":7433,"src":"10341:1119:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6050,"nodeType":"Block","src":"11572:1601:19","statements":[{"assignments":[5820],"declarations":[{"constant":false,"id":5820,"mutability":"mutable","name":"totalUSDValuation","nameLocation":"11585:17:19","nodeType":"VariableDeclaration","scope":6050,"src":"11577:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"11577:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5823,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5821,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"11605:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11605:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11577:45:19"},{"assignments":[5825],"declarations":[{"constant":false,"id":5825,"mutability":"mutable","name":"totalBalSupply","nameLocation":"11635:14:19","nodeType":"VariableDeclaration","scope":6050,"src":"11627:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"11627:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5828,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5826,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"11652:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11652:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11627:38:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"11678:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11695:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11678:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65726f","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11698:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""},"value":"Total BALUNI supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""}],"id":5829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11670:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11670:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5835,"nodeType":"ExpressionStatement","src":"11670:65:19"},{"assignments":[5837],"declarations":[{"constant":false,"id":5837,"mutability":"mutable","name":"usdcRequired","nameLocation":"11750:12:19","nodeType":"VariableDeclaration","scope":6050,"src":"11742:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5836,"name":"uint256","nodeType":"ElementaryTypeName","src":"11742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5844,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"11766:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5839,"name":"totalUSDValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"11784:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11766:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11765:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5842,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"11809:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11765:58:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11742:81:19"},{"assignments":[5846],"declarations":[{"constant":false,"id":5846,"mutability":"mutable","name":"decimalA","nameLocation":"11836:8:19","nodeType":"VariableDeclaration","scope":6050,"src":"11830:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5845,"name":"uint8","nodeType":"ElementaryTypeName","src":"11830:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5855,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":5850,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"11870:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5848,"name":"address","nodeType":"ElementaryTypeName","src":"11862:7:19","typeDescriptions":{}}},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5847,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11847:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11877:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"11847:38:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"11830:57:19"},{"assignments":[5857],"declarations":[{"constant":false,"id":5857,"mutability":"mutable","name":"decimalB","nameLocation":"11898:8:19","nodeType":"VariableDeclaration","scope":6050,"src":"11892:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5856,"name":"uint8","nodeType":"ElementaryTypeName","src":"11892:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5863,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5859,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"11924:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5858,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11909:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11909:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11931:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"11909:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11909:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"11892:49:19"},{"assignments":[5865],"declarations":[{"constant":false,"id":5865,"mutability":"mutable","name":"assetRate","nameLocation":"11956:9:19","nodeType":"VariableDeclaration","scope":6050,"src":"11948:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"11948:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5876,"initialValue":{"arguments":[{"arguments":[{"id":5869,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"11990:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":5868,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"11983:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11983:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"arguments":[{"id":5872,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"12004:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5871,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"11997:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11997:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12012:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5866,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"11968:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11975:7:19","memberName":"getRate","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"11968:14:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_contract$_IERC20_$927_$_t_contract$_IERC20_$927_$_t_bool_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,bool) view external returns (uint256)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11968:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11948:70:19"},{"assignments":[5878],"declarations":[{"constant":false,"id":5878,"mutability":"mutable","name":"required","nameLocation":"12031:8:19","nodeType":"VariableDeclaration","scope":6050,"src":"12023:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"12023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5879,"nodeType":"VariableDeclarationStatement","src":"12023:16:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"decimalB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12050:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5881,"name":"decimalA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"12061:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12050:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5946,"nodeType":"Block","src":"12243:166:19","statements":[{"assignments":[5916],"declarations":[{"constant":false,"id":5916,"mutability":"mutable","name":"rate","nameLocation":"12257:4:19","nodeType":"VariableDeclaration","scope":5946,"src":"12249:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"12249:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5925,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"assetRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"12264:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5919,"name":"decimalA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"12283:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5920,"name":"decimalB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12294:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12283:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12282:21:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12276:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12264:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12249:54:19"},{"expression":{"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5926,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12309:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"12321:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5928,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"12336:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12321:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12320:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12344:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12320:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5934,"nodeType":"ExpressionStatement","src":"12309:39:19"},{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5935,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12354:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12365:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12376:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"decimalA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"12383:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5939,"name":"decimalB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12394:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12383:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12382:21:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12376:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12365:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12354:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5945,"nodeType":"ExpressionStatement","src":"12354:49:19"}]},"id":5947,"nodeType":"IfStatement","src":"12046:363:19","trueBody":{"id":5914,"nodeType":"Block","src":"12071:166:19","statements":[{"assignments":[5884],"declarations":[{"constant":false,"id":5884,"mutability":"mutable","name":"rate","nameLocation":"12085:4:19","nodeType":"VariableDeclaration","scope":5914,"src":"12077:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"12077:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5893,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"assetRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"12092:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12104:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5887,"name":"decimalB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12111:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5888,"name":"decimalA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"12122:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12111:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12110:21:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12104:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12092:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12077:54:19"},{"expression":{"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5894,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12137:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"12149:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5896,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12164:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12149:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12148:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12172:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12148:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12137:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5902,"nodeType":"ExpressionStatement","src":"12137:39:19"},{"expression":{"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5903,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12182:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12193:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12204:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5906,"name":"decimalB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"12211:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5907,"name":"decimalA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"12222:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12211:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12210:21:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12204:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12193:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12182:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5913,"nodeType":"ExpressionStatement","src":"12182:49:19"}]}},{"assignments":[5949],"declarations":[{"constant":false,"id":5949,"mutability":"mutable","name":"balance","nameLocation":"12423:7:19","nodeType":"VariableDeclaration","scope":6050,"src":"12415:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"12415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5957,"initialValue":{"arguments":[{"expression":{"id":5954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12457:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12461:6:19","memberName":"sender","nodeType":"MemberAccess","src":"12457:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5951,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"12440:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5950,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"12433:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12433:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12447:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"12433:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12433:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12415:53:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"12483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5960,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12494:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12483:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520697320696e73756666696369656e74","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12504:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_43832483b7e6c38bd704590e802408a22452f3fca4ee39cb9ad3944c95ec9c79","typeString":"literal_string \"Balance is insufficient\""},"value":"Balance is insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43832483b7e6c38bd704590e802408a22452f3fca4ee39cb9ad3944c95ec9c79","typeString":"literal_string \"Balance is insufficient\""}],"id":5958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12475:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12475:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5964,"nodeType":"ExpressionStatement","src":"12475:55:19"},{"assignments":[5966],"declarations":[{"constant":false,"id":5966,"mutability":"mutable","name":"allowed","nameLocation":"12545:7:19","nodeType":"VariableDeclaration","scope":6050,"src":"12537:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"12537:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5978,"initialValue":{"arguments":[{"expression":{"id":5971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12579:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12583:6:19","memberName":"sender","nodeType":"MemberAccess","src":"12579:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12599:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12591:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5973,"name":"address","nodeType":"ElementaryTypeName","src":"12591:7:19","typeDescriptions":{}}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12591:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5968,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"12562:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5967,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"12555:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12555:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12569:9:19","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":904,"src":"12555:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12555:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12537:68:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"12620:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5981,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12631:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12620:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b2074686520746f6b656e20616c6c6f77616e6365","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12641:27:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""},"value":"Check the token allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""}],"id":5979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12612:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12612:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5985,"nodeType":"ExpressionStatement","src":"12612:57:19"},{"expression":{"arguments":[{"expression":{"id":5990,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12707:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12711:6:19","memberName":"sender","nodeType":"MemberAccess","src":"12707:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5994,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12727:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":5993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12719:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5992,"name":"address","nodeType":"ElementaryTypeName","src":"12719:7:19","typeDescriptions":{}}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12719:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5996,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"12734:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5987,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"12683:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5986,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"12676:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12676:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12690:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1066,"src":"12676:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$927_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$927_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12676:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5998,"nodeType":"ExpressionStatement","src":"12676:67:19"},{"assignments":[6000],"declarations":[{"constant":false,"id":6000,"mutability":"mutable","name":"amountAfterFee","nameLocation":"12758:14:19","nodeType":"VariableDeclaration","scope":6050,"src":"12750:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint256","nodeType":"ElementaryTypeName","src":"12750:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6004,"initialValue":{"arguments":[{"id":6002,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"12802:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6001,"name":"calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"12775:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12775:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12750:68:19"},{"assignments":[6006],"declarations":[{"constant":false,"id":6006,"mutability":"mutable","name":"netBalAmountToMint","nameLocation":"12831:18:19","nodeType":"VariableDeclaration","scope":6050,"src":"12823:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"12823:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6010,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6007,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"12852:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6008,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"12870:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12852:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12823:61:19"},{"expression":{"arguments":[{"arguments":[{"id":6014,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12905:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12897:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6012,"name":"address","nodeType":"ElementaryTypeName","src":"12897:7:19","typeDescriptions":{}}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12897:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6016,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"12912:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6011,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"12891:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12891:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6018,"nodeType":"ExpressionStatement","src":"12891:40:19"},{"eventCall":{"arguments":[{"arguments":[{"id":6022,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12954:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12946:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6020,"name":"address","nodeType":"ElementaryTypeName","src":"12946:7:19","typeDescriptions":{}}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12946:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6024,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"12961:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6019,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"12941:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12941:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6026,"nodeType":"EmitStatement","src":"12936:44:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6027,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"12991:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13007:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12991:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6035,"nodeType":"IfStatement","src":"12987:72:19","trueBody":{"id":6034,"nodeType":"Block","src":"13010:49:19","statements":[{"expression":{"arguments":[{"id":6031,"name":"netBalAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"13034:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6030,"name":"updateRewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"13016:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13016:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6033,"nodeType":"ExpressionStatement","src":"13016:37:19"}]}},{"expression":{"arguments":[{"expression":{"id":6037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13071:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13075:6:19","memberName":"sender","nodeType":"MemberAccess","src":"13071:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6039,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"13083:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"13065:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6041,"nodeType":"ExpressionStatement","src":"13065:33:19"},{"eventCall":{"arguments":[{"expression":{"id":6043,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13113:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13117:6:19","memberName":"sender","nodeType":"MemberAccess","src":"13113:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6045,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"13125:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6042,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"13108:4:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6047,"nodeType":"EmitStatement","src":"13103:37:19"},{"expression":{"id":6048,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"13154:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5818,"id":6049,"nodeType":"Return","src":"13147:21:19"}]},"functionSelector":"50b1b34a","id":6051,"implemented":true,"kind":"function","modifiers":[{"id":5815,"kind":"modifierInvocation","modifierName":{"id":5814,"name":"nonReentrant","nameLocations":["11541:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"11541:12:19"},"nodeType":"ModifierInvocation","src":"11541:12:19"}],"name":"mintERC20","nameLocation":"11474:9:19","nodeType":"FunctionDefinition","parameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"balAmountToMint","nameLocation":"11496:15:19","nodeType":"VariableDeclaration","scope":6051,"src":"11488:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"11488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5812,"mutability":"mutable","name":"asset","nameLocation":"11524:5:19","nodeType":"VariableDeclaration","scope":6051,"src":"11516:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5811,"name":"address","nodeType":"ElementaryTypeName","src":"11516:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11483:50:19"},"returnParameters":{"id":5818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6051,"src":"11563:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5816,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11562:9:19"},"scope":7433,"src":"11465:1708:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6084,"nodeType":"Block","src":"13275:198:19","statements":[{"assignments":[6059],"declarations":[{"constant":false,"id":6059,"mutability":"mutable","name":"totalBaluni","nameLocation":"13288:11:19","nodeType":"VariableDeclaration","scope":6084,"src":"13280:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6062,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6060,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"13302:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13302:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13280:35:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6064,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"13328:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13342:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13328:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","id":6067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13345:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""},"value":"Total supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""}],"id":6063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13320:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13320:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6069,"nodeType":"ExpressionStatement","src":"13320:55:19"},{"assignments":[6071],"declarations":[{"constant":false,"id":6071,"mutability":"mutable","name":"totalUSDC","nameLocation":"13388:9:19","nodeType":"VariableDeclaration","scope":6084,"src":"13380:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6070,"name":"uint256","nodeType":"ElementaryTypeName","src":"13380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6074,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6072,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"13400:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13400:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13380:37:19"},{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6075,"name":"shareUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"13422:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6076,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"13435:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6077,"name":"totalUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"13444:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13435:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13434:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6080,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"13457:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13434:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13422:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6083,"nodeType":"ExpressionStatement","src":"13422:46:19"}]},"id":6085,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateBaluniToUsdc","nameLocation":"13187:22:19","nodeType":"FunctionDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"amount","nameLocation":"13222:6:19","nodeType":"VariableDeclaration","scope":6085,"src":"13214:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"13214:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13209:23:19"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"shareUSDC","nameLocation":"13264:9:19","nodeType":"VariableDeclaration","scope":6085,"src":"13256:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"13256:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13255:19:19"},"scope":7433,"src":"13178:295:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6144,"nodeType":"Block","src":"13643:522:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6099,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13656:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13670:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13656:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13673:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""},"value":"Total supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""}],"id":6098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13648:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13648:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6104,"nodeType":"ExpressionStatement","src":"13648:55:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"13716:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3138","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13733:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"13716:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646563696d616c732073686f756c64206265203c3d203138","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13737:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804","typeString":"literal_string \"Token decimals should be <= 18\""},"value":"Token decimals should be <= 18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804","typeString":"literal_string \"Token decimals should be <= 18\""}],"id":6105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13708:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13708:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6111,"nodeType":"ExpressionStatement","src":"13708:62:19"},{"assignments":[6113],"declarations":[{"constant":false,"id":6113,"mutability":"mutable","name":"baluniAdjusted","nameLocation":"13785:14:19","nodeType":"VariableDeclaration","scope":6144,"src":"13777:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13777:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6114,"nodeType":"VariableDeclarationStatement","src":"13777:22:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"13810:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3138","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13826:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"13810:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6135,"nodeType":"Block","src":"13972:40:19","statements":[{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6131,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"13978:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6132,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13995:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13978:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6134,"nodeType":"ExpressionStatement","src":"13978:28:19"}]},"id":6136,"nodeType":"IfStatement","src":"13806:206:19","trueBody":{"id":6130,"nodeType":"Block","src":"13830:136:19","statements":[{"expression":{"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6118,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"13901:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13918:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13933:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13940:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6122,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"13945:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13940:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13939:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13933:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13932:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13918:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13901:59:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6129,"nodeType":"ExpressionStatement","src":"13901:59:19"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6137,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"14116:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6138,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"14125:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14116:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14115:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6141,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"14146:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14115:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6097,"id":6143,"nodeType":"Return","src":"14108:52:19"}]},"id":6145,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTokenShare","nameLocation":"13487:20:19","nodeType":"FunctionDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"totalBaluni","nameLocation":"13520:11:19","nodeType":"VariableDeclaration","scope":6145,"src":"13512:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"13512:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6089,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"13544:17:19","nodeType":"VariableDeclaration","scope":6145,"src":"13536:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6088,"name":"uint256","nodeType":"ElementaryTypeName","src":"13536:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6091,"mutability":"mutable","name":"amount","nameLocation":"13574:6:19","nodeType":"VariableDeclaration","scope":6145,"src":"13566:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"13566:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"mutability":"mutable","name":"tokenDecimals","nameLocation":"13593:13:19","nodeType":"VariableDeclaration","scope":6145,"src":"13585:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"13585:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13507:103:19"},"returnParameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6145,"src":"13634:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6095,"name":"uint256","nodeType":"ElementaryTypeName","src":"13634:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13633:9:19"},"scope":7433,"src":"13478:687:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6240,"nodeType":"Block","src":"14287:488:19","statements":[{"assignments":[6155],"declarations":[{"constant":false,"id":6155,"mutability":"mutable","name":"rate","nameLocation":"14300:4:19","nodeType":"VariableDeclaration","scope":6240,"src":"14292:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"14292:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6156,"nodeType":"VariableDeclarationStatement","src":"14292:12:19"},{"assignments":[6158],"declarations":[{"constant":false,"id":6158,"mutability":"mutable","name":"tokenDecimal","nameLocation":"14315:12:19","nodeType":"VariableDeclaration","scope":6240,"src":"14309:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6157,"name":"uint8","nodeType":"ElementaryTypeName","src":"14309:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6164,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6160,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"14345:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6159,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"14330:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14330:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14352:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"14330:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14330:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"14309:53:19"},{"assignments":[6166],"declarations":[{"constant":false,"id":6166,"mutability":"mutable","name":"usdcDecimal","nameLocation":"14373:11:19","nodeType":"VariableDeclaration","scope":6240,"src":"14367:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6165,"name":"uint8","nodeType":"ElementaryTypeName","src":"14367:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":6170,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"14410:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14402:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6168,"name":"address","nodeType":"ElementaryTypeName","src":"14402:7:19","typeDescriptions":{}}},"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14402:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6167,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"14387:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14387:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14417:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"14387:38:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14387:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"14367:60:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"14438:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6179,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"14455:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14447:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6177,"name":"address","nodeType":"ElementaryTypeName","src":"14447:7:19","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14447:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14438:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"14434:48:19","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"14469:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14478:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"14469:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6153,"id":6185,"nodeType":"Return","src":"14462:20:19"}},{"clauses":[{"block":{"id":6206,"nodeType":"Block","src":"14584:24:19","statements":[{"expression":{"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6202,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"14590:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6203,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"14597:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14590:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6205,"nodeType":"ExpressionStatement","src":"14590:12:19"}]},"errorName":"","id":6207,"nodeType":"TryCatchClause","parameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"_rate","nameLocation":"14577:5:19","nodeType":"VariableDeclaration","scope":6207,"src":"14569:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"14569:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14568:15:19"},"src":"14560:48:19"},{"block":{"id":6210,"nodeType":"Block","src":"14615:20:19","statements":[{"expression":{"hexValue":"30","id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6153,"id":6209,"nodeType":"Return","src":"14621:8:19"}]},"errorName":"","id":6211,"nodeType":"TryCatchClause","src":"14609:26:19"}],"externalCall":{"arguments":[{"arguments":[{"id":6192,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"14528:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6191,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"14521:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14521:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"arguments":[{"id":6195,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"14543:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6194,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"14536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14536:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14550:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":6188,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"14505:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}],"id":6187,"name":"IOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"14497:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOracle_$4585_$","typeString":"type(contract IOracle)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14497:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14513:7:19","memberName":"getRate","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"14497:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_contract$_IERC20_$927_$_t_contract$_IERC20_$927_$_t_bool_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,bool) view external returns (uint256)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14497:59:19","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6212,"nodeType":"TryStatement","src":"14489:146:19"},{"assignments":[6214],"declarations":[{"constant":false,"id":6214,"mutability":"mutable","name":"factor","nameLocation":"14649:6:19","nodeType":"VariableDeclaration","scope":6240,"src":"14641:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"14641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6222,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14659:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"tokenDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"14666:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6217,"name":"usdcDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"14681:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14666:26:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14665:28:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14659:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14658:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14641:53:19"},{"expression":{"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6223,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"14701:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6224,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"14710:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6225,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"14719:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14710:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14709:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6228,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"14730:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6229,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"14737:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14730:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14729:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14709:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14708:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14748:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"14708:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14701:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6237,"nodeType":"ExpressionStatement","src":"14701:51:19"},{"expression":{"id":6238,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"14766:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6153,"id":6239,"nodeType":"Return","src":"14759:11:19"}]},"id":6241,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTokenValuation","nameLocation":"14179:24:19","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"amount","nameLocation":"14216:6:19","nodeType":"VariableDeclaration","scope":6241,"src":"14208:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"14208:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6149,"mutability":"mutable","name":"token","nameLocation":"14235:5:19","nodeType":"VariableDeclaration","scope":6241,"src":"14227:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6148,"name":"address","nodeType":"ElementaryTypeName","src":"14227:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14203:41:19"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"valuation","nameLocation":"14276:9:19","nodeType":"VariableDeclaration","scope":6241,"src":"14268:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14268:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14267:19:19"},"scope":7433,"src":"14170:605:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6249,"nodeType":"Block","src":"14838:34:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6246,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"14850:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14850:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6245,"id":6248,"nodeType":"Return","src":"14843:24:19"}]},"functionSelector":"295b9300","id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"14789:14:19","nodeType":"FunctionDefinition","parameters":{"id":6242,"nodeType":"ParameterList","parameters":[],"src":"14803:2:19"},"returnParameters":{"id":6245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6250,"src":"14829:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6243,"name":"uint256","nodeType":"ElementaryTypeName","src":"14829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14828:9:19"},"scope":7433,"src":"14780:92:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6303,"nodeType":"Block","src":"14936:328:19","statements":[{"assignments":[6256],"declarations":[{"constant":false,"id":6256,"mutability":"mutable","name":"_totalV","nameLocation":"14949:7:19","nodeType":"VariableDeclaration","scope":6303,"src":"14941:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6255,"name":"uint256","nodeType":"ElementaryTypeName","src":"14941:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6257,"nodeType":"VariableDeclarationStatement","src":"14941:15:19"},{"body":{"id":6299,"nodeType":"Block","src":"15005:234:19","statements":[{"assignments":[6270],"declarations":[{"constant":false,"id":6270,"mutability":"mutable","name":"token","nameLocation":"15019:5:19","nodeType":"VariableDeclaration","scope":6299,"src":"15011:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6269,"name":"address","nodeType":"ElementaryTypeName","src":"15011:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6275,"initialValue":{"arguments":[{"id":6273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"15037:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6271,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"15027:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15034:2:19","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"15027:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15027:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15011:28:19"},{"assignments":[6277],"declarations":[{"constant":false,"id":6277,"mutability":"mutable","name":"balance","nameLocation":"15053:7:19","nodeType":"VariableDeclaration","scope":6299,"src":"15045:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"15045:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6287,"initialValue":{"arguments":[{"arguments":[{"id":6284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15095:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15087:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6282,"name":"address","nodeType":"ElementaryTypeName","src":"15087:7:19","typeDescriptions":{}}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15087:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6279,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"15070:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6278,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15063:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15063:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15077:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"15063:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15063:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15045:56:19"},{"assignments":[6289],"declarations":[{"constant":false,"id":6289,"mutability":"mutable","name":"tokenBalanceValuation","nameLocation":"15115:21:19","nodeType":"VariableDeclaration","scope":6299,"src":"15107:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6288,"name":"uint256","nodeType":"ElementaryTypeName","src":"15107:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6294,"initialValue":{"arguments":[{"id":6291,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"15170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"15184:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6290,"name":"_calculateTokenValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"15139:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15139:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15107:88:19"},{"expression":{"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6295,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"15201:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6296,"name":"tokenBalanceValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"15212:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15201:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6298,"nodeType":"ExpressionStatement","src":"15201:32:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6261,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"14979:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6262,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"14983:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1957_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14990:6:19","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"14983:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1957_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1957_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14979:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6300,"initializationExpression":{"assignments":[6259],"declarations":[{"constant":false,"id":6259,"mutability":"mutable","name":"i","nameLocation":"14976:1:19","nodeType":"VariableDeclaration","scope":6300,"src":"14968:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"14968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6260,"nodeType":"VariableDeclarationStatement","src":"14968:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15000:3:19","subExpression":{"id":6266,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"15000:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6268,"nodeType":"ExpressionStatement","src":"15000:3:19"},"nodeType":"ForStatement","src":"14963:276:19"},{"expression":{"id":6301,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"15252:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6254,"id":6302,"nodeType":"Return","src":"15245:14:19"}]},"id":6304,"implemented":true,"kind":"function","modifiers":[],"name":"_totalValuation","nameLocation":"14886:15:19","nodeType":"FunctionDefinition","parameters":{"id":6251,"nodeType":"ParameterList","parameters":[],"src":"14901:2:19"},"returnParameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6304,"src":"14927:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"14927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14926:9:19"},"scope":7433,"src":"14877:387:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6315,"nodeType":"Block","src":"15344:47:19","statements":[{"expression":{"arguments":[{"id":6312,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"15379:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6311,"name":"_calculateBaluniToUsdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"15356:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15356:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6310,"id":6314,"nodeType":"Return","src":"15349:37:19"}]},"functionSelector":"71ddcfb8","id":6316,"implemented":true,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"15278:17:19","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"amount","nameLocation":"15304:6:19","nodeType":"VariableDeclaration","scope":6316,"src":"15296:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6305,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15295:16:19"},"returnParameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6316,"src":"15335:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6308,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15334:9:19"},"scope":7433,"src":"15269:122:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6563,"nodeType":"Block","src":"15446:1719:19","statements":[{"assignments":[6322],"declarations":[{"constant":false,"id":6322,"mutability":"mutable","name":"unitPrice","nameLocation":"15459:9:19","nodeType":"VariableDeclaration","scope":6563,"src":"15451:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"15451:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6325,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6323,"name":"getUnitPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"15471:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15471:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15451:34:19"},{"assignments":[6327],"declarations":[{"constant":false,"id":6327,"mutability":"mutable","name":"marketPrice","nameLocation":"15498:11:19","nodeType":"VariableDeclaration","scope":6563,"src":"15490:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"15490:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6344,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6333,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15547:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6331,"name":"address","nodeType":"ElementaryTypeName","src":"15539:7:19","typeDescriptions":{}}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15539:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6330,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15532:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15532:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"arguments":[{"arguments":[{"id":6339,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"15574:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6337,"name":"address","nodeType":"ElementaryTypeName","src":"15566:7:19","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6336,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15559:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15559:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15586:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6328,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"15512:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$4585","typeString":"contract IOracle"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15519:7:19","memberName":"getRate","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"15512:14:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_contract$_IERC20_$927_$_t_contract$_IERC20_$927_$_t_bool_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,bool) view external returns (uint256)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15512:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15490:106:19"},{"assignments":[6346],"declarations":[{"constant":false,"id":6346,"mutability":"mutable","name":"baluniBalance","nameLocation":"15611:13:19","nodeType":"VariableDeclaration","scope":6563,"src":"15603:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"15603:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6353,"initialValue":{"arguments":[{"arguments":[{"id":6350,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15645:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15637:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6348,"name":"address","nodeType":"ElementaryTypeName","src":"15637:7:19","typeDescriptions":{}}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15637:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6347,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"15627:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15603:48:19"},{"assignments":[6355],"declarations":[{"constant":false,"id":6355,"mutability":"mutable","name":"usdcBalance","nameLocation":"15664:11:19","nodeType":"VariableDeclaration","scope":6563,"src":"15656:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6354,"name":"uint256","nodeType":"ElementaryTypeName","src":"15656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6365,"initialValue":{"arguments":[{"arguments":[{"id":6362,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15709:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15701:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6360,"name":"address","nodeType":"ElementaryTypeName","src":"15701:7:19","typeDescriptions":{}}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15701:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6357,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"15685:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6356,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15678:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15678:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15691:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"15678:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15678:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15656:59:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"marketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"15726:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15740:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"15726:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6369,"name":"unitPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"15747:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15726:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"marketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"16481:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16495:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"16481:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6477,"name":"unitPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"16502:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16481:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6561,"nodeType":"IfStatement","src":"16477:684:19","trueBody":{"id":6560,"nodeType":"Block","src":"16513:648:19","statements":[{"assignments":[6480],"declarations":[{"constant":false,"id":6480,"mutability":"mutable","name":"amountToSell","nameLocation":"16527:12:19","nodeType":"VariableDeclaration","scope":6560,"src":"16519:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"16519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6482,"initialValue":{"id":6481,"name":"baluniBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"16542:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16519:36:19"},{"expression":{"arguments":[{"arguments":[{"id":6486,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16584:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16576:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6484,"name":"address","nodeType":"ElementaryTypeName","src":"16576:7:19","typeDescriptions":{}}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16576:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6490,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"16599:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16591:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6488,"name":"address","nodeType":"ElementaryTypeName","src":"16591:7:19","typeDescriptions":{}}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16591:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6492,"name":"amountToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"16615:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6483,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"16561:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16561:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6494,"nodeType":"ExpressionStatement","src":"16561:67:19"},{"assignments":[6496],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"amountOutUSDC","nameLocation":"16642:13:19","nodeType":"VariableDeclaration","scope":6560,"src":"16634:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"16634:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6512,"initialValue":{"arguments":[{"arguments":[{"id":6500,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16683:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16675:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6498,"name":"address","nodeType":"ElementaryTypeName","src":"16675:7:19","typeDescriptions":{}}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16675:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6504,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"16703:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16695:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6502,"name":"address","nodeType":"ElementaryTypeName","src":"16695:7:19","typeDescriptions":{}}},"id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16695:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6506,"name":"amountToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"16715:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6509,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16742:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16734:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6507,"name":"address","nodeType":"ElementaryTypeName","src":"16734:7:19","typeDescriptions":{}}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16734:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6497,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"16658:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16658:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16634:119:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6514,"name":"amountOutUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"16773:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6515,"name":"usdcBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"16789:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16773:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417262697472616765206661696c65643a20696e73756666696369656e74206f757470757420616d6f756e74","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16807:46:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4dfceb22f231611e828bccbf1a57bea68607c695b8f4dd76484fd11dda806f3d","typeString":"literal_string \"Arbitrage failed: insufficient output amount\""},"value":"Arbitrage failed: insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4dfceb22f231611e828bccbf1a57bea68607c695b8f4dd76484fd11dda806f3d","typeString":"literal_string \"Arbitrage failed: insufficient output amount\""}],"id":6513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16759:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16759:100:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6519,"nodeType":"ExpressionStatement","src":"16759:100:19"},{"expression":{"arguments":[{"arguments":[{"id":6523,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"16894:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16886:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6521,"name":"address","nodeType":"ElementaryTypeName","src":"16886:7:19","typeDescriptions":{}}},"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16886:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6527,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"16914:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16906:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6525,"name":"address","nodeType":"ElementaryTypeName","src":"16906:7:19","typeDescriptions":{}}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16906:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6529,"name":"amountOutUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"16935:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6520,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"16865:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16865:89:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6531,"nodeType":"ExpressionStatement","src":"16865:89:19"},{"expression":{"arguments":[{"arguments":[{"id":6535,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"16985:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16977:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6533,"name":"address","nodeType":"ElementaryTypeName","src":"16977:7:19","typeDescriptions":{}}},"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16977:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6539,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17005:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16997:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6537,"name":"address","nodeType":"ElementaryTypeName","src":"16997:7:19","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16997:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6541,"name":"amountOutUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"17017:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6544,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17045:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17037:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6542,"name":"address","nodeType":"ElementaryTypeName","src":"17037:7:19","typeDescriptions":{}}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17037:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6532,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"16960:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16960:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6547,"nodeType":"ExpressionStatement","src":"16960:96:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17094:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17086:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6550,"name":"address","nodeType":"ElementaryTypeName","src":"17086:7:19","typeDescriptions":{}}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17086:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6549,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"17076:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17076:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6555,"name":"baluniBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"17103:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17076:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41726269747261676520646964206e6f742070726f666974","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17123:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c9ab7f5c470fd37187acfdaade8c8c5b7a20b206140f72827f235d4b6bcebe3","typeString":"literal_string \"Arbitrage did not profit\""},"value":"Arbitrage did not profit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c9ab7f5c470fd37187acfdaade8c8c5b7a20b206140f72827f235d4b6bcebe3","typeString":"literal_string \"Arbitrage did not profit\""}],"id":6548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17062:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17062:93:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6559,"nodeType":"ExpressionStatement","src":"17062:93:19"}]}},"id":6562,"nodeType":"IfStatement","src":"15722:1439:19","trueBody":{"id":6473,"nodeType":"Block","src":"15758:713:19","statements":[{"assignments":[6372],"declarations":[{"constant":false,"id":6372,"mutability":"mutable","name":"amountToBuy","nameLocation":"15772:11:19","nodeType":"VariableDeclaration","scope":6473,"src":"15764:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6371,"name":"uint256","nodeType":"ElementaryTypeName","src":"15764:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6373,"name":"usdcBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"15787:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15801:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"15787:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15786:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6377,"name":"marketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"15815:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15829:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"15815:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15814:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15786:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15842:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"15786:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15764:82:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6385,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"15858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6386,"name":"baluniBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"15872:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15858:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6392,"nodeType":"IfStatement","src":"15854:60:19","trueBody":{"expression":{"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6388,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"15887:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6389,"name":"baluniBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"15901:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15887:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6391,"nodeType":"ExpressionStatement","src":"15887:27:19"}},{"expression":{"arguments":[{"arguments":[{"id":6396,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"15945:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15937:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6394,"name":"address","nodeType":"ElementaryTypeName","src":"15937:7:19","typeDescriptions":{}}},"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15937:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6400,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"15960:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6398,"name":"address","nodeType":"ElementaryTypeName","src":"15952:7:19","typeDescriptions":{}}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15952:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6402,"name":"usdcBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"15976:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6393,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"15922:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15922:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6404,"nodeType":"ExpressionStatement","src":"15922:66:19"},{"assignments":[6406],"declarations":[{"constant":false,"id":6406,"mutability":"mutable","name":"amountOut","nameLocation":"16004:9:19","nodeType":"VariableDeclaration","scope":6473,"src":"15996:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"15996:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6422,"initialValue":{"arguments":[{"arguments":[{"id":6410,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"16041:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16033:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6408,"name":"address","nodeType":"ElementaryTypeName","src":"16033:7:19","typeDescriptions":{}}},"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16033:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6414,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16061:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16053:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6412,"name":"address","nodeType":"ElementaryTypeName","src":"16053:7:19","typeDescriptions":{}}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16053:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6416,"name":"usdcBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"16073:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6419,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16099:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6417,"name":"address","nodeType":"ElementaryTypeName","src":"16091:7:19","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16091:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6407,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"16016:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16016:94:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15996:114:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"16130:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6425,"name":"amountToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"16143:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16130:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417262697472616765206661696c65643a20696e73756666696369656e74206f757470757420616d6f756e74","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16161:46:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4dfceb22f231611e828bccbf1a57bea68607c695b8f4dd76484fd11dda806f3d","typeString":"literal_string \"Arbitrage failed: insufficient output amount\""},"value":"Arbitrage failed: insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4dfceb22f231611e828bccbf1a57bea68607c695b8f4dd76484fd11dda806f3d","typeString":"literal_string \"Arbitrage failed: insufficient output amount\""}],"id":6423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16116:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16116:97:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6429,"nodeType":"ExpressionStatement","src":"16116:97:19"},{"expression":{"arguments":[{"arguments":[{"id":6433,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16242:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16234:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6431,"name":"address","nodeType":"ElementaryTypeName","src":"16234:7:19","typeDescriptions":{}}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16234:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6437,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"16257:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6435,"name":"address","nodeType":"ElementaryTypeName","src":"16249:7:19","typeDescriptions":{}}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16249:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6439,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"16273:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6430,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"16219:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16219:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6441,"nodeType":"ExpressionStatement","src":"16219:64:19"},{"expression":{"arguments":[{"arguments":[{"id":6445,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16308:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16300:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6443,"name":"address","nodeType":"ElementaryTypeName","src":"16300:7:19","typeDescriptions":{}}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16300:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6449,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"16323:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16315:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6447,"name":"address","nodeType":"ElementaryTypeName","src":"16315:7:19","typeDescriptions":{}}},"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16315:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6451,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"16330:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6454,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16349:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16341:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6452,"name":"address","nodeType":"ElementaryTypeName","src":"16341:7:19","typeDescriptions":{}}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16341:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6442,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"16289:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16289:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6457,"nodeType":"ExpressionStatement","src":"16289:66:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6465,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16406:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16398:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6463,"name":"address","nodeType":"ElementaryTypeName","src":"16398:7:19","typeDescriptions":{}}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16398:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6460,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":6459,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16375:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16375:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16388:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"16375:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16375:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6468,"name":"usdcBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"16415:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16375:51:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41726269747261676520646964206e6f742070726f666974","id":6470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16433:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c9ab7f5c470fd37187acfdaade8c8c5b7a20b206140f72827f235d4b6bcebe3","typeString":"literal_string \"Arbitrage did not profit\""},"value":"Arbitrage did not profit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c9ab7f5c470fd37187acfdaade8c8c5b7a20b206140f72827f235d4b6bcebe3","typeString":"literal_string \"Arbitrage did not profit\""}],"id":6458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16361:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16361:104:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6472,"nodeType":"ExpressionStatement","src":"16361:104:19"}]}}]},"functionSelector":"12f399cf","id":6564,"implemented":true,"kind":"function","modifiers":[{"id":6319,"kind":"modifierInvocation","modifierName":{"id":6318,"name":"nonReentrant","nameLocations":["15433:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"15433:12:19"},"nodeType":"ModifierInvocation","src":"15433:12:19"}],"name":"performArbitrage","nameLocation":"15405:16:19","nodeType":"FunctionDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[],"src":"15421:2:19"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[],"src":"15446:0:19"},"scope":7433,"src":"15396:1769:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6603,"nodeType":"Block","src":"17314:370:19","statements":[{"assignments":[6581],"declarations":[{"constant":false,"id":6581,"mutability":"mutable","name":"params","nameLocation":"17361:6:19","nodeType":"VariableDeclaration","scope":6603,"src":"17319:48:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":6580,"nodeType":"UserDefinedTypeName","pathNode":{"id":6579,"name":"ISwapRouter.ExactInputSingleParams","nameLocations":["17319:11:19","17331:22:19"],"nodeType":"IdentifierPath","referencedDeclaration":2365,"src":"17319:34:19"},"referencedDeclaration":2365,"src":"17319:34:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":6597,"initialValue":{"arguments":[{"id":6584,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"17426:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6585,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"17449:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":6586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17467:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},{"arguments":[{"id":6589,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"17497:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17489:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6587,"name":"address","nodeType":"ElementaryTypeName","src":"17489:7:19","typeDescriptions":{}}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17489:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6591,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17523:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17529:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"17523:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6593,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"17555:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17592:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17619:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":6582,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"17370:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2441_$","typeString":"type(contract ISwapRouter)"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17387:22:19","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"17370:39:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$2365_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["17417:7:19","17439:8:19","17462:3:19","17478:9:19","17513:8:19","17545:8:19","17574:16:19","17600:17:19"],"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"17370:257:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"17319:308:19"},{"expression":{"arguments":[{"id":6600,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"17672:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2365_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":6598,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"17641:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17655:16:19","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":2374,"src":"17641:30:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$2365_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17641:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6576,"id":6602,"nodeType":"Return","src":"17634:45:19"}]},"id":6604,"implemented":true,"kind":"function","modifiers":[],"name":"singleSwap","nameLocation":"17179:10:19","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"token0","nameLocation":"17202:6:19","nodeType":"VariableDeclaration","scope":6604,"src":"17194:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6565,"name":"address","nodeType":"ElementaryTypeName","src":"17194:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6568,"mutability":"mutable","name":"token1","nameLocation":"17221:6:19","nodeType":"VariableDeclaration","scope":6604,"src":"17213:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6567,"name":"address","nodeType":"ElementaryTypeName","src":"17213:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6570,"mutability":"mutable","name":"tokenBalance","nameLocation":"17240:12:19","nodeType":"VariableDeclaration","scope":6604,"src":"17232:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"17232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6572,"mutability":"mutable","name":"receiver","nameLocation":"17265:8:19","nodeType":"VariableDeclaration","scope":6604,"src":"17257:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6571,"name":"address","nodeType":"ElementaryTypeName","src":"17257:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17189:88:19"},"returnParameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"amountOut","nameLocation":"17303:9:19","nodeType":"VariableDeclaration","scope":6604,"src":"17295:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6574,"name":"uint256","nodeType":"ElementaryTypeName","src":"17295:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17294:19:19"},"scope":7433,"src":"17170:514:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6655,"nodeType":"Block","src":"17854:380:19","statements":[{"assignments":[6623],"declarations":[{"constant":false,"id":6623,"mutability":"mutable","name":"params","nameLocation":"17895:6:19","nodeType":"VariableDeclaration","scope":6655,"src":"17859:42:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2385_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":6622,"nodeType":"UserDefinedTypeName","pathNode":{"id":6621,"name":"ISwapRouter.ExactInputParams","nameLocations":["17859:11:19","17871:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":2385,"src":"17859:28:19"},"referencedDeclaration":2385,"src":"17859:28:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2385_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"id":6649,"initialValue":{"arguments":[{"arguments":[{"id":6628,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"17975:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"33303030","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17996:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6629,"name":"uint24","nodeType":"ElementaryTypeName","src":"17989:6:19","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17989:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":6633,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"18009:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"33303030","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18030:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18023:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6634,"name":"uint24","nodeType":"ElementaryTypeName","src":"18023:6:19","typeDescriptions":{}}},"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18023:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":6638,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"18043:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6626,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17951:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17955:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"17951:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17951:105:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":6642,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"18082:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18074:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6640,"name":"address","nodeType":"ElementaryTypeName","src":"18074:7:19","typeDescriptions":{}}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18074:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6644,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18108:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18114:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"18108:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6646,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"18140:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":6624,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"17904:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2441_$","typeString":"type(contract ISwapRouter)"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17921:16:19","memberName":"ExactInputParams","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"17904:33:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputParams_$2385_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputParams storage pointer)"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["17945:4:19","18063:9:19","18098:8:19","18130:8:19","18159:16:19"],"names":["path","recipient","deadline","amountIn","amountOutMinimum"],"nodeType":"FunctionCall","src":"17904:281:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2385_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"nodeType":"VariableDeclarationStatement","src":"17859:326:19"},{"expression":{"arguments":[{"id":6652,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"18222:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2385_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputParams_$2385_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}],"expression":{"id":6650,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"18197:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18211:10:19","memberName":"exactInput","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"18197:24:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputParams_$2385_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18197:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6618,"id":6654,"nodeType":"Return","src":"18190:39:19"}]},"id":6656,"implemented":true,"kind":"function","modifiers":[],"name":"multiHopSwap","nameLocation":"17698:12:19","nodeType":"FunctionDefinition","parameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"token0","nameLocation":"17723:6:19","nodeType":"VariableDeclaration","scope":6656,"src":"17715:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6605,"name":"address","nodeType":"ElementaryTypeName","src":"17715:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6608,"mutability":"mutable","name":"token1","nameLocation":"17742:6:19","nodeType":"VariableDeclaration","scope":6656,"src":"17734:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6607,"name":"address","nodeType":"ElementaryTypeName","src":"17734:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6610,"mutability":"mutable","name":"token2","nameLocation":"17761:6:19","nodeType":"VariableDeclaration","scope":6656,"src":"17753:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6609,"name":"address","nodeType":"ElementaryTypeName","src":"17753:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6612,"mutability":"mutable","name":"tokenBalance","nameLocation":"17780:12:19","nodeType":"VariableDeclaration","scope":6656,"src":"17772:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6611,"name":"uint256","nodeType":"ElementaryTypeName","src":"17772:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6614,"mutability":"mutable","name":"receiver","nameLocation":"17805:8:19","nodeType":"VariableDeclaration","scope":6656,"src":"17797:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6613,"name":"address","nodeType":"ElementaryTypeName","src":"17797:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17710:107:19"},"returnParameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6617,"mutability":"mutable","name":"amountOut","nameLocation":"17843:9:19","nodeType":"VariableDeclaration","scope":6656,"src":"17835:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"17835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17834:19:19"},"scope":7433,"src":"17689:545:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6707,"nodeType":"Block","src":"18333:266:19","statements":[{"assignments":[6667],"declarations":[{"constant":false,"id":6667,"mutability":"mutable","name":"_token","nameLocation":"18345:6:19","nodeType":"VariableDeclaration","scope":6707,"src":"18338:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":6666,"nodeType":"UserDefinedTypeName","pathNode":{"id":6665,"name":"IERC20","nameLocations":["18338:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"18338:6:19"},"referencedDeclaration":927,"src":"18338:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6671,"initialValue":{"arguments":[{"id":6669,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"18361:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6668,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"18354:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18354:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"18338:29:19"},{"assignments":[6673],"declarations":[{"constant":false,"id":6673,"mutability":"mutable","name":"currentAllowance","nameLocation":"18380:16:19","nodeType":"VariableDeclaration","scope":6707,"src":"18372:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"18372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6682,"initialValue":{"arguments":[{"arguments":[{"id":6678,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18424:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18416:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6676,"name":"address","nodeType":"ElementaryTypeName","src":"18416:7:19","typeDescriptions":{}}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18416:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6680,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"18431:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6674,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"18399:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18406:9:19","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":904,"src":"18399:16:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18399:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18372:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"18450:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6684,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"18470:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18450:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6706,"nodeType":"IfStatement","src":"18446:149:19","trueBody":{"id":6705,"nodeType":"Block","src":"18478:117:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6686,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"18488:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18508:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18488:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6697,"nodeType":"IfStatement","src":"18484:67:19","trueBody":{"id":6696,"nodeType":"Block","src":"18511:40:19","statements":[{"expression":{"arguments":[{"id":6692,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"18533:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18542:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":6689,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"18518:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18525:7:19","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":914,"src":"18518:14:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18518:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6695,"nodeType":"ExpressionStatement","src":"18518:26:19"}]}},{"expression":{"arguments":[{"id":6701,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"18573:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"18582:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6698,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"18558:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18565:7:19","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":914,"src":"18558:14:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18558:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"ExpressionStatement","src":"18558:31:19"}]}}]},"id":6708,"implemented":true,"kind":"function","modifiers":[],"name":"secureApproval","nameLocation":"18248:14:19","nodeType":"FunctionDefinition","parameters":{"id":6663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"token","nameLocation":"18275:5:19","nodeType":"VariableDeclaration","scope":6708,"src":"18267:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6657,"name":"address","nodeType":"ElementaryTypeName","src":"18267:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6660,"mutability":"mutable","name":"spender","nameLocation":"18293:7:19","nodeType":"VariableDeclaration","scope":6708,"src":"18285:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6659,"name":"address","nodeType":"ElementaryTypeName","src":"18285:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"amount","nameLocation":"18313:6:19","nodeType":"VariableDeclaration","scope":6708,"src":"18305:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"18305:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18262:61:19"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[],"src":"18333:0:19"},"scope":7433,"src":"18239:360:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7387,"nodeType":"Block","src":"18712:5205:19","statements":[{"assignments":[6720],"declarations":[{"constant":false,"id":6720,"mutability":"mutable","name":"totalValue","nameLocation":"18725:10:19","nodeType":"VariableDeclaration","scope":7387,"src":"18717:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"18717:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6721,"nodeType":"VariableDeclarationStatement","src":"18717:18:19"},{"body":{"id":6757,"nodeType":"Block","src":"18782:194:19","statements":[{"assignments":[6733],"declarations":[{"constant":false,"id":6733,"mutability":"mutable","name":"balance","nameLocation":"18796:7:19","nodeType":"VariableDeclaration","scope":6757,"src":"18788:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6732,"name":"uint256","nodeType":"ElementaryTypeName","src":"18788:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6743,"initialValue":{"arguments":[{"expression":{"id":6740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18834:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18838:6:19","memberName":"sender","nodeType":"MemberAccess","src":"18834:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":6735,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"18813:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6737,"indexExpression":{"id":6736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"18820:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18813:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6734,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"18806:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18806:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18824:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"18806:27:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18806:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18788:57:19"},{"assignments":[6745],"declarations":[{"constant":false,"id":6745,"mutability":"mutable","name":"tokenValuation","nameLocation":"18859:14:19","nodeType":"VariableDeclaration","scope":6757,"src":"18851:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6744,"name":"uint256","nodeType":"ElementaryTypeName","src":"18851:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6752,"initialValue":{"arguments":[{"id":6747,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"18907:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":6748,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"18921:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6750,"indexExpression":{"id":6749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"18928:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18921:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6746,"name":"_calculateTokenValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"18876:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18876:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18851:85:19"},{"expression":{"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6753,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"18942:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6754,"name":"tokenValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"18956:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18942:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6756,"nodeType":"ExpressionStatement","src":"18942:28:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"18758:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6726,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"18762:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18769:6:19","memberName":"length","nodeType":"MemberAccess","src":"18762:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18758:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6758,"initializationExpression":{"assignments":[6723],"declarations":[{"constant":false,"id":6723,"mutability":"mutable","name":"i","nameLocation":"18755:1:19","nodeType":"VariableDeclaration","scope":6758,"src":"18747:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6722,"name":"uint256","nodeType":"ElementaryTypeName","src":"18747:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6724,"nodeType":"VariableDeclarationStatement","src":"18747:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18777:3:19","subExpression":{"id":6729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"18777:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6731,"nodeType":"ExpressionStatement","src":"18777:3:19"},"nodeType":"ForStatement","src":"18742:234:19"},{"assignments":[6763],"declarations":[{"constant":false,"id":6763,"mutability":"mutable","name":"overweightVaults","nameLocation":"18999:16:19","nodeType":"VariableDeclaration","scope":7387,"src":"18982:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6761,"name":"uint256","nodeType":"ElementaryTypeName","src":"18982:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6762,"nodeType":"ArrayTypeName","src":"18982:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6770,"initialValue":{"arguments":[{"expression":{"id":6767,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19032:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19039:6:19","memberName":"length","nodeType":"MemberAccess","src":"19032:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19018:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6764,"name":"uint256","nodeType":"ElementaryTypeName","src":"19022:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6765,"nodeType":"ArrayTypeName","src":"19022:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19018:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18982:64:19"},{"assignments":[6775],"declarations":[{"constant":false,"id":6775,"mutability":"mutable","name":"overweightAmounts","nameLocation":"19068:17:19","nodeType":"VariableDeclaration","scope":7387,"src":"19051:34:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"19051:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6774,"nodeType":"ArrayTypeName","src":"19051:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6782,"initialValue":{"arguments":[{"expression":{"id":6779,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19102:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19109:6:19","memberName":"length","nodeType":"MemberAccess","src":"19102:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19088:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"19092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6777,"nodeType":"ArrayTypeName","src":"19092:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19088:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19051:65:19"},{"assignments":[6787],"declarations":[{"constant":false,"id":6787,"mutability":"mutable","name":"underweightVaults","nameLocation":"19138:17:19","nodeType":"VariableDeclaration","scope":7387,"src":"19121:34:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6785,"name":"uint256","nodeType":"ElementaryTypeName","src":"19121:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6786,"nodeType":"ArrayTypeName","src":"19121:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6794,"initialValue":{"arguments":[{"expression":{"id":6791,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19172:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19179:6:19","memberName":"length","nodeType":"MemberAccess","src":"19172:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19158:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6788,"name":"uint256","nodeType":"ElementaryTypeName","src":"19162:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6789,"nodeType":"ArrayTypeName","src":"19162:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19158:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19121:65:19"},{"assignments":[6799],"declarations":[{"constant":false,"id":6799,"mutability":"mutable","name":"underweightAmounts","nameLocation":"19208:18:19","nodeType":"VariableDeclaration","scope":7387,"src":"19191:35:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"19191:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6798,"nodeType":"ArrayTypeName","src":"19191:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6806,"initialValue":{"arguments":[{"expression":{"id":6803,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19243:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19250:6:19","memberName":"length","nodeType":"MemberAccess","src":"19243:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19229:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6800,"name":"uint256","nodeType":"ElementaryTypeName","src":"19233:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6801,"nodeType":"ArrayTypeName","src":"19233:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19229:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19191:66:19"},{"assignments":[6808],"declarations":[{"constant":false,"id":6808,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"19272:22:19","nodeType":"VariableDeclaration","scope":7387,"src":"19264:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"19264:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6809,"nodeType":"VariableDeclarationStatement","src":"19264:30:19"},{"assignments":[6811],"declarations":[{"constant":false,"id":6811,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"19307:23:19","nodeType":"VariableDeclaration","scope":7387,"src":"19299:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6810,"name":"uint256","nodeType":"ElementaryTypeName","src":"19299:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6812,"nodeType":"VariableDeclarationStatement","src":"19299:31:19"},{"assignments":[6814],"declarations":[{"constant":false,"id":6814,"mutability":"mutable","name":"overweightAmount","nameLocation":"19343:16:19","nodeType":"VariableDeclaration","scope":7387,"src":"19335:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"19335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6815,"nodeType":"VariableDeclarationStatement","src":"19335:24:19"},{"assignments":[6817],"declarations":[{"constant":false,"id":6817,"mutability":"mutable","name":"overweightPercent","nameLocation":"19372:17:19","nodeType":"VariableDeclaration","scope":7387,"src":"19364:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"19364:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6818,"nodeType":"VariableDeclarationStatement","src":"19364:25:19"},{"assignments":[6820],"declarations":[{"constant":false,"id":6820,"mutability":"mutable","name":"targetWeight","nameLocation":"19402:12:19","nodeType":"VariableDeclaration","scope":7387,"src":"19394:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"19394:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6821,"nodeType":"VariableDeclarationStatement","src":"19394:20:19"},{"assignments":[6823],"declarations":[{"constant":false,"id":6823,"mutability":"mutable","name":"currentWeight","nameLocation":"19427:13:19","nodeType":"VariableDeclaration","scope":7387,"src":"19419:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"19419:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6824,"nodeType":"VariableDeclarationStatement","src":"19419:21:19"},{"assignments":[6826],"declarations":[{"constant":false,"id":6826,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"19453:17:19","nodeType":"VariableDeclaration","scope":7387,"src":"19445:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"19445:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6827,"nodeType":"VariableDeclarationStatement","src":"19445:25:19"},{"assignments":[6829],"declarations":[{"constant":false,"id":6829,"mutability":"mutable","name":"overweight","nameLocation":"19482:10:19","nodeType":"VariableDeclaration","scope":7387,"src":"19477:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6828,"name":"bool","nodeType":"ElementaryTypeName","src":"19477:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6830,"nodeType":"VariableDeclarationStatement","src":"19477:15:19"},{"body":{"id":6987,"nodeType":"Block","src":"19539:1224:19","statements":[{"assignments":[6842],"declarations":[{"constant":false,"id":6842,"mutability":"mutable","name":"balance","nameLocation":"19553:7:19","nodeType":"VariableDeclaration","scope":6987,"src":"19545:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"19545:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6852,"initialValue":{"arguments":[{"expression":{"id":6849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19591:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19595:6:19","memberName":"sender","nodeType":"MemberAccess","src":"19591:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":6844,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19570:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6846,"indexExpression":{"id":6845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19577:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19570:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6843,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"19563:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19563:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19581:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"19563:27:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19563:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19545:57:19"},{"assignments":[6854],"declarations":[{"constant":false,"id":6854,"mutability":"mutable","name":"decimals","nameLocation":"19616:8:19","nodeType":"VariableDeclaration","scope":6987,"src":"19608:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"19608:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6862,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":6856,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19642:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6858,"indexExpression":{"id":6857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19642:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6855,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"19627:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$953_$","typeString":"type(contract IERC20Metadata)"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19627:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19653:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":952,"src":"19627:34:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19627:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"19608:55:19"},{"assignments":[6864],"declarations":[{"constant":false,"id":6864,"mutability":"mutable","name":"tokensTotalValue","nameLocation":"19677:16:19","nodeType":"VariableDeclaration","scope":6987,"src":"19669:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6863,"name":"uint256","nodeType":"ElementaryTypeName","src":"19669:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6871,"initialValue":{"arguments":[{"id":6866,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"19727:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":6867,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19741:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6869,"indexExpression":{"id":6868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19748:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19741:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6865,"name":"_calculateTokenValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"19696:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19696:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19669:87:19"},{"expression":{"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6872,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19762:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6873,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"19777:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":6875,"indexExpression":{"id":6874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19785:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19777:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19762:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6877,"nodeType":"ExpressionStatement","src":"19762:25:19"},{"expression":{"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6878,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19793:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6879,"name":"tokensTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"19809:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"3130303030","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19829:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"id":6881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19828:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"19809:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":6883,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"19839:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19838:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19809:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19793:57:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6887,"nodeType":"ExpressionStatement","src":"19793:57:19"},{"expression":{"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6888,"name":"overweight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19856:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19869:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6890,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19885:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19869:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19856:41:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6893,"nodeType":"ExpressionStatement","src":"19856:41:19"},{"expression":{"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6894,"name":"overweightPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"19903:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":6895,"name":"overweight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19923:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6900,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19979:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":6901,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19995:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19994:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19979:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19923:86:19","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6896,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"19941:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":6897,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"19958:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19957:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19941:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19903:106:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6906,"nodeType":"ExpressionStatement","src":"19903:106:19"},{"assignments":[6908],"declarations":[{"constant":false,"id":6908,"mutability":"mutable","name":"price","nameLocation":"20023:5:19","nodeType":"VariableDeclaration","scope":6987,"src":"20015:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"20015:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6919,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20062:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6912,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"20072:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20066:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20062:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":6915,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"20087:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6917,"indexExpression":{"id":6916,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"20094:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20087:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6909,"name":"_calculateTokenValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"20031:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20031:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20015:87:19"},{"condition":{"id":6920,"name":"overweight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"20112:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20423:11:19","subExpression":{"id":6959,"name":"overweight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"20424:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6985,"nodeType":"IfStatement","src":"20419:339:19","trueBody":{"id":6984,"nodeType":"Block","src":"20436:322:19","statements":[{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6961,"name":"totalActiveWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"20443:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6962,"name":"overweightPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"20464:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20443:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6964,"nodeType":"ExpressionStatement","src":"20443:38:19"},{"expression":{"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6965,"name":"overweightAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"20488:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6966,"name":"overweightPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"20507:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20488:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6968,"nodeType":"ExpressionStatement","src":"20488:36:19"},{"expression":{"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6969,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"20604:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6971,"indexExpression":{"id":6970,"name":"underweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"20622:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20604:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"20649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20604:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6974,"nodeType":"ExpressionStatement","src":"20604:46:19"},{"expression":{"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6975,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"20657:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6977,"indexExpression":{"id":6976,"name":"underweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"20676:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20657:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6978,"name":"overweightAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"20703:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20657:62:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6980,"nodeType":"ExpressionStatement","src":"20657:62:19"},{"expression":{"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20726:25:19","subExpression":{"id":6981,"name":"underweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"20726:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6983,"nodeType":"ExpressionStatement","src":"20726:25:19"}]}},"id":6986,"nodeType":"IfStatement","src":"20108:650:19","trueBody":{"id":6958,"nodeType":"Block","src":"20124:289:19","statements":[{"expression":{"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6921,"name":"overweightAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"20131:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"overweightPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"20151:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":6923,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"20172:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20171:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20151:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20150:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"3130303030","id":6927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20188:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"id":6928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20187:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"20150:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20131:63:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6931,"nodeType":"ExpressionStatement","src":"20131:63:19"},{"expression":{"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"overweightAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"20201:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6933,"name":"overweightAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"20221:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"31653138","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20241:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"id":6935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20240:6:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"20221:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20220:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":6938,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"20251:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20250:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20220:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20201:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6942,"nodeType":"ExpressionStatement","src":"20201:56:19"},{"expression":{"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6943,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"20264:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6945,"indexExpression":{"id":6944,"name":"overweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"20281:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20264:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"20307:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20264:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6948,"nodeType":"ExpressionStatement","src":"20264:44:19"},{"expression":{"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6949,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"20315:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6951,"indexExpression":{"id":6950,"name":"overweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"20333:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20315:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6952,"name":"overweightAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"20359:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20315:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6954,"nodeType":"ExpressionStatement","src":"20315:60:19"},{"expression":{"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20382:24:19","subExpression":{"id":6955,"name":"overweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"20382:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6957,"nodeType":"ExpressionStatement","src":"20382:24:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6834,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19515:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6835,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"19519:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19526:6:19","memberName":"length","nodeType":"MemberAccess","src":"19519:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19515:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6988,"initializationExpression":{"assignments":[6832],"declarations":[{"constant":false,"id":6832,"mutability":"mutable","name":"i","nameLocation":"19512:1:19","nodeType":"VariableDeclaration","scope":6988,"src":"19504:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"19504:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6833,"nodeType":"VariableDeclarationStatement","src":"19504:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19534:3:19","subExpression":{"id":6838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19534:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6840,"nodeType":"ExpressionStatement","src":"19534:3:19"},"nodeType":"ForStatement","src":"19499:1264:19"},{"expression":{"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6989,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"20855:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6991,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"20882:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6992,"name":"overweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"20900:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6990,"name":"_resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"20874:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256[] memory)"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20874:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"20855:68:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6995,"nodeType":"ExpressionStatement","src":"20855:68:19"},{"expression":{"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6996,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"20928:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6998,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"20956:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6999,"name":"overweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"20975:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6997,"name":"_resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"20948:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256[] memory)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20948:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"20928:70:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7002,"nodeType":"ExpressionStatement","src":"20928:70:19"},{"expression":{"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7003,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"21089:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7005,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"21117:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7006,"name":"underweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"21136:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7004,"name":"_resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"21109:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256[] memory)"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21109:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"21089:71:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7009,"nodeType":"ExpressionStatement","src":"21089:71:19"},{"expression":{"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7010,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"21165:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7012,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"21199:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7013,"name":"underweightVaultsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"21223:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7011,"name":"_resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"21186:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256[] memory)"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21186:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"21165:86:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7016,"nodeType":"ExpressionStatement","src":"21165:86:19"},{"body":{"id":7168,"nodeType":"Block","src":"21308:982:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7027,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"21318:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7029,"indexExpression":{"id":7028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21336:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21318:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21341:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21318:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7167,"nodeType":"IfStatement","src":"21314:971:19","trueBody":{"id":7166,"nodeType":"Block","src":"21344:941:19","statements":[{"expression":{"arguments":[{"expression":{"id":7043,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21416:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21420:6:19","memberName":"sender","nodeType":"MemberAccess","src":"21416:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7047,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21442:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":7046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21434:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7045,"name":"address","nodeType":"ElementaryTypeName","src":"21434:7:19","typeDescriptions":{}}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21434:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7049,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"21455:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7051,"indexExpression":{"id":7050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21473:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21455:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7035,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"21366:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7039,"indexExpression":{"baseExpression":{"id":7036,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"21373:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7038,"indexExpression":{"id":7037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21390:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21373:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21366:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21358:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7033,"name":"address","nodeType":"ElementaryTypeName","src":"21358:7:19","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21358:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7032,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"21351:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21351:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21396:12:19","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":926,"src":"21351:57:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21351:131:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7053,"nodeType":"ExpressionStatement","src":"21351:131:19"},{"assignments":[7055],"declarations":[{"constant":false,"id":7055,"mutability":"mutable","name":"pool","nameLocation":"21497:4:19","nodeType":"VariableDeclaration","scope":7166,"src":"21489:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7054,"name":"address","nodeType":"ElementaryTypeName","src":"21489:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7072,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7060,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"21542:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7064,"indexExpression":{"baseExpression":{"id":7061,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"21549:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7063,"indexExpression":{"id":7062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21566:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21549:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21542:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21534:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7058,"name":"address","nodeType":"ElementaryTypeName","src":"21534:7:19","typeDescriptions":{}}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21534:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7068,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"21586:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21578:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7066,"name":"address","nodeType":"ElementaryTypeName","src":"21578:7:19","typeDescriptions":{}}},"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21578:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21599:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"id":7056,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"21504:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21519:7:19","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"21504:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21504:106:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21489:121:19"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7076,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"21647:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7080,"indexExpression":{"baseExpression":{"id":7077,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"21654:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7079,"indexExpression":{"id":7078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21671:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21654:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21647:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21639:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7074,"name":"address","nodeType":"ElementaryTypeName","src":"21639:7:19","typeDescriptions":{}}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21639:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7084,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"21691:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":7083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21683:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7082,"name":"address","nodeType":"ElementaryTypeName","src":"21683:7:19","typeDescriptions":{}}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21683:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7086,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"21713:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7088,"indexExpression":{"id":7087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21731:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21713:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7073,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"21617:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21617:123:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7090,"nodeType":"ExpressionStatement","src":"21617:123:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7091,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"21753:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21769:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21761:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7092,"name":"address","nodeType":"ElementaryTypeName","src":"21761:7:19","typeDescriptions":{}}},"id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21761:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21753:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7164,"nodeType":"Block","src":"22016:263:19","statements":[{"assignments":[7130],"declarations":[{"constant":false,"id":7130,"mutability":"mutable","name":"amountOutHop","nameLocation":"22032:12:19","nodeType":"VariableDeclaration","scope":7164,"src":"22024:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7129,"name":"uint256","nodeType":"ElementaryTypeName","src":"22024:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7163,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7134,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"22076:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7138,"indexExpression":{"baseExpression":{"id":7135,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"22083:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7137,"indexExpression":{"id":7136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22083:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22076:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22068:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7132,"name":"address","nodeType":"ElementaryTypeName","src":"22068:7:19","typeDescriptions":{}}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22068:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7142,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"22121:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}],"id":7141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22113:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7140,"name":"address","nodeType":"ElementaryTypeName","src":"22113:7:19","typeDescriptions":{}}},"id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22113:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7146,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"22146:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22138:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7144,"name":"address","nodeType":"ElementaryTypeName","src":"22138:7:19","typeDescriptions":{}}},"id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22138:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7148,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"22160:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7150,"indexExpression":{"id":7149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22178:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22160:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7151,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"22189:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22207:6:19","memberName":"length","nodeType":"MemberAccess","src":"22189:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22217:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22189:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":7159,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22258:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22250:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7157,"name":"address","nodeType":"ElementaryTypeName","src":"22250:7:19","typeDescriptions":{}}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22250:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22189:74:19","trueExpression":{"expression":{"id":7155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22229:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22233:6:19","memberName":"sender","nodeType":"MemberAccess","src":"22229:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7131,"name":"multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"22047:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22047:224:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22024:247:19"}]},"id":7165,"nodeType":"IfStatement","src":"21749:530:19","trueBody":{"id":7128,"nodeType":"Block","src":"21773:237:19","statements":[{"assignments":[7098],"declarations":[{"constant":false,"id":7098,"mutability":"mutable","name":"singleSwapResult","nameLocation":"21786:16:19","nodeType":"VariableDeclaration","scope":7128,"src":"21781:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7097,"name":"uint","nodeType":"ElementaryTypeName","src":"21781:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7127,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7102,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"21832:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7106,"indexExpression":{"baseExpression":{"id":7103,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"21839:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7105,"indexExpression":{"id":7104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21856:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21839:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21832:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21824:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7100,"name":"address","nodeType":"ElementaryTypeName","src":"21824:7:19","typeDescriptions":{}}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21824:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7110,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"21877:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21869:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7108,"name":"address","nodeType":"ElementaryTypeName","src":"21869:7:19","typeDescriptions":{}}},"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21869:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7112,"name":"overweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"21891:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7114,"indexExpression":{"id":7113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21909:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21891:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7115,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"21920:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21938:6:19","memberName":"length","nodeType":"MemberAccess","src":"21920:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21948:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21920:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":7123,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21989:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21981:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7121,"name":"address","nodeType":"ElementaryTypeName","src":"21981:7:19","typeDescriptions":{}}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21981:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"21920:74:19","trueExpression":{"expression":{"id":7119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21960:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21964:6:19","memberName":"sender","nodeType":"MemberAccess","src":"21960:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7099,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"21805:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21805:197:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21781:221:19"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21274:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7021,"name":"overweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"21278:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21295:6:19","memberName":"length","nodeType":"MemberAccess","src":"21278:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21274:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7169,"initializationExpression":{"assignments":[7018],"declarations":[{"constant":false,"id":7018,"mutability":"mutable","name":"i","nameLocation":"21271:1:19","nodeType":"VariableDeclaration","scope":7169,"src":"21263:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"21263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7019,"nodeType":"VariableDeclarationStatement","src":"21263:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21303:3:19","subExpression":{"id":7024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"21303:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7026,"nodeType":"ExpressionStatement","src":"21303:3:19"},"nodeType":"ForStatement","src":"21258:1032:19"},{"body":{"id":7383,"nodeType":"Block","src":"22345:1552:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7180,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"22355:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7182,"indexExpression":{"id":7181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22374:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22355:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22379:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22355:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7382,"nodeType":"IfStatement","src":"22351:1541:19","trueBody":{"id":7381,"nodeType":"Block","src":"22382:1510:19","statements":[{"assignments":[7186],"declarations":[{"constant":false,"id":7186,"mutability":"mutable","name":"rebaseActiveWgt","nameLocation":"22397:15:19","nodeType":"VariableDeclaration","scope":7381,"src":"22389:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7185,"name":"uint256","nodeType":"ElementaryTypeName","src":"22389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7197,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7187,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"22416:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7189,"indexExpression":{"id":7188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22435:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22416:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"3130303030","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22441:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"id":7191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22440:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"22416:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22415:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":7194,"name":"totalActiveWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"22458:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22457:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22415:61:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22389:87:19"},{"assignments":[7199],"declarations":[{"constant":false,"id":7199,"mutability":"mutable","name":"rebBuyQty","nameLocation":"22493:9:19","nodeType":"VariableDeclaration","scope":7381,"src":"22485:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"22485:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7215,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7200,"name":"rebaseActiveWgt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7186,"src":"22506:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"expression":{"id":7205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22553:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22557:6:19","memberName":"sender","nodeType":"MemberAccess","src":"22553:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7202,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"22537:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7201,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"22530:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22530:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22543:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"22530:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22530:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22506:58:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":7209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22573:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"22506:71:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22505:73:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"3130303030","id":7212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22582:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"id":7213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22581:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"22505:83:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22485:103:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7216,"name":"rebBuyQty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"22608:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22608:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7219,"name":"rebBuyQty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"22631:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22667:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22671:6:19","memberName":"sender","nodeType":"MemberAccess","src":"22667:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7221,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"22651:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7220,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"22644:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22644:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22657:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":884,"src":"22644:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22644:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22681:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"22644:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22631:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22608:77:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7380,"nodeType":"IfStatement","src":"22597:1289:19","trueBody":{"id":7379,"nodeType":"Block","src":"22693:1193:19","statements":[{"assignments":[7232],"declarations":[{"constant":false,"id":7232,"mutability":"mutable","name":"pool","nameLocation":"22709:4:19","nodeType":"VariableDeclaration","scope":7379,"src":"22701:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"22701:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7249,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7237,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"22755:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7241,"indexExpression":{"baseExpression":{"id":7238,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"22762:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7240,"indexExpression":{"id":7239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22780:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22762:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22755:28:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22747:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7235,"name":"address","nodeType":"ElementaryTypeName","src":"22747:7:19","typeDescriptions":{}}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22747:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7245,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"22801:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22793:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7243,"name":"address","nodeType":"ElementaryTypeName","src":"22793:7:19","typeDescriptions":{}}},"id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22793:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22815:4:19","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"id":7233,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"22716:14:19","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2327","typeString":"contract IUniswapV3Factory"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22731:7:19","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"22716:22:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22716:111:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22701:126:19"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7253,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"22866:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7257,"indexExpression":{"baseExpression":{"id":7254,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"22873:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7256,"indexExpression":{"id":7255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22891:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22873:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22866:28:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22858:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7251,"name":"address","nodeType":"ElementaryTypeName","src":"22858:7:19","typeDescriptions":{}}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22858:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7261,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"22912:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2441","typeString":"contract ISwapRouter"}],"id":7260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22904:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7259,"name":"address","nodeType":"ElementaryTypeName","src":"22904:7:19","typeDescriptions":{}}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22904:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7263,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"22935:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7265,"indexExpression":{"id":7264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22954:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22935:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22959:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"22935:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7250,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"22835:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22835:136:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7269,"nodeType":"ExpressionStatement","src":"22835:136:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7270,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"22985:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23001:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22993:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7271,"name":"address","nodeType":"ElementaryTypeName","src":"22993:7:19","typeDescriptions":{}}},"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22993:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22985:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7377,"nodeType":"Block","src":"23454:425:19","statements":[{"assignments":[7326],"declarations":[{"constant":false,"id":7326,"mutability":"mutable","name":"amountOutHop","nameLocation":"23471:12:19","nodeType":"VariableDeclaration","scope":7377,"src":"23463:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7325,"name":"uint256","nodeType":"ElementaryTypeName","src":"23463:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7354,"initialValue":{"arguments":[{"arguments":[{"id":7330,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"23516:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23508:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7328,"name":"address","nodeType":"ElementaryTypeName","src":"23508:7:19","typeDescriptions":{}}},"id":7331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23508:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7334,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"23539:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Metadata_$953","typeString":"contract IERC20Metadata"}],"id":7333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23531:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7332,"name":"address","nodeType":"ElementaryTypeName","src":"23531:7:19","typeDescriptions":{}}},"id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23531:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"baseExpression":{"id":7338,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"23565:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7342,"indexExpression":{"baseExpression":{"id":7339,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"23572:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7341,"indexExpression":{"id":7340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"23590:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23572:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23565:28:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23557:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7336,"name":"address","nodeType":"ElementaryTypeName","src":"23557:7:19","typeDescriptions":{}}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23557:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7344,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"23604:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7346,"indexExpression":{"id":7345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"23623:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23604:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23628:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"23604:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7351,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23650:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23642:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7349,"name":"address","nodeType":"ElementaryTypeName","src":"23642:7:19","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23642:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7327,"name":"multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"23486:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23486:178:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23463:201:19"},{"assignments":[7356],"declarations":[{"constant":false,"id":7356,"mutability":"mutable","name":"amountToTransfer","nameLocation":"23683:16:19","nodeType":"VariableDeclaration","scope":7377,"src":"23675:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7355,"name":"uint256","nodeType":"ElementaryTypeName","src":"23675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7360,"initialValue":{"arguments":[{"id":7358,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"23738:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7357,"name":"calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"23702:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23702:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23675:84:19"},{"expression":{"arguments":[{"expression":{"id":7365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23790:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23794:6:19","memberName":"sender","nodeType":"MemberAccess","src":"23790:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7367,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"23802:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7362,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"23775:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7361,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"23768:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23768:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23781:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"23768:21:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23768:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7369,"nodeType":"ExpressionStatement","src":"23768:51:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7371,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"23838:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23853:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23838:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c6564","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23856:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""},"value":"Swap Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""}],"id":7370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23830:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23830:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7376,"nodeType":"ExpressionStatement","src":"23830:40:19"}]},"id":7378,"nodeType":"IfStatement","src":"22981:898:19","trueBody":{"id":7324,"nodeType":"Block","src":"23005:443:19","statements":[{"assignments":[7277],"declarations":[{"constant":false,"id":7277,"mutability":"mutable","name":"singleSwapResult","nameLocation":"23019:16:19","nodeType":"VariableDeclaration","scope":7324,"src":"23014:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7276,"name":"uint","nodeType":"ElementaryTypeName","src":"23014:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7301,"initialValue":{"arguments":[{"arguments":[{"id":7281,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"23066:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23058:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7279,"name":"address","nodeType":"ElementaryTypeName","src":"23058:7:19","typeDescriptions":{}}},"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23058:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"baseExpression":{"id":7285,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"23089:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7289,"indexExpression":{"baseExpression":{"id":7286,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"23096:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7288,"indexExpression":{"id":7287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"23114:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23096:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23089:28:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23081:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7283,"name":"address","nodeType":"ElementaryTypeName","src":"23081:7:19","typeDescriptions":{}}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23081:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7291,"name":"underweightAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"23128:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7293,"indexExpression":{"id":7292,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"23147:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23128:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23152:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"23128:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7298,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23174:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniRouter_$7433","typeString":"contract BaluniRouter"}],"id":7297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23166:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7296,"name":"address","nodeType":"ElementaryTypeName","src":"23166:7:19","typeDescriptions":{}}},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23166:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7278,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"23038:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23038:150:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23014:174:19"},{"assignments":[7303],"declarations":[{"constant":false,"id":7303,"mutability":"mutable","name":"amountToTransfer","nameLocation":"23207:16:19","nodeType":"VariableDeclaration","scope":7324,"src":"23199:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"23199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7307,"initialValue":{"arguments":[{"id":7305,"name":"singleSwapResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"23262:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7304,"name":"calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"23226:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23226:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23199:88:19"},{"expression":{"arguments":[{"expression":{"id":7312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23318:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23322:6:19","memberName":"sender","nodeType":"MemberAccess","src":"23318:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7314,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"23330:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7309,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"23303:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}],"id":7308,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"23296:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23296:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23309:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"23296:21:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23296:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7316,"nodeType":"ExpressionStatement","src":"23296:51:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7318,"name":"singleSwapResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"23375:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23394:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23375:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23405:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":7317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23358:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23358:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7323,"nodeType":"ExpressionStatement","src":"23358:81:19"}]}}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22310:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7174,"name":"underweightVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"22314:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22332:6:19","memberName":"length","nodeType":"MemberAccess","src":"22314:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22310:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7384,"initializationExpression":{"assignments":[7171],"declarations":[{"constant":false,"id":7171,"mutability":"mutable","name":"i","nameLocation":"22307:1:19","nodeType":"VariableDeclaration","scope":7384,"src":"22299:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7170,"name":"uint256","nodeType":"ElementaryTypeName","src":"22299:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7172,"nodeType":"VariableDeclarationStatement","src":"22299:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22340:3:19","subExpression":{"id":7177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"22340:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7179,"nodeType":"ExpressionStatement","src":"22340:3:19"},"nodeType":"ForStatement","src":"22294:1603:19"},{"expression":{"hexValue":"74727565","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23908:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6718,"id":7386,"nodeType":"Return","src":"23901:11:19"}]},"functionSelector":"2be01190","id":7388,"implemented":true,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"18613:9:19","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"assets","nameLocation":"18646:6:19","nodeType":"VariableDeclaration","scope":7388,"src":"18627:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6709,"name":"address","nodeType":"ElementaryTypeName","src":"18627:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6710,"nodeType":"ArrayTypeName","src":"18627:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6714,"mutability":"mutable","name":"weights","nameLocation":"18676:7:19","nodeType":"VariableDeclaration","scope":7388,"src":"18657:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"18657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6713,"nodeType":"ArrayTypeName","src":"18657:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18622:65:19"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7388,"src":"18706:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6716,"name":"bool","nodeType":"ElementaryTypeName","src":"18706:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18705:6:19"},"scope":7433,"src":"18604:5313:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7431,"nodeType":"Block","src":"24026:129:19","statements":[{"assignments":[7403],"declarations":[{"constant":false,"id":7403,"mutability":"mutable","name":"ret","nameLocation":"24048:3:19","nodeType":"VariableDeclaration","scope":7431,"src":"24031:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7401,"name":"uint256","nodeType":"ElementaryTypeName","src":"24031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7402,"nodeType":"ArrayTypeName","src":"24031:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7409,"initialValue":{"arguments":[{"id":7407,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"24068:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24054:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7404,"name":"uint256","nodeType":"ElementaryTypeName","src":"24058:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7405,"nodeType":"ArrayTypeName","src":"24058:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24054:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24031:42:19"},{"body":{"id":7427,"nodeType":"Block","src":"24109:27:19","statements":[{"expression":{"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7419,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"24115:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7421,"indexExpression":{"id":7420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"24119:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24115:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7422,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"24124:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7424,"indexExpression":{"id":7423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"24128:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24124:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24115:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7426,"nodeType":"ExpressionStatement","src":"24115:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"24094:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7414,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"24098:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24094:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7428,"initializationExpression":{"assignments":[7411],"declarations":[{"constant":false,"id":7411,"mutability":"mutable","name":"i","nameLocation":"24091:1:19","nodeType":"VariableDeclaration","scope":7428,"src":"24083:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7410,"name":"uint256","nodeType":"ElementaryTypeName","src":"24083:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7412,"nodeType":"VariableDeclarationStatement","src":"24083:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24104:3:19","subExpression":{"id":7416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"24104:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7418,"nodeType":"ExpressionStatement","src":"24104:3:19"},"nodeType":"ForStatement","src":"24078:58:19"},{"expression":{"id":7429,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"24147:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7398,"id":7430,"nodeType":"Return","src":"24140:10:19"}]},"id":7432,"implemented":true,"kind":"function","modifiers":[],"name":"_resize","nameLocation":"23931:7:19","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"arr","nameLocation":"23960:3:19","nodeType":"VariableDeclaration","scope":7432,"src":"23943:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"23943:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7390,"nodeType":"ArrayTypeName","src":"23943:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7393,"mutability":"mutable","name":"size","nameLocation":"23976:4:19","nodeType":"VariableDeclaration","scope":7432,"src":"23968:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"23968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23938:46:19"},"returnParameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7432,"src":"24008:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"24008:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7396,"nodeType":"ArrayTypeName","src":"24008:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24007:18:19"},"scope":7433,"src":"23922:233:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7434,"src":"2126:22032:19","usedErrors":[59,64,209,214,219,228,233,238,1006,1287,1292,1295,1576],"usedEvents":[70,861,870,4659,4670,4676,4682,4686,4690,7477,7483,7489]}],"src":"33:24127:19"},"id":19},"contracts/core/BaluniStake.sol":{"ast":{"absolutePath":"contracts/core/BaluniStake.sol","exportedSymbols":{"BaluniStake":[7877],"IERC20":[927],"ReentrancyGuard":[1631]},"id":7878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7435,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7878,"sourceUnit":928,"src":"61:56:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7878,"sourceUnit":1632,"src":"119:59:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7438,"name":"ReentrancyGuard","nameLocations":["206:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"206:15:20"},"id":7439,"nodeType":"InheritanceSpecifier","src":"206:15:20"}],"canonicalName":"BaluniStake","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7877,"linearizedBaseContracts":[7877,1631],"name":"BaluniStake","nameLocation":"191:11:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"72f702f3","id":7442,"mutability":"immutable","name":"stakingToken","nameLocation":"250:12:20","nodeType":"VariableDeclaration","scope":7877,"src":"226:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":7441,"nodeType":"UserDefinedTypeName","pathNode":{"id":7440,"name":"IERC20","nameLocations":["226:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"226:6:20"},"referencedDeclaration":927,"src":"226:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"f7c618c1","id":7445,"mutability":"immutable","name":"rewardToken","nameLocation":"290:11:20","nodeType":"VariableDeclaration","scope":7877,"src":"266:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"},"typeName":{"id":7444,"nodeType":"UserDefinedTypeName","pathNode":{"id":7443,"name":"IERC20","nameLocations":["266:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"266:6:20"},"referencedDeclaration":927,"src":"266:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"bf9c89bb","id":7449,"mutability":"mutable","name":"balanceStakedOf","nameLocation":"342:15:20","nodeType":"VariableDeclaration","scope":7877,"src":"307:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7448,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7446,"name":"address","nodeType":"ElementaryTypeName","src":"315:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"307:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7447,"name":"uint256","nodeType":"ElementaryTypeName","src":"326:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"70259077","id":7453,"mutability":"mutable","name":"stakeTimestamp","nameLocation":"396:14:20","nodeType":"VariableDeclaration","scope":7877,"src":"361:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7452,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7450,"name":"address","nodeType":"ElementaryTypeName","src":"369:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"361:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7451,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f377e7cf","id":7455,"mutability":"mutable","name":"stakingSupply","nameLocation":"429:13:20","nodeType":"VariableDeclaration","scope":7877,"src":"414:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7454,"name":"uint256","nodeType":"ElementaryTypeName","src":"414:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":7458,"mutability":"constant","name":"MULTIPLIER","nameLocation":"473:10:20","nodeType":"VariableDeclaration","scope":7877,"src":"448:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"486:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"private"},{"constant":false,"id":7460,"mutability":"mutable","name":"rewardIndex","nameLocation":"510:11:20","nodeType":"VariableDeclaration","scope":7877,"src":"494:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7459,"name":"uint256","nodeType":"ElementaryTypeName","src":"494:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7464,"mutability":"mutable","name":"rewardIndexOf","nameLocation":"561:13:20","nodeType":"VariableDeclaration","scope":7877,"src":"525:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7463,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7461,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"525:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7462,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":7468,"mutability":"mutable","name":"earned","nameLocation":"614:6:20","nodeType":"VariableDeclaration","scope":7877,"src":"578:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7467,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7465,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"578:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7466,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":true,"id":7471,"mutability":"constant","name":"STAKING_PERIOD","nameLocation":"651:14:20","nodeType":"VariableDeclaration","scope":7877,"src":"626:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7469,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333635","id":7470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"668:8:20","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"visibility":"private"},{"anonymous":false,"eventSelector":"106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241","id":7477,"name":"RewardClaimed","nameLocation":"688:13:20","nodeType":"EventDefinition","parameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"718:4:20","nodeType":"VariableDeclaration","scope":7477,"src":"702:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7472,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7475,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"732:6:20","nodeType":"VariableDeclaration","scope":7477,"src":"724:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7474,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:38:20"},"src":"682:58:20"},{"anonymous":false,"eventSelector":"9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d","id":7483,"name":"Staked","nameLocation":"749:6:20","nodeType":"EventDefinition","parameters":{"id":7482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"772:4:20","nodeType":"VariableDeclaration","scope":7483,"src":"756:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7478,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7481,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"786:6:20","nodeType":"VariableDeclaration","scope":7483,"src":"778:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7480,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:38:20"},"src":"743:51:20"},{"anonymous":false,"eventSelector":"0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75","id":7489,"name":"Unstaked","nameLocation":"803:8:20","nodeType":"EventDefinition","parameters":{"id":7488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7485,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"828:4:20","nodeType":"VariableDeclaration","scope":7489,"src":"812:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7484,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7487,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"842:6:20","nodeType":"VariableDeclaration","scope":7489,"src":"834:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7486,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"811:38:20"},"src":"797:53:20"},{"body":{"id":7525,"nodeType":"Block","src":"912:194:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7497,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"930:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"955:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"947:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7498,"name":"address","nodeType":"ElementaryTypeName","src":"947:7:20","typeDescriptions":{}}},"id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"947:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"930:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"961:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"985:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"977:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7504,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:20","typeDescriptions":{}}},"id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"961:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"930:57:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":7510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"993:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":7496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"917:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"917:104:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7512,"nodeType":"ExpressionStatement","src":"917:104:20"},{"expression":{"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7513,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"1026:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7515,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"1048:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7514,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1041:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1041:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"src":"1026:36:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7518,"nodeType":"ExpressionStatement","src":"1026:36:20"},{"expression":{"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7519,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"1067:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7521,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"1088:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7520,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"1081:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$927_$","typeString":"type(contract IERC20)"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1081:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"src":"1067:34:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7524,"nodeType":"ExpressionStatement","src":"1067:34:20"}]},"id":7526,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"_stakingToken","nameLocation":"875:13:20","nodeType":"VariableDeclaration","scope":7526,"src":"867:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7490,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7493,"mutability":"mutable","name":"_rewardToken","nameLocation":"898:12:20","nodeType":"VariableDeclaration","scope":7526,"src":"890:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7492,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"866:45:20"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[],"src":"912:0:20"},"scope":7877,"src":"855:251:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7545,"nodeType":"Block","src":"1163:96:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7531,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"1172:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1188:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1172:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7544,"nodeType":"IfStatement","src":"1168:87:20","trueBody":{"id":7543,"nodeType":"Block","src":"1191:64:20","statements":[{"expression":{"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7534,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"1197:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7535,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"1213:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7536,"name":"MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"1222:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1213:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1212:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7539,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"1236:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1212:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1197:52:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7542,"nodeType":"ExpressionStatement","src":"1197:52:20"}]}}]},"id":7546,"implemented":true,"kind":"function","modifiers":[],"name":"updateRewardIndex","nameLocation":"1120:17:20","nodeType":"FunctionDefinition","parameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"reward","nameLocation":"1146:6:20","nodeType":"VariableDeclaration","scope":7546,"src":"1138:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1137:16:20"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[],"src":"1163:0:20"},"scope":7877,"src":"1111:148:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7581,"nodeType":"Block","src":"1320:224:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7552,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"1333:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1342:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1333:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264206d75737420626520706f736974697665","id":7555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1345:25:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c42d0c89949fa6ff48fc9cd8b1c6c143396fe03e8b31bdc2b42317010ae5092","typeString":"literal_string \"Reward must be positive\""},"value":"Reward must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c42d0c89949fa6ff48fc9cd8b1c6c143396fe03e8b31bdc2b42317010ae5092","typeString":"literal_string \"Reward must be positive\""}],"id":7551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1325:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7557,"nodeType":"ExpressionStatement","src":"1325:46:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7559,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"1384:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1400:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1384:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207374616b696e6720737570706c7920746f20646973747269627574652072657761726473","id":7562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1403:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_88c81fd9056779662b85a79bd134a77a90abca1c457997a1d1943f892c0f9009","typeString":"literal_string \"No staking supply to distribute rewards\""},"value":"No staking supply to distribute rewards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88c81fd9056779662b85a79bd134a77a90abca1c457997a1d1943f892c0f9009","typeString":"literal_string \"No staking supply to distribute rewards\""}],"id":7558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1376:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7564,"nodeType":"ExpressionStatement","src":"1376:69:20"},{"expression":{"arguments":[{"expression":{"id":7568,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1475:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1479:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1475:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7572,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1495:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniStake_$7877","typeString":"contract BaluniStake"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniStake_$7877","typeString":"contract BaluniStake"}],"id":7571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1487:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7570,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:20","typeDescriptions":{}}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7574,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"1502:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7565,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"1450:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1462:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":926,"src":"1450:24:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1450:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7576,"nodeType":"ExpressionStatement","src":"1450:59:20"},{"expression":{"arguments":[{"id":7578,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"1532:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7577,"name":"updateRewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"1514:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1514:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7580,"nodeType":"ExpressionStatement","src":"1514:25:20"}]},"functionSelector":"ab86c69e","id":7582,"implemented":true,"kind":"function","modifiers":[],"name":"updateRewardIndexPublic","nameLocation":"1273:23:20","nodeType":"FunctionDefinition","parameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"reward","nameLocation":"1305:6:20","nodeType":"VariableDeclaration","scope":7582,"src":"1297:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1296:16:20"},"returnParameters":{"id":7550,"nodeType":"ParameterList","parameters":[],"src":"1320:0:20"},"scope":7877,"src":"1264:280:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7632,"nodeType":"Block","src":"1624:337:20","statements":[{"assignments":[7590],"declarations":[{"constant":false,"id":7590,"mutability":"mutable","name":"timeStaked","nameLocation":"1637:10:20","nodeType":"VariableDeclaration","scope":7632,"src":"1629:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7597,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7591,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1650:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1656:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"1650:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":7593,"name":"stakeTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"1668:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7595,"indexExpression":{"id":7594,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"1683:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1668:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1650:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1629:62:20"},{"expression":{"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7598,"name":"timeStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1696:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"timeStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1709:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7600,"name":"STAKING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1722:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1709:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7603,"name":"timeStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1756:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1709:57:20","trueExpression":{"id":7602,"name":"STAKING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1739:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:70:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7606,"nodeType":"ExpressionStatement","src":"1696:70:20"},{"assignments":[7608],"declarations":[{"constant":false,"id":7608,"mutability":"mutable","name":"shares","nameLocation":"1779:6:20","nodeType":"VariableDeclaration","scope":7632,"src":"1771:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7612,"initialValue":{"baseExpression":{"id":7609,"name":"balanceStakedOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"1788:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7611,"indexExpression":{"id":7610,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"1804:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1788:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1771:41:20"},{"assignments":[7614],"declarations":[{"constant":false,"id":7614,"mutability":"mutable","name":"rewardDelta","nameLocation":"1825:11:20","nodeType":"VariableDeclaration","scope":7632,"src":"1817:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7620,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7615,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"1839:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":7616,"name":"rewardIndexOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"1853:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7618,"indexExpression":{"id":7617,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"1867:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1853:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1839:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1817:58:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7621,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"1892:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7622,"name":"timeStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1901:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1892:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7624,"name":"rewardDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"1914:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1892:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1891:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7627,"name":"MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"1929:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1891:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7629,"name":"STAKING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1942:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1891:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7588,"id":7631,"nodeType":"Return","src":"1880:76:20"}]},"id":7633,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateRewards","nameLocation":"1558:17:20","nodeType":"FunctionDefinition","parameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7584,"mutability":"mutable","name":"account","nameLocation":"1584:7:20","nodeType":"VariableDeclaration","scope":7633,"src":"1576:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7583,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1575:17:20"},"returnParameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7633,"src":"1615:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1614:9:20"},"scope":7877,"src":"1549:412:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7648,"nodeType":"Block","src":"2054:61:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7640,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"2066:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7642,"indexExpression":{"id":7641,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"2073:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2066:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":7644,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"2102:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7643,"name":"_calculateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"2084:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2066:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7639,"id":7647,"nodeType":"Return","src":"2059:51:20"}]},"functionSelector":"8b086764","id":7649,"implemented":true,"kind":"function","modifiers":[],"name":"calculateRewardsEarned","nameLocation":"1975:22:20","nodeType":"FunctionDefinition","parameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"account","nameLocation":"2010:7:20","nodeType":"VariableDeclaration","scope":7649,"src":"2002:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7634,"name":"address","nodeType":"ElementaryTypeName","src":"2002:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:24:20"},"returnParameters":{"id":7639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7649,"src":"2045:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2044:9:20"},"scope":7877,"src":"1966:149:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7672,"nodeType":"Block","src":"2170:126:20","statements":[{"assignments":[7655],"declarations":[{"constant":false,"id":7655,"mutability":"mutable","name":"rewards","nameLocation":"2183:7:20","nodeType":"VariableDeclaration","scope":7672,"src":"2175:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7659,"initialValue":{"arguments":[{"id":7657,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"2211:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7656,"name":"_calculateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"2193:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2193:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2175:44:20"},{"expression":{"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7660,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"2224:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7662,"indexExpression":{"id":7661,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2224:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7663,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"2243:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7665,"nodeType":"ExpressionStatement","src":"2224:26:20"},{"expression":{"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7666,"name":"rewardIndexOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"2255:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7668,"indexExpression":{"id":7667,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2255:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7669,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"2280:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2255:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7671,"nodeType":"ExpressionStatement","src":"2255:36:20"}]},"id":7673,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewards","nameLocation":"2129:14:20","nodeType":"FunctionDefinition","parameters":{"id":7652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7651,"mutability":"mutable","name":"account","nameLocation":"2152:7:20","nodeType":"VariableDeclaration","scope":7673,"src":"2144:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7650,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2143:17:20"},"returnParameters":{"id":7653,"nodeType":"ParameterList","parameters":[],"src":"2170:0:20"},"scope":7877,"src":"2120:176:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7722,"nodeType":"Block","src":"2354:256:20","statements":[{"expression":{"arguments":[{"expression":{"id":7681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2374:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2378:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2374:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7680,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"2359:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7684,"nodeType":"ExpressionStatement","src":"2359:26:20"},{"expression":{"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7685,"name":"balanceStakedOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"2390:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7688,"indexExpression":{"expression":{"id":7686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2406:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2406:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2390:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"2421:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2390:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7691,"nodeType":"ExpressionStatement","src":"2390:37:20"},{"expression":{"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7692,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"2432:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"2449:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2432:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7695,"nodeType":"ExpressionStatement","src":"2432:23:20"},{"expression":{"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7696,"name":"stakeTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"2460:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7699,"indexExpression":{"expression":{"id":7697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2475:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2479:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2475:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2460:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7700,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2489:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2495:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"2489:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2460:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7703,"nodeType":"ExpressionStatement","src":"2460:44:20"},{"expression":{"arguments":[{"expression":{"id":7707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2535:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2539:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2535:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7711,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2555:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniStake_$7877","typeString":"contract BaluniStake"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniStake_$7877","typeString":"contract BaluniStake"}],"id":7710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2547:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7709,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:20","typeDescriptions":{}}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"2562:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7704,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"2509:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2522:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":926,"src":"2509:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7715,"nodeType":"ExpressionStatement","src":"2509:60:20"},{"eventCall":{"arguments":[{"expression":{"id":7717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2586:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2590:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2586:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7719,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"2598:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7716,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"2579:6:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7721,"nodeType":"EmitStatement","src":"2574:31:20"}]},"functionSelector":"a694fc3a","id":7723,"implemented":true,"kind":"function","modifiers":[{"id":7678,"kind":"modifierInvocation","modifierName":{"id":7677,"name":"nonReentrant","nameLocations":["2341:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"2341:12:20"},"nodeType":"ModifierInvocation","src":"2341:12:20"}],"name":"stake","nameLocation":"2310:5:20","nodeType":"FunctionDefinition","parameters":{"id":7676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"mutability":"mutable","name":"amount","nameLocation":"2324:6:20","nodeType":"VariableDeclaration","scope":7723,"src":"2316:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2315:16:20"},"returnParameters":{"id":7679,"nodeType":"ParameterList","parameters":[],"src":"2354:0:20"},"scope":7877,"src":"2301:309:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7776,"nodeType":"Block","src":"2670:336:20","statements":[{"expression":{"arguments":[{"expression":{"id":7731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2690:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2694:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2690:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7730,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"2675:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7734,"nodeType":"ExpressionStatement","src":"2675:26:20"},{"assignments":[7736],"declarations":[{"constant":false,"id":7736,"mutability":"mutable","name":"currentBalance","nameLocation":"2714:14:20","nodeType":"VariableDeclaration","scope":7776,"src":"2706:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2706:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7741,"initialValue":{"baseExpression":{"id":7737,"name":"balanceStakedOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"2731:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7740,"indexExpression":{"expression":{"id":7738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2747:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2751:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2747:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2731:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2706:52:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7743,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"2771:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7744,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"2789:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2771:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520746f20756e7374616b65","id":7746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2797:33:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_688215f3a7fe94c297aea10eac991577913b6282281c5f8b24343560c0a9f6ee","typeString":"literal_string \"Insufficient balance to unstake\""},"value":"Insufficient balance to unstake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_688215f3a7fe94c297aea10eac991577913b6282281c5f8b24343560c0a9f6ee","typeString":"literal_string \"Insufficient balance to unstake\""}],"id":7742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2763:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7748,"nodeType":"ExpressionStatement","src":"2763:68:20"},{"expression":{"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7749,"name":"balanceStakedOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"2836:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7752,"indexExpression":{"expression":{"id":7750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2852:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2856:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2852:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2836:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7753,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"2866:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7754,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"2883:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2866:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2836:53:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7757,"nodeType":"ExpressionStatement","src":"2836:53:20"},{"expression":{"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7758,"name":"stakingSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"2894:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7759,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"2911:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2894:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7761,"nodeType":"ExpressionStatement","src":"2894:23:20"},{"expression":{"arguments":[{"expression":{"id":7765,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2944:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2948:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2944:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7767,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"2956:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7762,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"2922:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2935:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"2922:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7769,"nodeType":"ExpressionStatement","src":"2922:41:20"},{"eventCall":{"arguments":[{"expression":{"id":7771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2982:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2986:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2982:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"2994:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7770,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"2973:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2973:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7775,"nodeType":"EmitStatement","src":"2968:33:20"}]},"functionSelector":"2e17de78","id":7777,"implemented":true,"kind":"function","modifiers":[{"id":7728,"kind":"modifierInvocation","modifierName":{"id":7727,"name":"nonReentrant","nameLocations":["2657:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"2657:12:20"},"nodeType":"ModifierInvocation","src":"2657:12:20"}],"name":"unstake","nameLocation":"2624:7:20","nodeType":"FunctionDefinition","parameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7725,"mutability":"mutable","name":"amount","nameLocation":"2640:6:20","nodeType":"VariableDeclaration","scope":7777,"src":"2632:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2632:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:16:20"},"returnParameters":{"id":7729,"nodeType":"ParameterList","parameters":[],"src":"2670:0:20"},"scope":7877,"src":"2615:391:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7826,"nodeType":"Block","src":"3068:256:20","statements":[{"expression":{"arguments":[{"expression":{"id":7785,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3088:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3088:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7784,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"3073:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3073:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7788,"nodeType":"ExpressionStatement","src":"3073:26:20"},{"assignments":[7790],"declarations":[{"constant":false,"id":7790,"mutability":"mutable","name":"reward","nameLocation":"3112:6:20","nodeType":"VariableDeclaration","scope":7826,"src":"3104:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7795,"initialValue":{"baseExpression":{"id":7791,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"3121:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7794,"indexExpression":{"expression":{"id":7792,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3128:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3132:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3128:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3121:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3104:35:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7797,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"3152:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3161:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3152:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207265776172647320746f20636c61696d","id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3164:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d","typeString":"literal_string \"No rewards to claim\""},"value":"No rewards to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d","typeString":"literal_string \"No rewards to claim\""}],"id":7796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3144:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3144:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"ExpressionStatement","src":"3144:42:20"},{"expression":{"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7803,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"3191:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7806,"indexExpression":{"expression":{"id":7804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3198:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3198:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3191:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3191:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7809,"nodeType":"ExpressionStatement","src":"3191:22:20"},{"expression":{"arguments":[{"expression":{"id":7813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3239:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3243:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3239:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7815,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"3251:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7810,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"3218:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"3218:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3218:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7817,"nodeType":"ExpressionStatement","src":"3218:40:20"},{"eventCall":{"arguments":[{"expression":{"id":7819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3282:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3286:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3282:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7821,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"3294:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7818,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"3268:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3268:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7823,"nodeType":"EmitStatement","src":"3263:38:20"},{"expression":{"id":7824,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"3313:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7783,"id":7825,"nodeType":"Return","src":"3306:13:20"}]},"functionSelector":"4e71d92d","id":7827,"implemented":true,"kind":"function","modifiers":[{"id":7780,"kind":"modifierInvocation","modifierName":{"id":7779,"name":"nonReentrant","nameLocations":["3037:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"3037:12:20"},"nodeType":"ModifierInvocation","src":"3037:12:20"}],"name":"claim","nameLocation":"3020:5:20","nodeType":"FunctionDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[],"src":"3025:2:20"},"returnParameters":{"id":7783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7827,"src":"3059:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3059:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3058:9:20"},"scope":7877,"src":"3011:313:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7875,"nodeType":"Block","src":"3423:230:20","statements":[{"expression":{"arguments":[{"id":7839,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"3443:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7838,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"3428:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3428:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7841,"nodeType":"ExpressionStatement","src":"3428:22:20"},{"assignments":[7843],"declarations":[{"constant":false,"id":7843,"mutability":"mutable","name":"reward","nameLocation":"3463:6:20","nodeType":"VariableDeclaration","scope":7875,"src":"3455:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7847,"initialValue":{"baseExpression":{"id":7844,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"3472:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7846,"indexExpression":{"id":7845,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"3479:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3472:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:31:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7849,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"3499:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3508:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3499:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207265776172647320746f20636c61696d","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3511:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d","typeString":"literal_string \"No rewards to claim\""},"value":"No rewards to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d","typeString":"literal_string \"No rewards to claim\""}],"id":7848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3491:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7854,"nodeType":"ExpressionStatement","src":"3491:42:20"},{"expression":{"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7855,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"3538:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7857,"indexExpression":{"id":7856,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"3545:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3538:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3555:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3538:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7860,"nodeType":"ExpressionStatement","src":"3538:18:20"},{"expression":{"arguments":[{"id":7864,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"3582:3:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7865,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"3587:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7861,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"3561:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$927","typeString":"contract IERC20"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3573:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":894,"src":"3561:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7867,"nodeType":"ExpressionStatement","src":"3561:33:20"},{"eventCall":{"arguments":[{"id":7869,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"3618:3:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7870,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"3623:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7868,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"3604:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3604:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7872,"nodeType":"EmitStatement","src":"3599:31:20"},{"expression":{"id":7873,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"3642:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7837,"id":7874,"nodeType":"Return","src":"3635:13:20"}]},"functionSelector":"34a1ca89","id":7876,"implemented":true,"kind":"function","modifiers":[{"id":7834,"kind":"modifierInvocation","modifierName":{"id":7833,"name":"nonReentrant","nameLocations":["3392:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1595,"src":"3392:12:20"},"nodeType":"ModifierInvocation","src":"3392:12:20"}],"name":"claimTo","nameLocation":"3338:7:20","nodeType":"FunctionDefinition","parameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7829,"mutability":"mutable","name":"staker","nameLocation":"3358:6:20","nodeType":"VariableDeclaration","scope":7876,"src":"3350:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7828,"name":"address","nodeType":"ElementaryTypeName","src":"3350:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7831,"mutability":"mutable","name":"_to","nameLocation":"3377:3:20","nodeType":"VariableDeclaration","scope":7876,"src":"3369:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7830,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:39:20"},"returnParameters":{"id":7837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7876,"src":"3414:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3413:9:20"},"scope":7877,"src":"3329:324:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7878,"src":"182:3474:20","usedErrors":[1576],"usedEvents":[7477,7483,7489]}],"src":"33:3625:20"},"id":20},"contracts/helpers/Oracle.sol":{"ast":{"absolutePath":"contracts/helpers/Oracle.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Oracle":[7912]},"id":7913,"nodeType":"SourceUnit","nodes":[{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":7879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7913,"sourceUnit":46,"src":"0:76:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Oracle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7912,"linearizedBaseContracts":[7912],"name":"Oracle","nameLocation":"89:6:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7882,"mutability":"mutable","name":"priceFeed","nameLocation":"131:9:21","nodeType":"VariableDeclaration","scope":7912,"src":"100:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":7881,"nodeType":"UserDefinedTypeName","pathNode":{"id":7880,"name":"AggregatorV3Interface","nameLocations":["100:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"100:21:21"},"referencedDeclaration":45,"src":"100:21:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"body":{"id":7893,"nodeType":"Block","src":"185:62:21","statements":[{"expression":{"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7887,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"190:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7889,"name":"_priceFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"224:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7888,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"202:21:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"190:52:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":7892,"nodeType":"ExpressionStatement","src":"190:52:21"}]},"id":7894,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7884,"mutability":"mutable","name":"_priceFeedAddress","nameLocation":"166:17:21","nodeType":"VariableDeclaration","scope":7894,"src":"158:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7883,"name":"address","nodeType":"ElementaryTypeName","src":"158:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"157:27:21"},"returnParameters":{"id":7886,"nodeType":"ParameterList","parameters":[],"src":"185:0:21"},"scope":7912,"src":"146:101:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7910,"nodeType":"Block","src":"308:199:21","statements":[{"assignments":[null,7900,null,null,null],"declarations":[null,{"constant":false,"id":7900,"mutability":"mutable","name":"price","nameLocation":"323:5:21","nodeType":"VariableDeclaration","scope":7910,"src":"316:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7899,"name":"int256","nodeType":"ElementaryTypeName","src":"316:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":7904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7901,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"338:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"348:15:21","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"338:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"338:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"313:52:21"},{"expression":{"arguments":[{"id":7907,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"427:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7905,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:21","typeDescriptions":{}}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"427:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7898,"id":7909,"nodeType":"Return","src":"420:21:21"}]},"functionSelector":"8e15f473","id":7911,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestPrice","nameLocation":"261:14:21","nodeType":"FunctionDefinition","parameters":{"id":7895,"nodeType":"ParameterList","parameters":[],"src":"275:2:21"},"returnParameters":{"id":7898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7911,"src":"299:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7896,"name":"uint256","nodeType":"ElementaryTypeName","src":"299:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"298:9:21"},"scope":7912,"src":"252:255:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7913,"src":"80:430:21","usedErrors":[],"usedEvents":[]}],"src":"0:512:21"},"id":21},"contracts/interfaces/IVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IVault.sol","exportedSymbols":{"IVault":[7979]},"id":7980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7914,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7979,"linearizedBaseContracts":[7979],"name":"IVault","nameLocation":"70:6:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"fc0c546a","id":7919,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"90:5:22","nodeType":"FunctionDefinition","parameters":{"id":7915,"nodeType":"ParameterList","parameters":[],"src":"95:2:22"},"returnParameters":{"id":7918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7919,"src":"121:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7916,"name":"address","nodeType":"ElementaryTypeName","src":"121:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120:9:22"},"scope":7979,"src":"81:49:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6f307dc3","id":7924,"implemented":false,"kind":"function","modifiers":[],"name":"underlying","nameLocation":"144:10:22","nodeType":"FunctionDefinition","parameters":{"id":7920,"nodeType":"ParameterList","parameters":[],"src":"154:2:22"},"returnParameters":{"id":7923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7924,"src":"180:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7921,"name":"address","nodeType":"ElementaryTypeName","src":"180:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"179:9:22"},"scope":7979,"src":"135:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":7929,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"203:4:22","nodeType":"FunctionDefinition","parameters":{"id":7925,"nodeType":"ParameterList","parameters":[],"src":"207:2:22"},"returnParameters":{"id":7928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7929,"src":"233:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7926,"name":"string","nodeType":"ElementaryTypeName","src":"233:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"232:15:22"},"scope":7979,"src":"194:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":7934,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"262:6:22","nodeType":"FunctionDefinition","parameters":{"id":7930,"nodeType":"ParameterList","parameters":[],"src":"268:2:22"},"returnParameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7934,"src":"294:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7931,"name":"string","nodeType":"ElementaryTypeName","src":"294:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"293:15:22"},"scope":7979,"src":"253:56:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":7939,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"323:8:22","nodeType":"FunctionDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[],"src":"331:2:22"},"returnParameters":{"id":7938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7939,"src":"357:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7936,"name":"uint8","nodeType":"ElementaryTypeName","src":"357:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"356:7:22"},"scope":7979,"src":"314:50:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f77c4791","id":7944,"implemented":false,"kind":"function","modifiers":[],"name":"controller","nameLocation":"378:10:22","nodeType":"FunctionDefinition","parameters":{"id":7940,"nodeType":"ParameterList","parameters":[],"src":"388:2:22"},"returnParameters":{"id":7943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7944,"src":"414:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7941,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"413:9:22"},"scope":7979,"src":"369:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5aa6e675","id":7949,"implemented":false,"kind":"function","modifiers":[],"name":"governance","nameLocation":"437:10:22","nodeType":"FunctionDefinition","parameters":{"id":7945,"nodeType":"ParameterList","parameters":[],"src":"447:2:22"},"returnParameters":{"id":7948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7949,"src":"473:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7946,"name":"address","nodeType":"ElementaryTypeName","src":"473:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"472:9:22"},"scope":7979,"src":"428:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"77c7b8fc","id":7954,"implemented":false,"kind":"function","modifiers":[],"name":"getPricePerFullShare","nameLocation":"496:20:22","nodeType":"FunctionDefinition","parameters":{"id":7950,"nodeType":"ParameterList","parameters":[],"src":"516:2:22"},"returnParameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7954,"src":"542:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7951,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"541:9:22"},"scope":7979,"src":"487:64:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e553f65","id":7961,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"565:7:22","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7961,"src":"573:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7955,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7961,"src":"582:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7957,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"572:18:22"},"returnParameters":{"id":7960,"nodeType":"ParameterList","parameters":[],"src":"599:0:22"},"scope":7979,"src":"556:44:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de5f6268","id":7964,"implemented":false,"kind":"function","modifiers":[],"name":"depositAll","nameLocation":"614:10:22","nodeType":"FunctionDefinition","parameters":{"id":7962,"nodeType":"ParameterList","parameters":[],"src":"624:2:22"},"returnParameters":{"id":7963,"nodeType":"ParameterList","parameters":[],"src":"635:0:22"},"scope":7979,"src":"605:31:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a318c1a4","id":7975,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"650:8:22","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7975,"src":"659:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7965,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7975,"src":"668:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7967,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7975,"src":"677:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7969,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7975,"src":"686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7971,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:36:22"},"returnParameters":{"id":7974,"nodeType":"ParameterList","parameters":[],"src":"703:0:22"},"scope":7979,"src":"641:63:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"853828b6","id":7978,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawAll","nameLocation":"718:11:22","nodeType":"FunctionDefinition","parameters":{"id":7976,"nodeType":"ParameterList","parameters":[],"src":"729:2:22"},"returnParameters":{"id":7977,"nodeType":"ParameterList","parameters":[],"src":"740:0:22"},"scope":7979,"src":"709:32:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7980,"src":"60:684:22","usedErrors":[],"usedEvents":[]}],"src":"33:713:22"},"id":22},"contracts/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/interfaces/IWETH.sol","exportedSymbols":{"IWETH":[7999]},"id":8000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7981,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7999,"linearizedBaseContracts":[7999],"name":"IWETH","nameLocation":"70:5:23","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":7984,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"89:7:23","nodeType":"FunctionDefinition","parameters":{"id":7982,"nodeType":"ParameterList","parameters":[],"src":"96:2:23"},"returnParameters":{"id":7983,"nodeType":"ParameterList","parameters":[],"src":"115:0:23"},"scope":7999,"src":"80:36:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":7993,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"130:8:23","nodeType":"FunctionDefinition","parameters":{"id":7989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"to","nameLocation":"147:2:23","nodeType":"VariableDeclaration","scope":7993,"src":"139:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7985,"name":"address","nodeType":"ElementaryTypeName","src":"139:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7988,"mutability":"mutable","name":"value","nameLocation":"156:5:23","nodeType":"VariableDeclaration","scope":7993,"src":"151:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7987,"name":"uint","nodeType":"ElementaryTypeName","src":"151:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"138:24:23"},"returnParameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7993,"src":"181:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7990,"name":"bool","nodeType":"ElementaryTypeName","src":"181:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"180:6:23"},"scope":7999,"src":"121:66:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":7998,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"201:8:23","nodeType":"FunctionDefinition","parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7998,"src":"210:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7994,"name":"uint","nodeType":"ElementaryTypeName","src":"210:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"209:6:23"},"returnParameters":{"id":7997,"nodeType":"ParameterList","parameters":[],"src":"224:0:23"},"scope":7999,"src":"192:33:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8000,"src":"60:168:23","usedErrors":[],"usedEvents":[]}],"src":"33:197:23"},"id":23},"contracts/libs/FullMath.sol":{"ast":{"absolutePath":"contracts/libs/FullMath.sol","exportedSymbols":{"FullMath":[8173]},"id":8174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"FullMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8002,"nodeType":"StructuredDocumentation","src":"61:300:24","text":"@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"},"fullyImplemented":true,"id":8173,"linearizedBaseContracts":[8173],"name":"FullMath","nameLocation":"369:8:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":8127,"nodeType":"Block","src":"845:3272:24","statements":[{"id":8126,"nodeType":"UncheckedBlock","src":"850:3263:24","statements":[{"assignments":[8015],"declarations":[{"constant":false,"id":8015,"mutability":"mutable","name":"prod0","nameLocation":"1157:5:24","nodeType":"VariableDeclaration","scope":8126,"src":"1149:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"1165:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"1169:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1165:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1149:21:24"},{"assignments":[8021],"declarations":[{"constant":false,"id":8021,"mutability":"mutable","name":"prod1","nameLocation":"1229:5:24","nodeType":"VariableDeclaration","scope":8126,"src":"1221:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8022,"nodeType":"VariableDeclarationStatement","src":"1221:13:24"},{"AST":{"nativeSrc":"1293:92:24","nodeType":"YulBlock","src":"1293:92:24","statements":[{"nativeSrc":"1300:30:24","nodeType":"YulVariableDeclaration","src":"1300:30:24","value":{"arguments":[{"name":"a","nativeSrc":"1317:1:24","nodeType":"YulIdentifier","src":"1317:1:24"},{"name":"b","nativeSrc":"1320:1:24","nodeType":"YulIdentifier","src":"1320:1:24"},{"arguments":[{"kind":"number","nativeSrc":"1327:1:24","nodeType":"YulLiteral","src":"1327:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1323:3:24","nodeType":"YulIdentifier","src":"1323:3:24"},"nativeSrc":"1323:6:24","nodeType":"YulFunctionCall","src":"1323:6:24"}],"functionName":{"name":"mulmod","nativeSrc":"1310:6:24","nodeType":"YulIdentifier","src":"1310:6:24"},"nativeSrc":"1310:20:24","nodeType":"YulFunctionCall","src":"1310:20:24"},"variables":[{"name":"mm","nativeSrc":"1304:2:24","nodeType":"YulTypedName","src":"1304:2:24","type":""}]},{"nativeSrc":"1336:43:24","nodeType":"YulAssignment","src":"1336:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1353:2:24","nodeType":"YulIdentifier","src":"1353:2:24"},{"name":"prod0","nativeSrc":"1357:5:24","nodeType":"YulIdentifier","src":"1357:5:24"}],"functionName":{"name":"sub","nativeSrc":"1349:3:24","nodeType":"YulIdentifier","src":"1349:3:24"},"nativeSrc":"1349:14:24","nodeType":"YulFunctionCall","src":"1349:14:24"},{"arguments":[{"name":"mm","nativeSrc":"1368:2:24","nodeType":"YulIdentifier","src":"1368:2:24"},{"name":"prod0","nativeSrc":"1372:5:24","nodeType":"YulIdentifier","src":"1372:5:24"}],"functionName":{"name":"lt","nativeSrc":"1365:2:24","nodeType":"YulIdentifier","src":"1365:2:24"},"nativeSrc":"1365:13:24","nodeType":"YulFunctionCall","src":"1365:13:24"}],"functionName":{"name":"sub","nativeSrc":"1345:3:24","nodeType":"YulIdentifier","src":"1345:3:24"},"nativeSrc":"1345:34:24","nodeType":"YulFunctionCall","src":"1345:34:24"},"variableNames":[{"name":"prod1","nativeSrc":"1336:5:24","nodeType":"YulIdentifier","src":"1336:5:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8005,"isOffset":false,"isSlot":false,"src":"1317:1:24","valueSize":1},{"declaration":8007,"isOffset":false,"isSlot":false,"src":"1320:1:24","valueSize":1},{"declaration":8015,"isOffset":false,"isSlot":false,"src":"1357:5:24","valueSize":1},{"declaration":8015,"isOffset":false,"isSlot":false,"src":"1372:5:24","valueSize":1},{"declaration":8021,"isOffset":false,"isSlot":false,"src":"1336:5:24","valueSize":1}],"id":8023,"nodeType":"InlineAssembly","src":"1284:101:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"1487:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8026,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"1501:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1487:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8029,"nodeType":"ExpressionStatement","src":"1479:28:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8030,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"1573:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1582:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1573:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8037,"nodeType":"IfStatement","src":"1569:106:24","trueBody":{"id":8036,"nodeType":"Block","src":"1585:90:24","statements":[{"AST":{"nativeSrc":"1601:48:24","nodeType":"YulBlock","src":"1601:48:24","statements":[{"nativeSrc":"1609:33:24","nodeType":"YulAssignment","src":"1609:33:24","value":{"arguments":[{"name":"prod0","nativeSrc":"1623:5:24","nodeType":"YulIdentifier","src":"1623:5:24"},{"name":"denominator","nativeSrc":"1630:11:24","nodeType":"YulIdentifier","src":"1630:11:24"}],"functionName":{"name":"div","nativeSrc":"1619:3:24","nodeType":"YulIdentifier","src":"1619:3:24"},"nativeSrc":"1619:23:24","nodeType":"YulFunctionCall","src":"1619:23:24"},"variableNames":[{"name":"result","nativeSrc":"1609:6:24","nodeType":"YulIdentifier","src":"1609:6:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8009,"isOffset":false,"isSlot":false,"src":"1630:11:24","valueSize":1},{"declaration":8015,"isOffset":false,"isSlot":false,"src":"1623:5:24","valueSize":1},{"declaration":8012,"isOffset":false,"isSlot":false,"src":"1609:6:24","valueSize":1}],"id":8033,"nodeType":"InlineAssembly","src":"1592:57:24"},{"expression":{"id":8034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"1662:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8013,"id":8035,"nodeType":"Return","src":"1655:13:24"}]}},{"assignments":[8039],"declarations":[{"constant":false,"id":8039,"mutability":"mutable","name":"remainder","nameLocation":"1937:9:24","nodeType":"VariableDeclaration","scope":8126,"src":"1929:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1929:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8040,"nodeType":"VariableDeclarationStatement","src":"1929:17:24"},{"AST":{"nativeSrc":"1961:51:24","nodeType":"YulBlock","src":"1961:51:24","statements":[{"nativeSrc":"1968:38:24","nodeType":"YulAssignment","src":"1968:38:24","value":{"arguments":[{"name":"a","nativeSrc":"1988:1:24","nodeType":"YulIdentifier","src":"1988:1:24"},{"name":"b","nativeSrc":"1991:1:24","nodeType":"YulIdentifier","src":"1991:1:24"},{"name":"denominator","nativeSrc":"1994:11:24","nodeType":"YulIdentifier","src":"1994:11:24"}],"functionName":{"name":"mulmod","nativeSrc":"1981:6:24","nodeType":"YulIdentifier","src":"1981:6:24"},"nativeSrc":"1981:25:24","nodeType":"YulFunctionCall","src":"1981:25:24"},"variableNames":[{"name":"remainder","nativeSrc":"1968:9:24","nodeType":"YulIdentifier","src":"1968:9:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8005,"isOffset":false,"isSlot":false,"src":"1988:1:24","valueSize":1},{"declaration":8007,"isOffset":false,"isSlot":false,"src":"1991:1:24","valueSize":1},{"declaration":8009,"isOffset":false,"isSlot":false,"src":"1994:11:24","valueSize":1},{"declaration":8039,"isOffset":false,"isSlot":false,"src":"1968:9:24","valueSize":1}],"id":8041,"nodeType":"InlineAssembly","src":"1952:60:24"},{"AST":{"nativeSrc":"2077:90:24","nodeType":"YulBlock","src":"2077:90:24","statements":[{"nativeSrc":"2084:41:24","nodeType":"YulAssignment","src":"2084:41:24","value":{"arguments":[{"name":"prod1","nativeSrc":"2097:5:24","nodeType":"YulIdentifier","src":"2097:5:24"},{"arguments":[{"name":"remainder","nativeSrc":"2107:9:24","nodeType":"YulIdentifier","src":"2107:9:24"},{"name":"prod0","nativeSrc":"2118:5:24","nodeType":"YulIdentifier","src":"2118:5:24"}],"functionName":{"name":"gt","nativeSrc":"2104:2:24","nodeType":"YulIdentifier","src":"2104:2:24"},"nativeSrc":"2104:20:24","nodeType":"YulFunctionCall","src":"2104:20:24"}],"functionName":{"name":"sub","nativeSrc":"2093:3:24","nodeType":"YulIdentifier","src":"2093:3:24"},"nativeSrc":"2093:32:24","nodeType":"YulFunctionCall","src":"2093:32:24"},"variableNames":[{"name":"prod1","nativeSrc":"2084:5:24","nodeType":"YulIdentifier","src":"2084:5:24"}]},{"nativeSrc":"2131:30:24","nodeType":"YulAssignment","src":"2131:30:24","value":{"arguments":[{"name":"prod0","nativeSrc":"2144:5:24","nodeType":"YulIdentifier","src":"2144:5:24"},{"name":"remainder","nativeSrc":"2151:9:24","nodeType":"YulIdentifier","src":"2151:9:24"}],"functionName":{"name":"sub","nativeSrc":"2140:3:24","nodeType":"YulIdentifier","src":"2140:3:24"},"nativeSrc":"2140:21:24","nodeType":"YulFunctionCall","src":"2140:21:24"},"variableNames":[{"name":"prod0","nativeSrc":"2131:5:24","nodeType":"YulIdentifier","src":"2131:5:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8015,"isOffset":false,"isSlot":false,"src":"2118:5:24","valueSize":1},{"declaration":8015,"isOffset":false,"isSlot":false,"src":"2131:5:24","valueSize":1},{"declaration":8015,"isOffset":false,"isSlot":false,"src":"2144:5:24","valueSize":1},{"declaration":8021,"isOffset":false,"isSlot":false,"src":"2084:5:24","valueSize":1},{"declaration":8021,"isOffset":false,"isSlot":false,"src":"2097:5:24","valueSize":1},{"declaration":8039,"isOffset":false,"isSlot":false,"src":"2107:9:24","valueSize":1},{"declaration":8039,"isOffset":false,"isSlot":false,"src":"2151:9:24","valueSize":1}],"id":8042,"nodeType":"InlineAssembly","src":"2068:99:24"},{"assignments":[8044],"declarations":[{"constant":false,"id":8044,"mutability":"mutable","name":"twos","nameLocation":"2309:4:24","nodeType":"VariableDeclaration","scope":8126,"src":"2301:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8051,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":8045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8046,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"2321:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2317:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2316:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8049,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"2336:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2316:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2301:46:24"},{"AST":{"nativeSrc":"2404:50:24","nodeType":"YulBlock","src":"2404:50:24","statements":[{"nativeSrc":"2411:37:24","nodeType":"YulAssignment","src":"2411:37:24","value":{"arguments":[{"name":"denominator","nativeSrc":"2430:11:24","nodeType":"YulIdentifier","src":"2430:11:24"},{"name":"twos","nativeSrc":"2443:4:24","nodeType":"YulIdentifier","src":"2443:4:24"}],"functionName":{"name":"div","nativeSrc":"2426:3:24","nodeType":"YulIdentifier","src":"2426:3:24"},"nativeSrc":"2426:22:24","nodeType":"YulFunctionCall","src":"2426:22:24"},"variableNames":[{"name":"denominator","nativeSrc":"2411:11:24","nodeType":"YulIdentifier","src":"2411:11:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8009,"isOffset":false,"isSlot":false,"src":"2411:11:24","valueSize":1},{"declaration":8009,"isOffset":false,"isSlot":false,"src":"2430:11:24","valueSize":1},{"declaration":8044,"isOffset":false,"isSlot":false,"src":"2443:4:24","valueSize":1}],"id":8052,"nodeType":"InlineAssembly","src":"2395:59:24"},{"AST":{"nativeSrc":"2520:38:24","nodeType":"YulBlock","src":"2520:38:24","statements":[{"nativeSrc":"2527:25:24","nodeType":"YulAssignment","src":"2527:25:24","value":{"arguments":[{"name":"prod0","nativeSrc":"2540:5:24","nodeType":"YulIdentifier","src":"2540:5:24"},{"name":"twos","nativeSrc":"2547:4:24","nodeType":"YulIdentifier","src":"2547:4:24"}],"functionName":{"name":"div","nativeSrc":"2536:3:24","nodeType":"YulIdentifier","src":"2536:3:24"},"nativeSrc":"2536:16:24","nodeType":"YulFunctionCall","src":"2536:16:24"},"variableNames":[{"name":"prod0","nativeSrc":"2527:5:24","nodeType":"YulIdentifier","src":"2527:5:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8015,"isOffset":false,"isSlot":false,"src":"2527:5:24","valueSize":1},{"declaration":8015,"isOffset":false,"isSlot":false,"src":"2540:5:24","valueSize":1},{"declaration":8044,"isOffset":false,"isSlot":false,"src":"2547:4:24","valueSize":1}],"id":8053,"nodeType":"InlineAssembly","src":"2511:47:24"},{"AST":{"nativeSrc":"2730:52:24","nodeType":"YulBlock","src":"2730:52:24","statements":[{"nativeSrc":"2737:39:24","nodeType":"YulAssignment","src":"2737:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2757:1:24","nodeType":"YulLiteral","src":"2757:1:24","type":"","value":"0"},{"name":"twos","nativeSrc":"2760:4:24","nodeType":"YulIdentifier","src":"2760:4:24"}],"functionName":{"name":"sub","nativeSrc":"2753:3:24","nodeType":"YulIdentifier","src":"2753:3:24"},"nativeSrc":"2753:12:24","nodeType":"YulFunctionCall","src":"2753:12:24"},{"name":"twos","nativeSrc":"2767:4:24","nodeType":"YulIdentifier","src":"2767:4:24"}],"functionName":{"name":"div","nativeSrc":"2749:3:24","nodeType":"YulIdentifier","src":"2749:3:24"},"nativeSrc":"2749:23:24","nodeType":"YulFunctionCall","src":"2749:23:24"},{"kind":"number","nativeSrc":"2774:1:24","nodeType":"YulLiteral","src":"2774:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2745:3:24","nodeType":"YulIdentifier","src":"2745:3:24"},"nativeSrc":"2745:31:24","nodeType":"YulFunctionCall","src":"2745:31:24"},"variableNames":[{"name":"twos","nativeSrc":"2737:4:24","nodeType":"YulIdentifier","src":"2737:4:24"}]}]},"evmVersion":"london","externalReferences":[{"declaration":8044,"isOffset":false,"isSlot":false,"src":"2737:4:24","valueSize":1},{"declaration":8044,"isOffset":false,"isSlot":false,"src":"2760:4:24","valueSize":1},{"declaration":8044,"isOffset":false,"isSlot":false,"src":"2767:4:24","valueSize":1}],"id":8054,"nodeType":"InlineAssembly","src":"2721:61:24"},{"expression":{"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8055,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8015,"src":"2787:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8056,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"2796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8057,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"2804:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2796:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2787:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8060,"nodeType":"ExpressionStatement","src":"2787:21:24"},{"assignments":[8062],"declarations":[{"constant":false,"id":8062,"mutability":"mutable","name":"inv","nameLocation":"3127:3:24","nodeType":"VariableDeclaration","scope":8126,"src":"3119:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8069,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3134:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8064,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3138:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3134:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3133:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3133:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:35:24"},{"expression":{"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8070,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3353:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3360:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8072,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3364:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8073,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3378:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3364:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3360:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3353:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8077,"nodeType":"ExpressionStatement","src":"3353:28:24"},{"expression":{"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8078,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3407:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3414:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3418:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8081,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3432:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3418:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3414:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3407:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8085,"nodeType":"ExpressionStatement","src":"3407:28:24"},{"expression":{"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8086,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3462:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3469:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8088,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3473:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8089,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3487:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3473:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3469:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3462:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8093,"nodeType":"ExpressionStatement","src":"3462:28:24"},{"expression":{"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8094,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3517:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3524:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8096,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3528:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8097,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3542:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3528:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3524:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3517:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8101,"nodeType":"ExpressionStatement","src":"3517:28:24"},{"expression":{"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8102,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3572:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3579:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8104,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3583:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8105,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3597:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3583:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3579:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3572:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8109,"nodeType":"ExpressionStatement","src":"3572:28:24"},{"expression":{"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8110,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3628:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8112,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"3639:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8113,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3653:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3639:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3635:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3628:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8117,"nodeType":"ExpressionStatement","src":"3628:28:24"},{"expression":{"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"4068:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8119,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8015,"src":"4077:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8120,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"4085:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4077:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4068:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8123,"nodeType":"ExpressionStatement","src":"4068:20:24"},{"expression":{"id":8124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"4101:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8013,"id":8125,"nodeType":"Return","src":"4094:13:24"}]}]},"documentation":{"id":8003,"nodeType":"StructuredDocumentation","src":"382:349:24","text":"@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"},"id":8128,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"743:6:24","nodeType":"FunctionDefinition","parameters":{"id":8010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8005,"mutability":"mutable","name":"a","nameLocation":"762:1:24","nodeType":"VariableDeclaration","scope":8128,"src":"754:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8004,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8007,"mutability":"mutable","name":"b","nameLocation":"776:1:24","nodeType":"VariableDeclaration","scope":8128,"src":"768:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8006,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8009,"mutability":"mutable","name":"denominator","nameLocation":"790:11:24","nodeType":"VariableDeclaration","scope":8128,"src":"782:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8008,"name":"uint256","nodeType":"ElementaryTypeName","src":"782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"749:56:24"},"returnParameters":{"id":8013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"mutability":"mutable","name":"result","nameLocation":"837:6:24","nodeType":"VariableDeclaration","scope":8128,"src":"829:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8011,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"828:16:24"},"scope":8173,"src":"734:3383:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8171,"nodeType":"Block","src":"4509:169:24","statements":[{"id":8170,"nodeType":"UncheckedBlock","src":"4514:160:24","statements":[{"expression":{"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"4530:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"4546:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"4549:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8144,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"4552:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8141,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8128,"src":"4539:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4530:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8147,"nodeType":"ExpressionStatement","src":"4530:34:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"4581:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"4584:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8151,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"4587:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8148,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"4574:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4602:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4574:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8169,"nodeType":"IfStatement","src":"4570:99:24","trueBody":{"id":8168,"nodeType":"Block","src":"4605:64:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"4620:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":8159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4634:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4634:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":8157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4629:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4643:3:24","memberName":"max","nodeType":"MemberAccess","src":"4629:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4620:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4612:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4612:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8164,"nodeType":"ExpressionStatement","src":"4612:35:24"},{"expression":{"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4654:8:24","subExpression":{"id":8165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"4654:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8167,"nodeType":"ExpressionStatement","src":"4654:8:24"}]}}]}]},"documentation":{"id":8129,"nodeType":"StructuredDocumentation","src":"4122:263:24","text":"@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"},"id":8172,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivRoundingUp","nameLocation":"4397:16:24","nodeType":"FunctionDefinition","parameters":{"id":8136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8131,"mutability":"mutable","name":"a","nameLocation":"4426:1:24","nodeType":"VariableDeclaration","scope":8172,"src":"4418:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8130,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8133,"mutability":"mutable","name":"b","nameLocation":"4440:1:24","nodeType":"VariableDeclaration","scope":8172,"src":"4432:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8132,"name":"uint256","nodeType":"ElementaryTypeName","src":"4432:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8135,"mutability":"mutable","name":"denominator","nameLocation":"4454:11:24","nodeType":"VariableDeclaration","scope":8172,"src":"4446:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4413:56:24"},"returnParameters":{"id":8139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8138,"mutability":"mutable","name":"result","nameLocation":"4501:6:24","nodeType":"VariableDeclaration","scope":8172,"src":"4493:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4492:16:24"},"scope":8173,"src":"4388:290:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8174,"src":"361:4320:24","usedErrors":[],"usedEvents":[]}],"src":"33:4650:24"},"id":24}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":54,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":357,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":363,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":365,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":367,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":369,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206f97b5aadce8f0381c0125d9120b34776bc879b6501d0af53398a60096e7813564736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x97B5AADCE8F0381C0125D9120B34776B 0xC8 PUSH26 0xB6501D0AF53398A60096E7813564736F6C634300081900330000 ","sourceMap":"751:5018:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206f97b5aadce8f0381c0125d9120b34776bc879b6501d0af53398a60096e7813564736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x97B5AADCE8F0381C0125D9120B34776B 0xC8 PUSH26 0xB6501D0AF53398A60096E7813564736F6C634300081900330000 ","sourceMap":"751:5018:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122067458043975b0e8c66a5afbbe3c473f98030118cf14d0d18bb17543b9cf2d81d64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x458043975B0E8C66 0xA5 0xAF 0xBB 0xE3 0xC4 PUSH20 0xF98030118CF14D0D18BB17543B9CF2D81D64736F PUSH13 0x63430008190033000000000000 ","sourceMap":"195:6066:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122067458043975b0e8c66a5afbbe3c473f98030118cf14d0d18bb17543b9cf2d81d64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x458043975B0E8C66 0xA5 0xAF 0xBB 0xE3 0xC4 PUSH20 0xF98030118CF14D0D18BB17543B9CF2D81D64736F PUSH13 0x63430008190033000000000000 ","sourceMap":"195:6066:9:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1573,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122046b6e9afd7a8222113d6b4b3d0035107edcc2bb53615bdae1fbbcc91634419d664736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB6 0xE9 0xAF 0xD7 0xA8 0x22 0x21 SGT 0xD6 0xB4 0xB3 0xD0 SUB MLOAD SMOD 0xED 0xCC 0x2B 0xB5 CALLDATASIZE ISZERO 0xBD 0xAE 0x1F 0xBB 0xCC SWAP2 PUSH4 0x4419D664 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1330:11640:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122046b6e9afd7a8222113d6b4b3d0035107edcc2bb53615bdae1fbbcc91634419d664736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB6 0xE9 0xAF 0xD7 0xA8 0x22 0x21 SGT 0xD6 0xB4 0xB3 0xD0 SUB MLOAD SMOD 0xED 0xCC 0x2B 0xB5 CALLDATASIZE ISZERO 0xBD 0xAE 0x1F 0xBB 0xCC SWAP2 PUSH4 0x4419D664 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1330:11640:12:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Callback for IUniswapV3PoolActions#swap","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Any contract that calls IUniswapV3PoolActions#swap must implement this interface","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactOutput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Router token swapping functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps `amountIn` of one token for as much as possible of another token"},"exactOutput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps as little as possible of one token for `amountOut` of another token"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Functions for swapping tokens via Uniswap V3","version":1}}},"contracts/community/Pool.sol":{"Pool":{"abi":[{"inputs":[{"internalType":"address","name":"_oracleAddress","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_yearnVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"predictor","type":"address"},{"indexed":false,"internalType":"enum Pool.Coin","name":"token","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"PredictionRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"predictor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardWithdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"calculateReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"distributionCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exitLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPrediction","outputs":[{"components":[{"internalType":"address","name":"predictor","type":"address"},{"internalType":"enum Pool.Coin","name":"token","type":"uint8"},{"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"internalType":"uint256","name":"actualPrice","type":"uint256"},{"internalType":"uint256","name":"resolvedPrice","type":"uint256"},{"internalType":"uint256","name":"difference","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"bool","name":"resolved","type":"bool"}],"internalType":"struct Pool.Prediction","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPredictionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"from","type":"uint256"},{"internalType":"uint256","name":"to","type":"uint256"}],"name":"getPredictionFromTo","outputs":[{"components":[{"internalType":"address","name":"predictor","type":"address"},{"internalType":"enum Pool.Coin","name":"token","type":"uint8"},{"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"internalType":"uint256","name":"actualPrice","type":"uint256"},{"internalType":"uint256","name":"resolvedPrice","type":"uint256"},{"internalType":"uint256","name":"difference","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"bool","name":"resolved","type":"bool"}],"internalType":"struct Pool.Prediction[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSubmissionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPredictions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hasAnyUnresolvedPastEndTime","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hasUnresolvedPredictions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last10Predictions","outputs":[{"components":[{"internalType":"address","name":"predictor","type":"address"},{"internalType":"enum Pool.Coin","name":"token","type":"uint8"},{"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"internalType":"uint256","name":"actualPrice","type":"uint256"},{"internalType":"uint256","name":"resolvedPrice","type":"uint256"},{"internalType":"uint256","name":"difference","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"bool","name":"resolved","type":"bool"}],"internalType":"struct Pool.Prediction[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract Oracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"predictionDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"predictions","outputs":[{"internalType":"address","name":"predictor","type":"address"},{"internalType":"enum Pool.Coin","name":"token","type":"uint8"},{"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"internalType":"uint256","name":"actualPrice","type":"uint256"},{"internalType":"uint256","name":"resolvedPrice","type":"uint256"},{"internalType":"uint256","name":"difference","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"bool","name":"resolved","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resolutionLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resolve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"submissionBaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"submissionStepFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Pool.Coin","name":"_token","type":"uint8"},{"internalType":"uint256","name":"_predictedPrice","type":"uint256"}],"name":"submit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalDistribution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPredictions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userSubmissionFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wnative","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"yearnVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"errors":{"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":244,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346100d957601f61168838819003918201601f19168301916001600160401b038311848410176100de578084926060946040528339810103126100d957610047816100f4565b906100606040610059602084016100f4565b92016100f4565b6001600055662386f26fc1000060055566038d7ea4c680006006556201518060075561025860085562093a806009556000600a556000600b5560018060a01b0380928160018060a01b03199516856001541617600155168360035416176003551690600454161760045560405161157f90816101098239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100d95756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80624fbbb014610e2b5780630166809614610e0d578063037361e914610dd05780632810e1d614610bd85780632cebdeb214610bb1578063371d5d0214610b9657806344ed9f6614610b785780634abf93b714610b535780634ce93cc8146107c35780635590cfa9146107585780635c58006114610684578063600bebf51461071b578063624d7b72146106de57806370246a1e146106c057806371d61cd5146106a2578063779bd562146106845780637dc0d1d01461065d57806380450cde1461063f5780639db5df4614610618578063cd634792146105fa578063d1c4e1b414610548578063d82e396214610511578063e75e454e146104f3578063e9fad8ee146101ec578063f9be8523146101c25763fe83bece0361000e57346101bd5760203660031901126101bd576004356101596111a5565b506002548110156101885761017961017361012092610ece565b5061124e565b6101866040518092610f2b565bf35b60405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606490fd5b600080fd5b346101bd5760003660031901126101bd5733600052600e6020526020604060002054604051908152f35b346101bd5760003660031901126101bd57336000526020600d815261021660406000205442611031565b6009541161049f57610227336112e9565b90811561045b576004805460405163095ea7b360e01b81526001600160a01b03918216928101839052602481018590529093918390829060449082906000905af180156104135761042e575b5047836004541691823b156101bd576000926084849260405195869384926328c6306960e21b8452600484015230602484015230604484015260c860648401525af1918215610413576102cc9261041f575b5047611031565b9160035416803b156101bd5760008091602460405180948193632e1a7d4d60e01b83528860048401525af1801561041357610404575b5033600052600c815261031c604060002054600a54611031565b600a5533600052600c815260006040812055600d815242604060002055600554600e82526040600020558147106103ec57600080808085335af13d156103e7573d67ffffffffffffffff81116103d15760405190610383601f8201601f191685018361100f565b81526000833d92013e5b156103bf577f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337906040519283523392a2005b604051630a12f52160e11b8152600490fd5b634e487b7160e01b600052604160045260246000fd5b61038d565b60405163cd78605960e01b8152306004820152602490fd5b61040d90610ffb565b82610302565b6040513d6000823e3d90fd5b61042890610ffb565b846102c5565b61044d90833d8511610454575b610445818361100f565b810190611139565b5083610273565b503d61043b565b6064906040519062461bcd60e51b82526004820152601360248201527f4e6f2072657761726420617661696c61626c65000000000000000000000000006044820152fd5b6084906040519062461bcd60e51b82526004820152602760248201527f5761697420666f7220657869744c696d6974206265666f7265206e65787420776044820152666974686472617760c81b6064820152fd5b346101bd5760003660031901126101bd576020600b54604051908152f35b346101bd5760203660031901126101bd576004356001600160a01b03811681036101bd576105406020916112e9565b604051908152f35b346101bd5760003660031901126101bd57600254600a8111156105f25760091981018181116105dc57905b6105856105808383611031565b6111ea565b91805b8281106105a1576040518061059d8682610f94565b0390f35b806105d56105b0600193610ece565b506105c46105be8685611031565b9161124e565b6105ce828961123a565b528661123a565b5001610588565b634e487b7160e01b600052601160045260246000fd5b600090610573565b346101bd5760003660031901126101bd576020600554604051908152f35b346101bd5760003660031901126101bd5760206001600160a01b0360045416604051908152f35b346101bd5760003660031901126101bd576020600654604051908152f35b346101bd5760003660031901126101bd5760206001600160a01b0360015416604051908152f35b346101bd5760003660031901126101bd576020600a54604051908152f35b346101bd5760003660031901126101bd576020600854604051908152f35b346101bd5760003660031901126101bd576020600754604051908152f35b346101bd5760203660031901126101bd576004356001600160a01b0381168091036101bd57600052600d6020526020604060002054604051908152f35b346101bd5760203660031901126101bd576004356001600160a01b0381168091036101bd57600052600e6020526020604060002054604051908152f35b346101bd5760403660031901126101bd5760043560243561077a818310611151565b610788600254821115611151565b6107956105808383611031565b91805b8281106107ad576040518061059d8682610f94565b806107bc6105b0600193610ece565b5001610798565b60403660031901126101bd57600160043510156101bd576107e86005543410156110e1565b33600052600e6020526108026040600020543410156110e1565b33600052600e602052604060002034815561081f6006543461103e565b9055600460206001600160a01b036001541660405192838092638e15f47360e01b82525afa90811561041357600091610b21575b506402540be40081818102048114821517156105dc576108756007544261103e565b6040519061088282610fde565b338252602082016108956004358261112d565b6040830191602435835260608401908587028252608085016000815260a0860191600083524260c088015260e08701526000610100870152600254680100000000000000008110156103d1578060016108f19201600255610ece565b939093610b0b576001600160a01b0387511695845495876001600160a01b0319881617865551956001871015610af5576101009760079760ff60a01b9060a01b16916affffffffffffffffffffff60a81b161717855551600185015551600284015551600383015551600482015560c0840151600582015560e0840151600682015501910151151560ff80198354169116179055610990600a5461104b565b600a556001600160a01b0360035416803b156101bd57600060049160405192838092630d0e30db60e41b825234905af1801561041357610ae6575b506003546004805460405163095ea7b360e01b81526001600160a01b0391821692810192909252346024830152909160209183916044918391600091165af1801561041357610ac7575b506001600160a01b0360045416803b156101bd5760008091604460405180948193636e553f6560e01b83523460048401523060248401525af1801561041357610ab8575b50610a666007544261103e565b9060405192610a7784600435610f1e565b602435602085015202604083015242606083015260808201527f046796fc72779cbabd1ea8b64c35f18f13d4d3d4693526deb779040b773c311b60a03392a2005b610ac190610ffb565b82610a59565b610adf9060203d60201161045457610445818361100f565b5082610a15565b610aef90610ffb565b826109cb565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b90506020813d602011610b4b575b81610b3c6020938361100f565b810103126101bd575181610853565b3d9150610b2f565b346101bd5760003660031901126101bd576020610b6e611093565b6040519015158152f35b346101bd5760003660031901126101bd576020600954604051908152f35b346101bd5760003660031901126101bd576020610b6e61105a565b346101bd5760003660031901126101bd5760206001600160a01b0360035416604051908152f35b346101bd5760003660031901126101bd5760018054604051638e15f47360e01b81526020916001600160a01b039083908390600490829085165afa91821561041357600092610da1575b506402540be400918281029281840414901517156105dc57906000845b610c6d575b600c8433600052526040600020610c5b815461104b565b9055610c68600b5461104b565b600b55005b600254811015610d9c57908482610c85829594610ece565b5060ff600780920154161580610d85575b610ca5575b5001909192610c3f565b82610caf83610ece565b5001549084821115610d7757610ccf85610cc98185611031565b93611485565b91610cea6006610cde86610ece565b5001546008549061103e565b4211610d4c5786610cfa85610ece565b505416600052600c89525b6004610d1085610ece565b500155610d1c83610ece565b5001805460ff191684179055836003610d3484610ece565b500155610d44600b91825461103e565b905587610c9b565b86610d5685610ece565b505416600052600c89526040600020610d7084825461103e565b9055610d05565b610ccf85610cc98482611031565b506006610d9183610ece565b500154421015610c96565b610c44565b9091508281813d8311610dc9575b610db9818361100f565b810103126101bd57519084610c22565b503d610daf565b346101bd5760203660031901126101bd576004356001600160a01b0381168091036101bd57600052600c6020526020604060002054604051908152f35b346101bd5760003660031901126101bd576020600254604051908152f35b346101bd5760203660031901126101bd576004356002548110156101bd57610e5561012091610ece565b508054906001810154906002810154600382015460048301549060058401549260ff600760068701549601541695610ea6604051986001600160a01b0381168a5260ff60208b019160a01c16610f1e565b60408801526060870152608086015260a085015260c084015260e08301521515610100820152f35b600254811015610f0857600260005260031b7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b906001821015610af55752565b6001600160a01b038151168252610f4a60208201516020840190610f1e565b60408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100809101511515910152565b602090602060408183019282815285518094520193019160005b828110610fbc575050505090565b909192938261012082610fd26001948951610f2b565b01950193929101610fae565b610120810190811067ffffffffffffffff8211176103d157604052565b67ffffffffffffffff81116103d157604052565b90601f8019910116810190811067ffffffffffffffff8211176103d157604052565b919082039182116105dc57565b919082018092116105dc57565b60001981146105dc5760010190565b60025460005b81811061106e575050600090565b60ff600761107b83610ece565b500154161561108c57600101611060565b5050600190565b60025460005b8181106110a7575050600090565b60ff60076110b483610ece565b5001541615806110cb575b61108c57600101611099565b5060066110d782610ece565b50015442116110bf565b156110e857565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642066656520616d6f756e7400000000000000000000000000006044820152606490fd5b6001821015610af55752565b908160209103126101bd575180151581036101bd5790565b1561115857565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606490fd5b67ffffffffffffffff81116103d15760051b60200190565b604051906111b282610fde565b816101006000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b906111f48261118d565b611201604051918261100f565b8281528092611212601f199161118d565b019060005b82811061122357505050565b60209061122e6111a5565b82828501015201611217565b8051821015610f085760209160051b010190565b9060405161125b81610fde565b61010060ff600783956112838382546001600160a01b038116885260a01c166020870161112d565b600181015460408601526002810154606086015260038101546080860152600481015460a0860152600581015460c0860152600681015460e08601520154161515910152565b81156112d3570490565b634e487b7160e01b600052601260045260246000fd5b906001600160a01b038092166000928184526020600c8152604090818620541561144357600b54938415611400578652600c81528186205493670de0b6b3a764000094858102908082048714901517156113ec579161134b81926024946112c9565b94600454168451938480926370a0823160e01b82523060048301525afa9283156113e3575086926113b1575b505081810291818304149015171561139d5761139a929350048060011c90611031565b90565b634e487b7160e01b84526011600452602484fd5b90809250813d83116113dc575b6113c8818361100f565b810103126113d857513880611377565b8480fd5b503d6113be565b513d88823e3d90fd5b634e487b7160e01b88526011600452602488fd5b50606491519062461bcd60e51b82526004820152601460248201527f4e6f207265776172647320617661696c61626c650000000000000000000000006044820152fd5b606491519062461bcd60e51b82526004820152601360248201527f4e6f2070726564696374696f6e73206d616465000000000000000000000000006044820152fd5b811561108c5781808211156115395761149d91611031565b905b6064820291808304606414901517156105dc576114bb916112c9565b806114c65750600a90565b600581116114d45750600990565b600a81116114e25750600890565b600f81116114f05750600790565b601481116114fe5750600690565b6019811161150c5750600590565b601e811161151a5750600490565b602381116115285750600390565b60281061153457600290565b600190565b9061154391611031565b9061149f56fea2646970667358221220500ec216d029e6fd5a838f4ac92bcde00cf4f8d56b869e4ae2eca89636031a3e64736f6c63430008190033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xD9 JUMPI PUSH1 0x1F PUSH2 0x1688 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xDE JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xD9 JUMPI PUSH2 0x47 DUP2 PUSH2 0xF4 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP3 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x5 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x6 SSTORE PUSH3 0x15180 PUSH1 0x7 SSTORE PUSH2 0x258 PUSH1 0x8 SSTORE PUSH3 0x93A80 PUSH1 0x9 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP6 AND DUP6 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND DUP4 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND SWAP1 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0x157F SWAP1 DUP2 PUSH2 0x109 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD9 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x4FBBB0 EQ PUSH2 0xE2B JUMPI DUP1 PUSH4 0x1668096 EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x37361E9 EQ PUSH2 0xDD0 JUMPI DUP1 PUSH4 0x2810E1D6 EQ PUSH2 0xBD8 JUMPI DUP1 PUSH4 0x2CEBDEB2 EQ PUSH2 0xBB1 JUMPI DUP1 PUSH4 0x371D5D02 EQ PUSH2 0xB96 JUMPI DUP1 PUSH4 0x44ED9F66 EQ PUSH2 0xB78 JUMPI DUP1 PUSH4 0x4ABF93B7 EQ PUSH2 0xB53 JUMPI DUP1 PUSH4 0x4CE93CC8 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0x5590CFA9 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x5C580061 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x600BEBF5 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0x624D7B72 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x70246A1E EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0x71D61CD5 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0x779BD562 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0x80450CDE EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x9DB5DF46 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xCD634792 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xD1C4E1B4 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xE75E454E EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF9BE8523 EQ PUSH2 0x1C2 JUMPI PUSH4 0xFE83BECE SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x159 PUSH2 0x11A5 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH2 0x179 PUSH2 0x173 PUSH2 0x120 SWAP3 PUSH2 0xECE JUMP JUMPDEST POP PUSH2 0x124E JUMP JUMPDEST PUSH2 0x186 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0xF2B JUMP JUMPDEST RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xD DUP2 MSTORE PUSH2 0x216 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x9 SLOAD GT PUSH2 0x49F JUMPI PUSH2 0x227 CALLER PUSH2 0x12E9 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x45B JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP4 SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0x42E JUMPI JUMPDEST POP SELFBALANCE DUP4 PUSH1 0x4 SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 SWAP3 PUSH1 0x84 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x28C63069 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE ADDRESS PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0xC8 PUSH1 0x64 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x413 JUMPI PUSH2 0x2CC SWAP3 PUSH2 0x41F JUMPI JUMPDEST POP SELFBALANCE PUSH2 0x1031 JUMP JUMPDEST SWAP2 PUSH1 0x3 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0x404 JUMPI JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0xC DUP2 MSTORE PUSH2 0x31C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x1031 JUMP JUMPDEST PUSH1 0xA SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0xD DUP2 MSTORE TIMESTAMP PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH1 0xE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP2 SELFBALANCE LT PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x3E7 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x383 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x3BF JUMPI PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x40D SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP3 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x428 SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP5 PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x44D SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x454 JUMPI JUMPDEST PUSH2 0x445 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1139 JUMP JUMPDEST POP DUP4 PUSH2 0x273 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x43B JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072657761726420617661696C61626C6500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5761697420666F7220657869744C696D6974206265666F7265206E6578742077 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x69746864726177 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1BD JUMPI PUSH2 0x540 PUSH1 0x20 SWAP2 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x2 SLOAD PUSH1 0xA DUP2 GT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x9 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x5DC JUMPI SWAP1 JUMPDEST PUSH2 0x585 PUSH2 0x580 DUP4 DUP4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x59D DUP7 DUP3 PUSH2 0xF94 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x5D5 PUSH2 0x5B0 PUSH1 0x1 SWAP4 PUSH2 0xECE JUMP JUMPDEST POP PUSH2 0x5C4 PUSH2 0x5BE DUP7 DUP6 PUSH2 0x1031 JUMP JUMPDEST SWAP2 PUSH2 0x124E JUMP JUMPDEST PUSH2 0x5CE DUP3 DUP10 PUSH2 0x123A JUMP JUMPDEST MSTORE DUP7 PUSH2 0x123A JUMP JUMPDEST POP ADD PUSH2 0x588 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x573 JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1BD JUMPI PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1BD JUMPI PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x77A DUP2 DUP4 LT PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x788 PUSH1 0x2 SLOAD DUP3 GT ISZERO PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x795 PUSH2 0x580 DUP4 DUP4 PUSH2 0x1031 JUMP JUMPDEST SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x59D DUP7 DUP3 PUSH2 0xF94 JUMP JUMPDEST DUP1 PUSH2 0x7BC PUSH2 0x5B0 PUSH1 0x1 SWAP4 PUSH2 0xECE JUMP JUMPDEST POP ADD PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x1 PUSH1 0x4 CALLDATALOAD LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x7E8 PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x10E1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x802 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD CALLVALUE LT ISZERO PUSH2 0x10E1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLVALUE DUP2 SSTORE PUSH2 0x81F PUSH1 0x6 SLOAD CALLVALUE PUSH2 0x103E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xB21 JUMPI JUMPDEST POP PUSH5 0x2540BE400 DUP2 DUP2 DUP2 MUL DIV DUP2 EQ DUP3 ISZERO OR ISZERO PUSH2 0x5DC JUMPI PUSH2 0x875 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x882 DUP3 PUSH2 0xFDE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH2 0x895 PUSH1 0x4 CALLDATALOAD DUP3 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP6 DUP8 MUL DUP3 MSTORE PUSH1 0x80 DUP6 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE TIMESTAMP PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1 PUSH2 0x8F1 SWAP3 ADD PUSH1 0x2 SSTORE PUSH2 0xECE JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0xB0B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP6 DUP5 SLOAD SWAP6 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP9 AND OR DUP7 SSTORE MLOAD SWAP6 PUSH1 0x1 DUP8 LT ISZERO PUSH2 0xAF5 JUMPI PUSH2 0x100 SWAP8 PUSH1 0x7 SWAP8 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x990 PUSH1 0xA SLOAD PUSH2 0x104B JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0xAE6 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLVALUE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0xAC7 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x6E553F65 PUSH1 0xE0 SHL DUP4 MSTORE CALLVALUE PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0xAB8 JUMPI JUMPDEST POP PUSH2 0xA66 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x103E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA77 DUP5 PUSH1 0x4 CALLDATALOAD PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE MUL PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x46796FC72779CBABD1EA8B64C35F18F13D4D3D4693526DEB779040B773C311B PUSH1 0xA0 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH2 0xAC1 SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0xADF SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x454 JUMPI PUSH2 0x445 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST POP DUP3 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0xAEF SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP3 PUSH2 0x9CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB4B JUMPI JUMPDEST DUP2 PUSH2 0xB3C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BD JUMPI MLOAD DUP2 PUSH2 0x853 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB2F JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH2 0xB6E PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH2 0xB6E PUSH2 0x105A JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xDA1 JUMPI JUMPDEST POP PUSH5 0x2540BE400 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x5DC JUMPI SWAP1 PUSH1 0x0 DUP5 JUMPDEST PUSH2 0xC6D JUMPI JUMPDEST PUSH1 0xC DUP5 CALLER PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xC5B DUP2 SLOAD PUSH2 0x104B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xC68 PUSH1 0xB SLOAD PUSH2 0x104B JUMP JUMPDEST PUSH1 0xB SSTORE STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD9C JUMPI SWAP1 DUP5 DUP3 PUSH2 0xC85 DUP3 SWAP6 SWAP5 PUSH2 0xECE JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x7 DUP1 SWAP3 ADD SLOAD AND ISZERO DUP1 PUSH2 0xD85 JUMPI JUMPDEST PUSH2 0xCA5 JUMPI JUMPDEST POP ADD SWAP1 SWAP2 SWAP3 PUSH2 0xC3F JUMP JUMPDEST DUP3 PUSH2 0xCAF DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD SWAP1 DUP5 DUP3 GT ISZERO PUSH2 0xD77 JUMPI PUSH2 0xCCF DUP6 PUSH2 0xCC9 DUP2 DUP6 PUSH2 0x1031 JUMP JUMPDEST SWAP4 PUSH2 0x1485 JUMP JUMPDEST SWAP2 PUSH2 0xCEA PUSH1 0x6 PUSH2 0xCDE DUP7 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD PUSH1 0x8 SLOAD SWAP1 PUSH2 0x103E JUMP JUMPDEST TIMESTAMP GT PUSH2 0xD4C JUMPI DUP7 PUSH2 0xCFA DUP6 PUSH2 0xECE JUMP JUMPDEST POP SLOAD AND PUSH1 0x0 MSTORE PUSH1 0xC DUP10 MSTORE JUMPDEST PUSH1 0x4 PUSH2 0xD10 DUP6 PUSH2 0xECE JUMP JUMPDEST POP ADD SSTORE PUSH2 0xD1C DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE DUP4 PUSH1 0x3 PUSH2 0xD34 DUP5 PUSH2 0xECE JUMP JUMPDEST POP ADD SSTORE PUSH2 0xD44 PUSH1 0xB SWAP2 DUP3 SLOAD PUSH2 0x103E JUMP JUMPDEST SWAP1 SSTORE DUP8 PUSH2 0xC9B JUMP JUMPDEST DUP7 PUSH2 0xD56 DUP6 PUSH2 0xECE JUMP JUMPDEST POP SLOAD AND PUSH1 0x0 MSTORE PUSH1 0xC DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD70 DUP5 DUP3 SLOAD PUSH2 0x103E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD05 JUMP JUMPDEST PUSH2 0xCCF DUP6 PUSH2 0xCC9 DUP5 DUP3 PUSH2 0x1031 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0xD91 DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xDC9 JUMPI JUMPDEST PUSH2 0xDB9 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BD JUMPI MLOAD SWAP1 DUP5 PUSH2 0xC22 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xDAF JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1BD JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0xE55 PUSH2 0x120 SWAP2 PUSH2 0xECE JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 DUP5 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP8 ADD SLOAD SWAP7 ADD SLOAD AND SWAP6 PUSH2 0xEA6 PUSH1 0x40 MLOAD SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP11 MSTORE PUSH1 0xFF PUSH1 0x20 DUP12 ADD SWAP2 PUSH1 0xA0 SHR AND PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x3 SHL PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 LT ISZERO PUSH2 0xAF5 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP3 MSTORE PUSH2 0xF4A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xFBC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH2 0x120 DUP3 PUSH2 0xFD2 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0xF2B JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3D1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3D1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5DC JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5DC JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5DC JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x106E JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x7 PUSH2 0x107B DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x108C JUMPI PUSH1 0x1 ADD PUSH2 0x1060 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10A7 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x7 PUSH2 0x10B4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD AND ISZERO DUP1 PUSH2 0x10CB JUMPI JUMPDEST PUSH2 0x108C JUMPI PUSH1 0x1 ADD PUSH2 0x1099 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x10D7 DUP3 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD TIMESTAMP GT PUSH2 0x10BF JUMP JUMPDEST ISZERO PUSH2 0x10E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642066656520616D6F756E740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO PUSH2 0xAF5 JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1BD JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1BD JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1158 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11B2 DUP3 PUSH2 0xFDE JUMP JUMPDEST DUP2 PUSH2 0x100 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x11F4 DUP3 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x1201 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x100F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1212 PUSH1 0x1F NOT SWAP2 PUSH2 0x118D JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1223 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x122E PUSH2 0x11A5 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1217 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x125B DUP2 PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x100 PUSH1 0xFF PUSH1 0x7 DUP4 SWAP6 PUSH2 0x1283 DUP4 DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP9 MSTORE PUSH1 0xA0 SHR AND PUSH1 0x20 DUP8 ADD PUSH2 0x112D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12D3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 PUSH1 0xC DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP7 KECCAK256 SLOAD ISZERO PUSH2 0x1443 JUMPI PUSH1 0xB SLOAD SWAP4 DUP5 ISZERO PUSH2 0x1400 JUMPI DUP7 MSTORE PUSH1 0xC DUP2 MSTORE DUP2 DUP7 KECCAK256 SLOAD SWAP4 PUSH8 0xDE0B6B3A7640000 SWAP5 DUP6 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x13EC JUMPI SWAP2 PUSH2 0x134B DUP2 SWAP3 PUSH1 0x24 SWAP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP5 PUSH1 0x4 SLOAD AND DUP5 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x13E3 JUMPI POP DUP7 SWAP3 PUSH2 0x13B1 JUMPI JUMPDEST POP POP DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x139D JUMPI PUSH2 0x139A SWAP3 SWAP4 POP DIV DUP1 PUSH1 0x1 SHR SWAP1 PUSH2 0x1031 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13DC JUMPI JUMPDEST PUSH2 0x13C8 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13D8 JUMPI MLOAD CODESIZE DUP1 PUSH2 0x1377 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x13BE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726564696374696F6E73206D61646500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 ISZERO PUSH2 0x108C JUMPI DUP2 DUP1 DUP3 GT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x149D SWAP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x5DC JUMPI PUSH2 0x14BB SWAP2 PUSH2 0x12C9 JUMP JUMPDEST DUP1 PUSH2 0x14C6 JUMPI POP PUSH1 0xA SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0x14D4 JUMPI POP PUSH1 0x9 SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 GT PUSH2 0x14E2 JUMPI POP PUSH1 0x8 SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 GT PUSH2 0x14F0 JUMPI POP PUSH1 0x7 SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP2 GT PUSH2 0x14FE JUMPI POP PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x19 DUP2 GT PUSH2 0x150C JUMPI POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH1 0x1E DUP2 GT PUSH2 0x151A JUMPI POP PUSH1 0x4 SWAP1 JUMP JUMPDEST PUSH1 0x23 DUP2 GT PUSH2 0x1528 JUMPI POP PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x28 LT PUSH2 0x1534 JUMPI PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1543 SWAP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 PUSH2 0x149F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xE 0xC2 AND 0xD0 0x29 0xE6 REVERT GAS DUP4 DUP16 BLOBBASEFEE 0xC9 0x2B 0xCD 0xE0 0xC DELEGATECALL 0xF8 0xD5 PUSH12 0x869E4AE2ECA89636031A3E64 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"336:7904:16:-:0;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;1713:1:11;-1:-1:-1;336:7904:16;779:10;;336:7904;828:11;;336:7904;879:6;;336:7904;922:10;;336:7904;963:6;;336:7904;-1:-1:-1;1007:1:16;336:7904;-1:-1:-1;1047:1:16;336:7904;;;;;;;;;;;;;;;;;;1713:1:11;336:7904:16;;;1713:1:11;336:7904:16;;;1611:25;336:7904;;;1611:25;336:7904;;;1641:32;336:7904;;;1641:32;336:7904;;;;;;;;;;;-1:-1:-1;336:7904:16;;;;;;-1:-1:-1;336:7904:16;;;;;-1:-1:-1;336:7904:16;;;;-1:-1:-1;;;;;336:7904:16;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_bool_fromMemory":{"entryPoint":4409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_Prediction_dyn":{"entryPoint":3988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_Coin":{"entryPoint":3870,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_Prediction":{"entryPoint":3883,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_and_zero_memory_array_array_struct_Prediction_dyn":{"entryPoint":4586,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Prediction":{"entryPoint":4517,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Prediction_dyn":{"entryPoint":4493,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":4158,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":4809,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4145,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":4111,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14412":{"entryPoint":4062,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_14414":{"entryPoint":4091,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateReward":{"entryPoint":4841,"id":2907,"parameterSlots":1,"returnSlots":1},"fun_calculateScore":{"entryPoint":5253,"id":3345,"parameterSlots":2,"returnSlots":1},"fun_hasAnyUnresolvedPastEndTime":{"entryPoint":4243,"id":3110,"parameterSlots":0,"returnSlots":1},"fun_hasUnresolvedPredictions":{"entryPoint":4186,"id":3375,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":4171,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_Prediction_dyn":{"entryPoint":4666,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_Prediction":{"entryPoint":4686,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_133f":{"entryPoint":4321,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_86f5":{"entryPoint":4433,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_Prediction__dyn":{"entryPoint":3790,"id":null,"parameterSlots":1,"returnSlots":2},"write_to_memory_enum_Coin":{"entryPoint":4397,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80624fbbb014610e2b5780630166809614610e0d578063037361e914610dd05780632810e1d614610bd85780632cebdeb214610bb1578063371d5d0214610b9657806344ed9f6614610b785780634abf93b714610b535780634ce93cc8146107c35780635590cfa9146107585780635c58006114610684578063600bebf51461071b578063624d7b72146106de57806370246a1e146106c057806371d61cd5146106a2578063779bd562146106845780637dc0d1d01461065d57806380450cde1461063f5780639db5df4614610618578063cd634792146105fa578063d1c4e1b414610548578063d82e396214610511578063e75e454e146104f3578063e9fad8ee146101ec578063f9be8523146101c25763fe83bece0361000e57346101bd5760203660031901126101bd576004356101596111a5565b506002548110156101885761017961017361012092610ece565b5061124e565b6101866040518092610f2b565bf35b60405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606490fd5b600080fd5b346101bd5760003660031901126101bd5733600052600e6020526020604060002054604051908152f35b346101bd5760003660031901126101bd57336000526020600d815261021660406000205442611031565b6009541161049f57610227336112e9565b90811561045b576004805460405163095ea7b360e01b81526001600160a01b03918216928101839052602481018590529093918390829060449082906000905af180156104135761042e575b5047836004541691823b156101bd576000926084849260405195869384926328c6306960e21b8452600484015230602484015230604484015260c860648401525af1918215610413576102cc9261041f575b5047611031565b9160035416803b156101bd5760008091602460405180948193632e1a7d4d60e01b83528860048401525af1801561041357610404575b5033600052600c815261031c604060002054600a54611031565b600a5533600052600c815260006040812055600d815242604060002055600554600e82526040600020558147106103ec57600080808085335af13d156103e7573d67ffffffffffffffff81116103d15760405190610383601f8201601f191685018361100f565b81526000833d92013e5b156103bf577f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337906040519283523392a2005b604051630a12f52160e11b8152600490fd5b634e487b7160e01b600052604160045260246000fd5b61038d565b60405163cd78605960e01b8152306004820152602490fd5b61040d90610ffb565b82610302565b6040513d6000823e3d90fd5b61042890610ffb565b846102c5565b61044d90833d8511610454575b610445818361100f565b810190611139565b5083610273565b503d61043b565b6064906040519062461bcd60e51b82526004820152601360248201527f4e6f2072657761726420617661696c61626c65000000000000000000000000006044820152fd5b6084906040519062461bcd60e51b82526004820152602760248201527f5761697420666f7220657869744c696d6974206265666f7265206e65787420776044820152666974686472617760c81b6064820152fd5b346101bd5760003660031901126101bd576020600b54604051908152f35b346101bd5760203660031901126101bd576004356001600160a01b03811681036101bd576105406020916112e9565b604051908152f35b346101bd5760003660031901126101bd57600254600a8111156105f25760091981018181116105dc57905b6105856105808383611031565b6111ea565b91805b8281106105a1576040518061059d8682610f94565b0390f35b806105d56105b0600193610ece565b506105c46105be8685611031565b9161124e565b6105ce828961123a565b528661123a565b5001610588565b634e487b7160e01b600052601160045260246000fd5b600090610573565b346101bd5760003660031901126101bd576020600554604051908152f35b346101bd5760003660031901126101bd5760206001600160a01b0360045416604051908152f35b346101bd5760003660031901126101bd576020600654604051908152f35b346101bd5760003660031901126101bd5760206001600160a01b0360015416604051908152f35b346101bd5760003660031901126101bd576020600a54604051908152f35b346101bd5760003660031901126101bd576020600854604051908152f35b346101bd5760003660031901126101bd576020600754604051908152f35b346101bd5760203660031901126101bd576004356001600160a01b0381168091036101bd57600052600d6020526020604060002054604051908152f35b346101bd5760203660031901126101bd576004356001600160a01b0381168091036101bd57600052600e6020526020604060002054604051908152f35b346101bd5760403660031901126101bd5760043560243561077a818310611151565b610788600254821115611151565b6107956105808383611031565b91805b8281106107ad576040518061059d8682610f94565b806107bc6105b0600193610ece565b5001610798565b60403660031901126101bd57600160043510156101bd576107e86005543410156110e1565b33600052600e6020526108026040600020543410156110e1565b33600052600e602052604060002034815561081f6006543461103e565b9055600460206001600160a01b036001541660405192838092638e15f47360e01b82525afa90811561041357600091610b21575b506402540be40081818102048114821517156105dc576108756007544261103e565b6040519061088282610fde565b338252602082016108956004358261112d565b6040830191602435835260608401908587028252608085016000815260a0860191600083524260c088015260e08701526000610100870152600254680100000000000000008110156103d1578060016108f19201600255610ece565b939093610b0b576001600160a01b0387511695845495876001600160a01b0319881617865551956001871015610af5576101009760079760ff60a01b9060a01b16916affffffffffffffffffffff60a81b161717855551600185015551600284015551600383015551600482015560c0840151600582015560e0840151600682015501910151151560ff80198354169116179055610990600a5461104b565b600a556001600160a01b0360035416803b156101bd57600060049160405192838092630d0e30db60e41b825234905af1801561041357610ae6575b506003546004805460405163095ea7b360e01b81526001600160a01b0391821692810192909252346024830152909160209183916044918391600091165af1801561041357610ac7575b506001600160a01b0360045416803b156101bd5760008091604460405180948193636e553f6560e01b83523460048401523060248401525af1801561041357610ab8575b50610a666007544261103e565b9060405192610a7784600435610f1e565b602435602085015202604083015242606083015260808201527f046796fc72779cbabd1ea8b64c35f18f13d4d3d4693526deb779040b773c311b60a03392a2005b610ac190610ffb565b82610a59565b610adf9060203d60201161045457610445818361100f565b5082610a15565b610aef90610ffb565b826109cb565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b90506020813d602011610b4b575b81610b3c6020938361100f565b810103126101bd575181610853565b3d9150610b2f565b346101bd5760003660031901126101bd576020610b6e611093565b6040519015158152f35b346101bd5760003660031901126101bd576020600954604051908152f35b346101bd5760003660031901126101bd576020610b6e61105a565b346101bd5760003660031901126101bd5760206001600160a01b0360035416604051908152f35b346101bd5760003660031901126101bd5760018054604051638e15f47360e01b81526020916001600160a01b039083908390600490829085165afa91821561041357600092610da1575b506402540be400918281029281840414901517156105dc57906000845b610c6d575b600c8433600052526040600020610c5b815461104b565b9055610c68600b5461104b565b600b55005b600254811015610d9c57908482610c85829594610ece565b5060ff600780920154161580610d85575b610ca5575b5001909192610c3f565b82610caf83610ece565b5001549084821115610d7757610ccf85610cc98185611031565b93611485565b91610cea6006610cde86610ece565b5001546008549061103e565b4211610d4c5786610cfa85610ece565b505416600052600c89525b6004610d1085610ece565b500155610d1c83610ece565b5001805460ff191684179055836003610d3484610ece565b500155610d44600b91825461103e565b905587610c9b565b86610d5685610ece565b505416600052600c89526040600020610d7084825461103e565b9055610d05565b610ccf85610cc98482611031565b506006610d9183610ece565b500154421015610c96565b610c44565b9091508281813d8311610dc9575b610db9818361100f565b810103126101bd57519084610c22565b503d610daf565b346101bd5760203660031901126101bd576004356001600160a01b0381168091036101bd57600052600c6020526020604060002054604051908152f35b346101bd5760003660031901126101bd576020600254604051908152f35b346101bd5760203660031901126101bd576004356002548110156101bd57610e5561012091610ece565b508054906001810154906002810154600382015460048301549060058401549260ff600760068701549601541695610ea6604051986001600160a01b0381168a5260ff60208b019160a01c16610f1e565b60408801526060870152608086015260a085015260c084015260e08301521515610100820152f35b600254811015610f0857600260005260031b7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b906001821015610af55752565b6001600160a01b038151168252610f4a60208201516020840190610f1e565b60408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100809101511515910152565b602090602060408183019282815285518094520193019160005b828110610fbc575050505090565b909192938261012082610fd26001948951610f2b565b01950193929101610fae565b610120810190811067ffffffffffffffff8211176103d157604052565b67ffffffffffffffff81116103d157604052565b90601f8019910116810190811067ffffffffffffffff8211176103d157604052565b919082039182116105dc57565b919082018092116105dc57565b60001981146105dc5760010190565b60025460005b81811061106e575050600090565b60ff600761107b83610ece565b500154161561108c57600101611060565b5050600190565b60025460005b8181106110a7575050600090565b60ff60076110b483610ece565b5001541615806110cb575b61108c57600101611099565b5060066110d782610ece565b50015442116110bf565b156110e857565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642066656520616d6f756e7400000000000000000000000000006044820152606490fd5b6001821015610af55752565b908160209103126101bd575180151581036101bd5790565b1561115857565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606490fd5b67ffffffffffffffff81116103d15760051b60200190565b604051906111b282610fde565b816101006000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b906111f48261118d565b611201604051918261100f565b8281528092611212601f199161118d565b019060005b82811061122357505050565b60209061122e6111a5565b82828501015201611217565b8051821015610f085760209160051b010190565b9060405161125b81610fde565b61010060ff600783956112838382546001600160a01b038116885260a01c166020870161112d565b600181015460408601526002810154606086015260038101546080860152600481015460a0860152600581015460c0860152600681015460e08601520154161515910152565b81156112d3570490565b634e487b7160e01b600052601260045260246000fd5b906001600160a01b038092166000928184526020600c8152604090818620541561144357600b54938415611400578652600c81528186205493670de0b6b3a764000094858102908082048714901517156113ec579161134b81926024946112c9565b94600454168451938480926370a0823160e01b82523060048301525afa9283156113e3575086926113b1575b505081810291818304149015171561139d5761139a929350048060011c90611031565b90565b634e487b7160e01b84526011600452602484fd5b90809250813d83116113dc575b6113c8818361100f565b810103126113d857513880611377565b8480fd5b503d6113be565b513d88823e3d90fd5b634e487b7160e01b88526011600452602488fd5b50606491519062461bcd60e51b82526004820152601460248201527f4e6f207265776172647320617661696c61626c650000000000000000000000006044820152fd5b606491519062461bcd60e51b82526004820152601360248201527f4e6f2070726564696374696f6e73206d616465000000000000000000000000006044820152fd5b811561108c5781808211156115395761149d91611031565b905b6064820291808304606414901517156105dc576114bb916112c9565b806114c65750600a90565b600581116114d45750600990565b600a81116114e25750600890565b600f81116114f05750600790565b601481116114fe5750600690565b6019811161150c5750600590565b601e811161151a5750600490565b602381116115285750600390565b60281061153457600290565b600190565b9061154391611031565b9061149f56fea2646970667358221220500ec216d029e6fd5a838f4ac92bcde00cf4f8d56b869e4ae2eca89636031a3e64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x4FBBB0 EQ PUSH2 0xE2B JUMPI DUP1 PUSH4 0x1668096 EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x37361E9 EQ PUSH2 0xDD0 JUMPI DUP1 PUSH4 0x2810E1D6 EQ PUSH2 0xBD8 JUMPI DUP1 PUSH4 0x2CEBDEB2 EQ PUSH2 0xBB1 JUMPI DUP1 PUSH4 0x371D5D02 EQ PUSH2 0xB96 JUMPI DUP1 PUSH4 0x44ED9F66 EQ PUSH2 0xB78 JUMPI DUP1 PUSH4 0x4ABF93B7 EQ PUSH2 0xB53 JUMPI DUP1 PUSH4 0x4CE93CC8 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0x5590CFA9 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x5C580061 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x600BEBF5 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0x624D7B72 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x70246A1E EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0x71D61CD5 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0x779BD562 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0x80450CDE EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x9DB5DF46 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xCD634792 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xD1C4E1B4 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xE75E454E EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF9BE8523 EQ PUSH2 0x1C2 JUMPI PUSH4 0xFE83BECE SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x159 PUSH2 0x11A5 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH2 0x179 PUSH2 0x173 PUSH2 0x120 SWAP3 PUSH2 0xECE JUMP JUMPDEST POP PUSH2 0x124E JUMP JUMPDEST PUSH2 0x186 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0xF2B JUMP JUMPDEST RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xD DUP2 MSTORE PUSH2 0x216 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x9 SLOAD GT PUSH2 0x49F JUMPI PUSH2 0x227 CALLER PUSH2 0x12E9 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x45B JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP4 SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0x42E JUMPI JUMPDEST POP SELFBALANCE DUP4 PUSH1 0x4 SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 SWAP3 PUSH1 0x84 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x28C63069 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE ADDRESS PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0xC8 PUSH1 0x64 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x413 JUMPI PUSH2 0x2CC SWAP3 PUSH2 0x41F JUMPI JUMPDEST POP SELFBALANCE PUSH2 0x1031 JUMP JUMPDEST SWAP2 PUSH1 0x3 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0x404 JUMPI JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0xC DUP2 MSTORE PUSH2 0x31C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x1031 JUMP JUMPDEST PUSH1 0xA SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0xD DUP2 MSTORE TIMESTAMP PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH1 0xE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP2 SELFBALANCE LT PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x3E7 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x383 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x3BF JUMPI PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x40D SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP3 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x428 SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP5 PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x44D SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x454 JUMPI JUMPDEST PUSH2 0x445 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1139 JUMP JUMPDEST POP DUP4 PUSH2 0x273 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x43B JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072657761726420617661696C61626C6500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5761697420666F7220657869744C696D6974206265666F7265206E6578742077 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x69746864726177 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1BD JUMPI PUSH2 0x540 PUSH1 0x20 SWAP2 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x2 SLOAD PUSH1 0xA DUP2 GT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x9 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x5DC JUMPI SWAP1 JUMPDEST PUSH2 0x585 PUSH2 0x580 DUP4 DUP4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x59D DUP7 DUP3 PUSH2 0xF94 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x5D5 PUSH2 0x5B0 PUSH1 0x1 SWAP4 PUSH2 0xECE JUMP JUMPDEST POP PUSH2 0x5C4 PUSH2 0x5BE DUP7 DUP6 PUSH2 0x1031 JUMP JUMPDEST SWAP2 PUSH2 0x124E JUMP JUMPDEST PUSH2 0x5CE DUP3 DUP10 PUSH2 0x123A JUMP JUMPDEST MSTORE DUP7 PUSH2 0x123A JUMP JUMPDEST POP ADD PUSH2 0x588 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x573 JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1BD JUMPI PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1BD JUMPI PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x77A DUP2 DUP4 LT PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x788 PUSH1 0x2 SLOAD DUP3 GT ISZERO PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x795 PUSH2 0x580 DUP4 DUP4 PUSH2 0x1031 JUMP JUMPDEST SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x59D DUP7 DUP3 PUSH2 0xF94 JUMP JUMPDEST DUP1 PUSH2 0x7BC PUSH2 0x5B0 PUSH1 0x1 SWAP4 PUSH2 0xECE JUMP JUMPDEST POP ADD PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x1 PUSH1 0x4 CALLDATALOAD LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x7E8 PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x10E1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x802 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD CALLVALUE LT ISZERO PUSH2 0x10E1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLVALUE DUP2 SSTORE PUSH2 0x81F PUSH1 0x6 SLOAD CALLVALUE PUSH2 0x103E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xB21 JUMPI JUMPDEST POP PUSH5 0x2540BE400 DUP2 DUP2 DUP2 MUL DIV DUP2 EQ DUP3 ISZERO OR ISZERO PUSH2 0x5DC JUMPI PUSH2 0x875 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x882 DUP3 PUSH2 0xFDE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH2 0x895 PUSH1 0x4 CALLDATALOAD DUP3 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP6 DUP8 MUL DUP3 MSTORE PUSH1 0x80 DUP6 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE TIMESTAMP PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1 PUSH2 0x8F1 SWAP3 ADD PUSH1 0x2 SSTORE PUSH2 0xECE JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0xB0B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP6 DUP5 SLOAD SWAP6 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP9 AND OR DUP7 SSTORE MLOAD SWAP6 PUSH1 0x1 DUP8 LT ISZERO PUSH2 0xAF5 JUMPI PUSH2 0x100 SWAP8 PUSH1 0x7 SWAP8 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x990 PUSH1 0xA SLOAD PUSH2 0x104B JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0xAE6 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLVALUE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0xAC7 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x6E553F65 PUSH1 0xE0 SHL DUP4 MSTORE CALLVALUE PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x413 JUMPI PUSH2 0xAB8 JUMPI JUMPDEST POP PUSH2 0xA66 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x103E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA77 DUP5 PUSH1 0x4 CALLDATALOAD PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE MUL PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x46796FC72779CBABD1EA8B64C35F18F13D4D3D4693526DEB779040B773C311B PUSH1 0xA0 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH2 0xAC1 SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0xADF SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x454 JUMPI PUSH2 0x445 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST POP DUP3 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0xAEF SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP3 PUSH2 0x9CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB4B JUMPI JUMPDEST DUP2 PUSH2 0xB3C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BD JUMPI MLOAD DUP2 PUSH2 0x853 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB2F JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH2 0xB6E PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH2 0xB6E PUSH2 0x105A JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xDA1 JUMPI JUMPDEST POP PUSH5 0x2540BE400 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x5DC JUMPI SWAP1 PUSH1 0x0 DUP5 JUMPDEST PUSH2 0xC6D JUMPI JUMPDEST PUSH1 0xC DUP5 CALLER PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xC5B DUP2 SLOAD PUSH2 0x104B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xC68 PUSH1 0xB SLOAD PUSH2 0x104B JUMP JUMPDEST PUSH1 0xB SSTORE STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD9C JUMPI SWAP1 DUP5 DUP3 PUSH2 0xC85 DUP3 SWAP6 SWAP5 PUSH2 0xECE JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x7 DUP1 SWAP3 ADD SLOAD AND ISZERO DUP1 PUSH2 0xD85 JUMPI JUMPDEST PUSH2 0xCA5 JUMPI JUMPDEST POP ADD SWAP1 SWAP2 SWAP3 PUSH2 0xC3F JUMP JUMPDEST DUP3 PUSH2 0xCAF DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD SWAP1 DUP5 DUP3 GT ISZERO PUSH2 0xD77 JUMPI PUSH2 0xCCF DUP6 PUSH2 0xCC9 DUP2 DUP6 PUSH2 0x1031 JUMP JUMPDEST SWAP4 PUSH2 0x1485 JUMP JUMPDEST SWAP2 PUSH2 0xCEA PUSH1 0x6 PUSH2 0xCDE DUP7 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD PUSH1 0x8 SLOAD SWAP1 PUSH2 0x103E JUMP JUMPDEST TIMESTAMP GT PUSH2 0xD4C JUMPI DUP7 PUSH2 0xCFA DUP6 PUSH2 0xECE JUMP JUMPDEST POP SLOAD AND PUSH1 0x0 MSTORE PUSH1 0xC DUP10 MSTORE JUMPDEST PUSH1 0x4 PUSH2 0xD10 DUP6 PUSH2 0xECE JUMP JUMPDEST POP ADD SSTORE PUSH2 0xD1C DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE DUP4 PUSH1 0x3 PUSH2 0xD34 DUP5 PUSH2 0xECE JUMP JUMPDEST POP ADD SSTORE PUSH2 0xD44 PUSH1 0xB SWAP2 DUP3 SLOAD PUSH2 0x103E JUMP JUMPDEST SWAP1 SSTORE DUP8 PUSH2 0xC9B JUMP JUMPDEST DUP7 PUSH2 0xD56 DUP6 PUSH2 0xECE JUMP JUMPDEST POP SLOAD AND PUSH1 0x0 MSTORE PUSH1 0xC DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD70 DUP5 DUP3 SLOAD PUSH2 0x103E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD05 JUMP JUMPDEST PUSH2 0xCCF DUP6 PUSH2 0xCC9 DUP5 DUP3 PUSH2 0x1031 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0xD91 DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xDC9 JUMPI JUMPDEST PUSH2 0xDB9 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BD JUMPI MLOAD SWAP1 DUP5 PUSH2 0xC22 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xDAF JUMP JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1BD JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1BD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0xE55 PUSH2 0x120 SWAP2 PUSH2 0xECE JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 DUP5 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP8 ADD SLOAD SWAP7 ADD SLOAD AND SWAP6 PUSH2 0xEA6 PUSH1 0x40 MLOAD SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP11 MSTORE PUSH1 0xFF PUSH1 0x20 DUP12 ADD SWAP2 PUSH1 0xA0 SHR AND PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x3 SHL PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 LT ISZERO PUSH2 0xAF5 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP3 MSTORE PUSH2 0xF4A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xFBC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH2 0x120 DUP3 PUSH2 0xFD2 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0xF2B JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3D1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3D1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5DC JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5DC JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5DC JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x106E JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x7 PUSH2 0x107B DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x108C JUMPI PUSH1 0x1 ADD PUSH2 0x1060 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10A7 JUMPI POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x7 PUSH2 0x10B4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD AND ISZERO DUP1 PUSH2 0x10CB JUMPI JUMPDEST PUSH2 0x108C JUMPI PUSH1 0x1 ADD PUSH2 0x1099 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x10D7 DUP3 PUSH2 0xECE JUMP JUMPDEST POP ADD SLOAD TIMESTAMP GT PUSH2 0x10BF JUMP JUMPDEST ISZERO PUSH2 0x10E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642066656520616D6F756E740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO PUSH2 0xAF5 JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1BD JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1BD JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1158 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11B2 DUP3 PUSH2 0xFDE JUMP JUMPDEST DUP2 PUSH2 0x100 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x11F4 DUP3 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x1201 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x100F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1212 PUSH1 0x1F NOT SWAP2 PUSH2 0x118D JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1223 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x122E PUSH2 0x11A5 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1217 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x125B DUP2 PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x100 PUSH1 0xFF PUSH1 0x7 DUP4 SWAP6 PUSH2 0x1283 DUP4 DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP9 MSTORE PUSH1 0xA0 SHR AND PUSH1 0x20 DUP8 ADD PUSH2 0x112D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12D3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 PUSH1 0xC DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP7 KECCAK256 SLOAD ISZERO PUSH2 0x1443 JUMPI PUSH1 0xB SLOAD SWAP4 DUP5 ISZERO PUSH2 0x1400 JUMPI DUP7 MSTORE PUSH1 0xC DUP2 MSTORE DUP2 DUP7 KECCAK256 SLOAD SWAP4 PUSH8 0xDE0B6B3A7640000 SWAP5 DUP6 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x13EC JUMPI SWAP2 PUSH2 0x134B DUP2 SWAP3 PUSH1 0x24 SWAP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP5 PUSH1 0x4 SLOAD AND DUP5 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x13E3 JUMPI POP DUP7 SWAP3 PUSH2 0x13B1 JUMPI JUMPDEST POP POP DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x139D JUMPI PUSH2 0x139A SWAP3 SWAP4 POP DIV DUP1 PUSH1 0x1 SHR SWAP1 PUSH2 0x1031 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13DC JUMPI JUMPDEST PUSH2 0x13C8 DUP2 DUP4 PUSH2 0x100F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13D8 JUMPI MLOAD CODESIZE DUP1 PUSH2 0x1377 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x13BE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726564696374696F6E73206D61646500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 ISZERO PUSH2 0x108C JUMPI DUP2 DUP1 DUP3 GT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x149D SWAP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x5DC JUMPI PUSH2 0x14BB SWAP2 PUSH2 0x12C9 JUMP JUMPDEST DUP1 PUSH2 0x14C6 JUMPI POP PUSH1 0xA SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0x14D4 JUMPI POP PUSH1 0x9 SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 GT PUSH2 0x14E2 JUMPI POP PUSH1 0x8 SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 GT PUSH2 0x14F0 JUMPI POP PUSH1 0x7 SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP2 GT PUSH2 0x14FE JUMPI POP PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x19 DUP2 GT PUSH2 0x150C JUMPI POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH1 0x1E DUP2 GT PUSH2 0x151A JUMPI POP PUSH1 0x4 SWAP1 JUMP JUMPDEST PUSH1 0x23 DUP2 GT PUSH2 0x1528 JUMPI POP PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x28 LT PUSH2 0x1534 JUMPI PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1543 SWAP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 PUSH2 0x149F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xE 0xC2 AND 0xD0 0x29 0xE6 REVERT GAS DUP4 DUP16 BLOBBASEFEE 0xC9 0x2B 0xCD 0xE0 0xC DELEGATECALL 0xF8 0xD5 PUSH12 0x869E4AE2ECA89636031A3E64 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"336:7904:16:-:0;;;;;;;;;-1:-1:-1;336:7904:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;;;:::i;:::-;;4710:11;336:7904;4702:26;;336:7904;;;;4758:18;336:7904;4758:18;;:::i;:::-;336:7904;;:::i;:::-;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;1772:10;336:7904;;1753:18;336:7904;;;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;2812:10;336:7904;;;2799:12;336:7904;;2781:42;336:7904;;;;2781:15;:42;:::i;:::-;2827:9;336:7904;-1:-1:-1;336:7904:16;;2912:27;2812:10;2912:27;:::i;:::-;2954:10;;;336:7904;;;;;;;-1:-1:-1;;;2995:64:16;;-1:-1:-1;;;;;336:7904:16;;;2995:64;;;336:7904;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2995:64:16;;;;;;;;336:7904;3089:21;;336:7904;;;;3115:62;;;;;;336:7904;;;;;;;;;;;;;;;3115:62;;336:7904;3115:62;;336:7904;3097:4;336:7904;;;;3097:4;336:7904;;;;3173:3;336:7904;;;;3115:62;;;;;;;3261:30;3115:62;;;336:7904;3208:21;;3261:30;:::i;:::-;336:7904;3298:7;336:7904;;3298:34;;;;;336:7904;;;;;;;;;;;;;3298:34;;;336:7904;3298:34;;336:7904;3298:34;;;;;;;;336:7904;2812:10;;336:7904;;3442:19;336:7904;;3422:51;336:7904;;;;3422:51;336:7904;3422:51;:::i;:::-;;336:7904;2812:10;336:7904;;3442:19;336:7904;;;;;;;2799:12;336:7904;;2781:15;336:7904;;;;3600:17;336:7904;3567:18;336:7904;;;;;;1616:21:9;;:30;1612:109;;336:7904:16;2812:10;;;;;1750:33:9;;336:7904:16;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;:::i;:::-;;;;;;;;;;1797:8:9;1793:63;;3692:45:16;336:7904;;;;;;2812:10;3692:45;;336:7904;1793:63:9;336:7904:16;;-1:-1:-1;;;1828:17:9;;336:7904:16;;1828:17:9;336:7904:16;;;;;;;;;;;;;;;1612:109:9;336:7904:16;;-1:-1:-1;;;1669:41:9;;3097:4:16;336:7904;1669:41:9;;336:7904:16;;;1669:41:9;3298:34:16;;;;:::i;:::-;;;;;336:7904;;;;;;;;;3115:62;;;;:::i;:::-;;;;2995:64;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;336:7904;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;1012:36;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;4351:11;336:7904;4399:2;4390:11;;4399:2;;;-1:-1:-1;;336:7904:16;;;;;;;4390:29;;4453:32;4470:14;;;;:::i;:::-;4453:32;:::i;:::-;4495:17;;4514:10;;;;;;336:7904;;;;;;;:::i;:::-;;;;4526:3;4557:14;4537:34;4557:14;336:7904;4557:14;;:::i;:::-;4544:9;336:7904;4544:9;;;;:::i;:::-;336:7904;;:::i;:::-;4537:34;;;;:::i;:::-;;;;:::i;:::-;;336:7904;4495:17;;336:7904;;;;;;;;;;;;4390:29;336:7904;4390:29;;;336:7904;;;;;;-1:-1:-1;;336:7904:16;;;;;744:45;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;793:46;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;-1:-1:-1;;;;;373:20:16;336:7904;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;973:35;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;889:43;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;843:42;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;1112:47;336:7904;;;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;1163:53;336:7904;;;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;;;4898:35;4906:9;;;4898:35;:::i;:::-;4938:50;4952:11;336:7904;4946:24;;;4938:50;:::i;:::-;5022:27;5039:9;;;;:::i;5022:27::-;5059:16;;5077:6;;;;;;336:7904;;;;;;;:::i;5085:3::-;5115:14;5096:33;5115:14;336:7904;5115:14;;:::i;5096:33::-;;336:7904;5059:16;;336:7904;;;-1:-1:-1;;336:7904:16;;;;;;;;;;;1867:61;1888:17;336:7904;1875:9;:30;;1867:61;:::i;:::-;1978:10;336:7904;;1959:18;336:7904;;1933:87;336:7904;;;;1875:9;1946:43;;1933:87;:::i;:::-;1978:10;336:7904;;1959:18;336:7904;;;;;1875:9;336:7904;;2074:51;2108:17;336:7904;1875:9;2074:51;:::i;:::-;336:7904;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;;2148:23;;;;;;;;;336:7904;2148:23;;;336:7904;2174:4;;336:7904;;;;;;;;;;;;;2326:36;2344:18;336:7904;2304:15;2326:36;:::i;:::-;336:7904;;;;;;:::i;:::-;1978:10;336:7904;;;2207:173;;;336:7904;;2207:173;;:::i;:::-;336:7904;2207:173;;336:7904;;;;;2207:173;;;336:7904;;;;;;2207:173;;;336:7904;;;2207:173;;;336:7904;;;;2304:15;2207:173;;;336:7904;;2207:173;;336:7904;;2207:173;;;336:7904;2185:11;336:7904;;;;;;;;;;;;2185:11;336:7904;;:::i;:::-;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;;;;2207:173;336:7904;2344:18;336:7904;;;;;2207:173;336:7904;;;;;;;;;;;;;;;;;2185:11;336:7904;;;;;;;;;;;;;2207:173;;;336:7904;1888:17;336:7904;;;;2207:173;;336:7904;2108:17;336:7904;;;;2207:173;;336:7904;;;;;;;;;;;;;;2392:18;;336:7904;2392:18;:::i;:::-;;336:7904;-1:-1:-1;;;;;336:7904:16;;;2415:37;;;;;336:7904;;;;;;;;;;;;2415:37;;1875:9;2415:37;;;;;;;;;336:7904;-1:-1:-1;336:7904:16;;;;;;;-1:-1:-1;;;2457:64:16;;-1:-1:-1;;;;;336:7904:16;;;2457:64;;;336:7904;;;;1875:9;336:7904;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;2457:64;;;;;;;;336:7904;;-1:-1:-1;;;;;336:7904:16;;;2526:44;;;;;336:7904;;;;;;;;;;;;;2526:44;;1875:9;336:7904;2526:44;;336:7904;2564:4;336:7904;;;;2526:44;;;;;;;;336:7904;;2689:36;2344:18;336:7904;2304:15;2689:36;:::i;:::-;336:7904;;;;;;;;;:::i;:::-;;;;;;;;;;;;2304:15;2207:173;336:7904;;;2207:173;336:7904;;;2582:148;2207:173;1978:10;2582:148;;336:7904;2526:44;;;;:::i;:::-;;;;2457:64;;;336:7904;2457:64;336:7904;2457:64;;;;;;;:::i;:::-;;;;;2415:37;;;;:::i;:::-;;;;336:7904;;;;;;;;;;;;;;;;;;;;;;;;2148:23;;;336:7904;2148:23;;336:7904;2148:23;;;;;;336:7904;2148:23;;;:::i;:::-;;;336:7904;;;;;2148:23;;;;;;-1:-1:-1;2148:23:16;;336:7904;;;;;;-1:-1:-1;;336:7904:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;936:33;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;336:7904:16;;;;;-1:-1:-1;;;;;690:20:16;336:7904;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;5854:6;336:7904;;;;-1:-1:-1;;;5854:23:16;;;;-1:-1:-1;;;;;336:7904:16;5854:23;;336:7904;;;;;;;;5854:23;;;;;;;336:7904;5854:23;;;336:7904;5880:4;;336:7904;;;;;;;;;;;;;;;5896:13;336:7904;5896:13;5854:6;;;5891:887;6784:19;6804:10;;336:7904;;;;;;6784:33;336:7904;;6784:33;:::i;:::-;336:7904;;6822:19;;336:7904;6822:19;:::i;:::-;;336:7904;;5935:3;5915:11;336:7904;5911:22;;;;;5957:14;;;;;;;;:::i;:::-;:23;336:7904;5957:23;;;;336:7904;;5956:24;:74;;;5935:3;5946:827;;5935:3;;336:7904;5896:13;;;;;5946:827;6069:14;;;;:::i;:::-;-1:-1:-1;6069:29:16;336:7904;;6131:28;;;;;;6256:43;6168:28;;;;;:::i;:::-;6131:102;6256:43;:::i;:::-;6338:14;:40;:22;:14;;;:::i;:::-;:22;;336:7904;6363:15;336:7904;6338:40;;:::i;:::-;6319:15;:59;6363:15;;6414:14;;;;:::i;:::-;336:7904;;;;;6394:19;336:7904;;6308:288;336:7904;6604:14;;;:::i;:::-;:25;;336:7904;6654:14;;;:::i;:::-;-1:-1:-1;6654:23:16;336:7904;;-1:-1:-1;;336:7904:16;;;;;6691:14;:28;:14;;;:::i;:::-;:28;;336:7904;6740:26;;336:7904;;;6740:26;:::i;:::-;336:7904;;5946:827;;;6308:288;6520:14;;;;:::i;:::-;336:7904;;;;;6500:19;336:7904;;;;;6500:54;336:7904;;;6500:54;:::i;:::-;336:7904;;6308:288;;6131:102;6256:43;6205:28;;;;;:::i;5956:74::-;6008:14;:22;:14;;;:::i;:::-;:22;;336:7904;5989:15;:41;;5956:74;;5911:22;;;5854:23;;;;;;;;;;;;;;;;;:::i;:::-;;;336:7904;;;;;5854:23;;;;;;;;;336:7904;;;;;;-1:-1:-1;;336:7904:16;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;1054:54;336:7904;;;;;;;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;5234:11;336:7904;;;;;;;;;;;;;-1:-1:-1;;336:7904:16;;;;;;653:31;336:7904;653:31;;;;;;336:7904;653:31;;:::i;:::-;336:7904;;;653:31;336:7904;653:31;;336:7904;653:31;;;;336:7904;653:31;;;336:7904;;653:31;;336:7904;653:31;;;;336:7904;653:31;336:7904;653:31;;;;336:7904;653:31;;336:7904;;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:31;336:7904;;;;;;653:31;-1:-1:-1;336:7904:16;;;;;;-1:-1:-1;336:7904:16;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;336:7904:16;;;;;;;:::o;7956:204::-;8048:11;336:7904;8041:1;8044:22;;;;;;8143:12;;8041:1;7956:204;:::o;8068:3::-;336:7904;8084:23;:14;;;:::i;:::-;:23;;336:7904;;8083:24;8079:55;;336:7904;;8029:13;;8079:55;8116:11;;336:7904;8116:11;:::o;5361:435::-;5456:11;336:7904;5449:1;5452:22;;;;;;5703:12;;5449:1;5361:435;:::o;5476:3::-;336:7904;5498:23;:14;;;:::i;:::-;:23;;336:7904;;5497:24;:73;;;5476:3;5487:207;;336:7904;;5437:13;;5497:73;5548:14;:22;:14;;;:::i;:::-;:22;;336:7904;5530:15;:40;5497:73;;336:7904;;;;:::o;:::-;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;336:7904:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;336:7904:16;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;336:7904:16;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;3747:506;;-1:-1:-1;;;;;336:7904:16;;;-1:-1:-1;336:7904:16;;;;;3829:19;336:7904;;;;;;;;3829:29;336:7904;;3895:17;336:7904;3895:21;;;336:7904;;;;3829:19;336:7904;;;;;;3995:4;;336:7904;;;;;;;;;;;;;;;;3966:58;;;;336:7904;3966:58;;:::i;:::-;336:7904;4066:10;336:7904;;;;;;;;;;;4051:61;;4102:4;4066:10;4051:61;;336:7904;4051:61;;;;;;;;;;;;3747:506;336:7904;;;;;;;;;;;;;;;;4197:29;336:7904;;;;;;;4197:29;;:::i;:::-;3747:506;:::o;336:7904::-;-1:-1:-1;;;336:7904:16;;;4066:10;336:7904;;;;4051:61;;;;;;;;;;;;;;;;:::i;:::-;;;336:7904;;;;;4051:61;;;;336:7904;;;;4051:61;;;;;;336:7904;;;;;;;;;-1:-1:-1;;;336:7904:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6851:1100;6972:18;;6968:32;;7059:30;;;;;;;7096;;;:::i;:::-;7059:104;;7218:3;336:7904;;;;;;7218:3;336:7904;;;;;;;7199:39;;;:::i;:::-;7322:25;;;7355:9;7362:2;7355:9;:::o;7318:629::-;7450:1;7426:25;;7450:1;;7459:8;7466:1;7459:8;:::o;7422:525::-;7507:2;7483:26;;7507:2;;7517:8;7524:1;7517:8;:::o;7479:468::-;7565:2;7541:26;;7565:2;;7575:8;7582:1;7575:8;:::o;7537:410::-;7623:2;7599:26;;7623:2;;7633:8;7640:1;7633:8;:::o;7595:352::-;7681:2;7657:26;;7681:2;;7691:8;7450:1;7691:8;:::o;7653:294::-;7739:2;7715:26;;7739:2;;7749:8;7756:1;7749:8;:::o;7711:236::-;7797:2;7773:26;;7797:2;;7807:8;7814:1;7807:8;:::o;7769:178::-;7855:2;-1:-1:-1;7855:2:16;;7872:1;7865:8;:::o;7827:120::-;7898:1;7891:8;:::o;7059:104::-;7133:30;;;;:::i;:::-;7059:104;;"},"gasEstimates":{"creation":{"codeDepositCost":"1100600","executionCost":"infinite","totalCost":"infinite"},"external":{"calculateReward(address)":"infinite","distributionCounter(address)":"2403","exit()":"infinite","exitLimit()":"2382","getPrediction(uint256)":"infinite","getPredictionCount()":"2272","getPredictionFromTo(uint256,uint256)":"infinite","getSubmissionFee()":"2840","getTotalPredictions()":"2470","hasAnyUnresolvedPastEndTime()":"infinite","hasUnresolvedPredictions()":"infinite","last10Predictions()":"infinite","lastWithdraw(address)":"2623","oracle()":"2620","predictionDuration()":"2536","predictions(uint256)":"21563","resolutionLimit()":"2558","resolve()":"infinite","submissionBaseFee()":"2668","submissionStepFee()":"2624","submit(uint8,uint256)":"infinite","totalDistribution()":"2734","totalPredictions()":"2580","userSubmissionFees(address)":"2601","wnative()":"2356","yearnVault()":"2664"},"internal":{"calculateScore(uint256,uint256)":"450"}},"methodIdentifiers":{"calculateReward(address)":"d82e3962","distributionCounter(address)":"037361e9","exit()":"e9fad8ee","exitLimit()":"44ed9f66","getPrediction(uint256)":"fe83bece","getPredictionCount()":"01668096","getPredictionFromTo(uint256,uint256)":"5590cfa9","getSubmissionFee()":"f9be8523","getTotalPredictions()":"5c580061","hasAnyUnresolvedPastEndTime()":"4abf93b7","hasUnresolvedPredictions()":"371d5d02","last10Predictions()":"d1c4e1b4","lastWithdraw(address)":"624d7b72","oracle()":"7dc0d1d0","predictionDuration()":"70246a1e","predictions(uint256)":"004fbbb0","resolutionLimit()":"71d61cd5","resolve()":"2810e1d6","submissionBaseFee()":"cd634792","submissionStepFee()":"80450cde","submit(uint8,uint256)":"4ce93cc8","totalDistribution()":"e75e454e","totalPredictions()":"779bd562","userSubmissionFees(address)":"600bebf5","wnative()":"2cebdeb2","yearnVault()":"9db5df46"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yearnVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Pool.Coin\",\"name\":\"token\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PredictionRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributionCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPrediction\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"internalType\":\"enum Pool.Coin\",\"name\":\"token\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct Pool.Prediction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPredictionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"getPredictionFromTo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"internalType\":\"enum Pool.Coin\",\"name\":\"token\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct Pool.Prediction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubmissionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPredictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasAnyUnresolvedPastEndTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasUnresolvedPredictions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last10Predictions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"internalType\":\"enum Pool.Coin\",\"name\":\"token\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct Pool.Prediction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract Oracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"internalType\":\"enum Pool.Coin\",\"name\":\"token\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolutionLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionStepFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Pool.Coin\",\"name\":\"_token\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_predictedPrice\",\"type\":\"uint256\"}],\"name\":\"submit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPredictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userSubmissionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wnative\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearnVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/community/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/community/Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"../helpers/Oracle.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"../interfaces/IWETH.sol\\\";\\r\\nimport \\\"../interfaces/IVault.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ncontract Pool is ReentrancyGuard {\\r\\n\\tOracle public oracle;\\r\\n\\r\\n\\tenum Coin {\\r\\n\\t\\tMATIC\\r\\n\\t}\\r\\n\\r\\n\\tstruct Prediction {\\r\\n\\t\\taddress predictor;\\r\\n\\t\\tCoin token;\\r\\n\\t\\tuint256 predictedPrice;\\r\\n\\t\\tuint256 actualPrice;\\r\\n\\t\\tuint256 resolvedPrice;\\r\\n\\t\\tuint256 difference;\\r\\n\\t\\tuint256 timestamp;\\r\\n\\t\\tuint256 endTime;\\r\\n\\t\\tbool resolved;\\r\\n\\t}\\r\\n\\r\\n\\tPrediction[] public predictions;\\r\\n\\r\\n\\tIWETH public wnative;\\r\\n\\tIVault public yearnVault;\\r\\n\\r\\n\\tuint256 public submissionBaseFee = 0.01 ether;\\r\\n\\tuint256 public submissionStepFee = 0.001 ether;\\r\\n\\tuint256 public predictionDuration = 1 days;\\r\\n\\tuint256 public resolutionLimit = 10 minutes;\\r\\n\\tuint256 public exitLimit = 7 days;\\r\\n\\tuint256 public totalPredictions = 0;\\r\\n\\tuint256 public totalDistribution = 0;\\r\\n\\r\\n\\tmapping(address => uint256) public distributionCounter;\\r\\n\\tmapping(address => uint256) public lastWithdraw;\\r\\n\\tmapping(address => uint256) public userSubmissionFees;\\r\\n\\r\\n\\tevent PredictionRegistered(\\r\\n\\t\\taddress indexed predictor,\\r\\n\\t\\tCoin token,\\r\\n\\t\\tuint256 predictedPrice,\\r\\n\\t\\tuint256 actualPrice,\\r\\n\\t\\tuint256 timestamp,\\r\\n\\t\\tuint256 endTime\\r\\n\\t);\\r\\n\\tevent RewardWithdrawn(address indexed predictor, uint256 amount);\\r\\n\\r\\n\\tconstructor(\\r\\n\\t\\taddress _oracleAddress,\\r\\n\\t\\taddress _wnative,\\r\\n\\t\\taddress _yearnVault\\r\\n\\t) ReentrancyGuard() {\\r\\n\\t\\toracle = Oracle(_oracleAddress);\\r\\n\\t\\twnative = IWETH(_wnative);\\r\\n\\t\\tyearnVault = IVault(_yearnVault);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getSubmissionFee() public view returns (uint256) {\\r\\n\\t\\treturn userSubmissionFees[msg.sender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction submit(Coin _token, uint256 _predictedPrice) public payable {\\r\\n\\t\\trequire(msg.value >= submissionBaseFee, \\\"Invalid fee amount\\\");\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tmsg.value >= userSubmissionFees[msg.sender],\\r\\n\\t\\t\\t\\\"Invalid fee amount\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tuserSubmissionFees[msg.sender] = msg.value;\\r\\n\\t\\tuserSubmissionFees[msg.sender] += submissionStepFee;\\r\\n\\r\\n\\t\\tuint256 price = oracle.getLatestPrice() * 1e10;\\r\\n\\r\\n\\t\\tpredictions.push(\\r\\n\\t\\t\\tPrediction(\\r\\n\\t\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\t\\t_token,\\r\\n\\t\\t\\t\\t_predictedPrice,\\r\\n\\t\\t\\t\\tprice,\\r\\n\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\tblock.timestamp,\\r\\n\\t\\t\\t\\tblock.timestamp + predictionDuration,\\r\\n\\t\\t\\t\\tfalse\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\ttotalPredictions++;\\r\\n\\t\\twnative.deposit{ value: msg.value }();\\r\\n\\t\\tIERC20(address(wnative)).approve(address(yearnVault), msg.value);\\r\\n\\t\\tyearnVault.deposit(msg.value, address(this));\\r\\n\\r\\n\\t\\temit PredictionRegistered(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\t_token,\\r\\n\\t\\t\\t_predictedPrice,\\r\\n\\t\\t\\tprice,\\r\\n\\t\\t\\tblock.timestamp,\\r\\n\\t\\t\\tblock.timestamp + predictionDuration\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction exit() public {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tblock.timestamp - lastWithdraw[msg.sender] >= exitLimit,\\r\\n\\t\\t\\t\\\"Wait for exitLimit before next withdraw\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tuint256 reward = calculateReward(msg.sender);\\r\\n\\r\\n\\t\\trequire(reward > 0, \\\"No reward available\\\");\\r\\n\\r\\n\\t\\tIERC20(address(yearnVault)).approve(address(yearnVault), reward);\\r\\n\\r\\n\\t\\tuint256 ctxBalanceB4 = address(this).balance;\\r\\n\\t\\tyearnVault.withdraw(reward, address(this), address(this), 200);\\r\\n\\t\\tuint256 ctxBalanceAfter = address(this).balance;\\r\\n\\t\\tuint256 rewardToTransfer = ctxBalanceAfter - ctxBalanceB4;\\r\\n\\r\\n\\t\\twnative.withdraw(rewardToTransfer);\\r\\n\\r\\n\\t\\t// Aggiornamento dello stato prima della trasferimento per prevenire reentrancy\\r\\n\\t\\ttotalPredictions -= distributionCounter[msg.sender];\\r\\n\\t\\tdistributionCounter[msg.sender] = 0;\\r\\n\\t\\tlastWithdraw[msg.sender] = block.timestamp;\\r\\n\\r\\n\\t\\tuserSubmissionFees[msg.sender] = submissionBaseFee;\\r\\n\\r\\n\\t\\tAddress.sendValue(payable(msg.sender), rewardToTransfer);\\r\\n\\r\\n\\t\\temit RewardWithdrawn(msg.sender, rewardToTransfer);\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateReward(address user) public view returns (uint256) {\\r\\n\\t\\trequire(distributionCounter[user] > 0, \\\"No predictions made\\\");\\r\\n\\t\\trequire(totalDistribution > 0, \\\"No rewards available\\\");\\r\\n\\t\\tuint256 userShare = (distributionCounter[user] * 1e18) /\\r\\n\\t\\t\\ttotalDistribution;\\r\\n\\t\\tuint256 yeanBalance = IERC20(address(yearnVault)).balanceOf(\\r\\n\\t\\t\\taddress(this)\\r\\n\\t\\t);\\r\\n\\t\\tuint256 userBalance = (yeanBalance * userShare) / 1e18;\\r\\n\\t\\tuint256 userReward = userBalance - userBalance / 2;\\r\\n\\t\\treturn userReward;\\r\\n\\t}\\r\\n\\r\\n\\tfunction last10Predictions() public view returns (Prediction[] memory) {\\r\\n\\t\\tuint256 length = predictions.length;\\r\\n\\t\\tuint256 start = length > 10 ? length - 10 : 0;\\r\\n\\t\\tPrediction[] memory result = new Prediction[](length - start);\\r\\n\\t\\tfor (uint256 i = start; i < length; i++) {\\r\\n\\t\\t\\tresult[i - start] = predictions[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn result;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPrediction(\\r\\n\\t\\tuint256 index\\r\\n\\t) public view returns (Prediction memory) {\\r\\n\\t\\trequire(index < predictions.length, \\\"Invalid index\\\");\\r\\n\\t\\treturn predictions[index];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPredictionFromTo(\\r\\n\\t\\tuint256 from,\\r\\n\\t\\tuint256 to\\r\\n\\t) public view returns (Prediction[] memory) {\\r\\n\\t\\trequire(from < to, \\\"Invalid range\\\");\\r\\n\\t\\trequire(to <= predictions.length, \\\"Invalid range\\\");\\r\\n\\t\\tPrediction[] memory result = new Prediction[](to - from);\\r\\n\\t\\tfor (uint256 i = from; i < to; i++) {\\r\\n\\t\\t\\tresult[i - from] = predictions[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn result;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPredictionCount() public view returns (uint256) {\\r\\n\\t\\treturn predictions.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalPredictions() public view returns (uint256) {\\r\\n\\t\\treturn totalPredictions;\\r\\n\\t}\\r\\n\\r\\n\\tfunction hasAnyUnresolvedPastEndTime() public view returns (bool) {\\r\\n\\t\\tfor (uint256 i = 0; i < predictions.length; i++) {\\r\\n\\t\\t\\tif (\\r\\n\\t\\t\\t\\t!predictions[i].resolved &&\\r\\n\\t\\t\\t\\tblock.timestamp > predictions[i].endTime\\r\\n\\t\\t\\t) {\\r\\n\\t\\t\\t\\treturn true; // Restituisce true alla prima occorrenza di una previsione non risolta superata da endTime\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false; // Se nessuna previsione non risolta ha superato endTime, restituisce false\\r\\n\\t}\\r\\n\\r\\n\\tfunction resolve() public {\\r\\n\\t\\tuint256 latestPrice = oracle.getLatestPrice() * 1e10;\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < predictions.length; i++) {\\r\\n\\t\\t\\tif (\\r\\n\\t\\t\\t\\t!predictions[i].resolved &&\\r\\n\\t\\t\\t\\tblock.timestamp >= predictions[i].endTime\\r\\n\\t\\t\\t) {\\r\\n\\t\\t\\t\\tuint256 predictedPrice = predictions[i].predictedPrice;\\r\\n\\t\\t\\t\\tuint256 priceDifference = predictedPrice > latestPrice\\r\\n\\t\\t\\t\\t\\t? predictedPrice - latestPrice\\r\\n\\t\\t\\t\\t\\t: latestPrice - predictedPrice;\\r\\n\\t\\t\\t\\tuint256 score = calculateScore(predictedPrice, latestPrice);\\r\\n\\r\\n\\t\\t\\t\\tif (\\r\\n\\t\\t\\t\\t\\tblock.timestamp <= predictions[i].endTime + resolutionLimit\\r\\n\\t\\t\\t\\t) {\\r\\n\\t\\t\\t\\t\\tdistributionCounter[predictions[i].predictor] += 0; // Assumi che esista questo campo\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tdistributionCounter[predictions[i].predictor] += score; // Assumi che esista questo campo\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tpredictions[i].difference = priceDifference;\\r\\n\\t\\t\\t\\tpredictions[i].resolved = true;\\r\\n\\t\\t\\t\\tpredictions[i].resolvedPrice = latestPrice;\\r\\n\\t\\t\\t\\ttotalDistribution += score;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdistributionCounter[msg.sender]++;\\r\\n\\t\\ttotalDistribution++;\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateScore(\\r\\n\\t\\tuint256 predictedPrice,\\r\\n\\t\\tuint256 resolvedPrice\\r\\n\\t) private pure returns (uint256) {\\r\\n\\t\\tif (resolvedPrice == 0) return 1; // Evita divisione per zero\\r\\n\\t\\tuint256 priceDifference = predictedPrice > resolvedPrice\\r\\n\\t\\t\\t? predictedPrice - resolvedPrice\\r\\n\\t\\t\\t: resolvedPrice - predictedPrice;\\r\\n\\t\\tuint256 differencePercentage = (priceDifference * 100) / resolvedPrice;\\r\\n\\r\\n\\t\\t// Il punteggio diminuisce all'aumentare della differenza percentuale\\r\\n\\t\\tif (differencePercentage == 0) {\\r\\n\\t\\t\\treturn 10; // Puntaeggio massimo per previsione perfetta\\r\\n\\t\\t} else if (differencePercentage <= 5) {\\r\\n\\t\\t\\treturn 9;\\r\\n\\t\\t} else if (differencePercentage <= 10) {\\r\\n\\t\\t\\treturn 8;\\r\\n\\t\\t} else if (differencePercentage <= 15) {\\r\\n\\t\\t\\treturn 7;\\r\\n\\t\\t} else if (differencePercentage <= 20) {\\r\\n\\t\\t\\treturn 6;\\r\\n\\t\\t} else if (differencePercentage <= 25) {\\r\\n\\t\\t\\treturn 5;\\r\\n\\t\\t} else if (differencePercentage <= 30) {\\r\\n\\t\\t\\treturn 4;\\r\\n\\t\\t} else if (differencePercentage <= 35) {\\r\\n\\t\\t\\treturn 3;\\r\\n\\t\\t} else if (differencePercentage <= 40) {\\r\\n\\t\\t\\treturn 2;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn 1; // Punteggio minimo per grande differenza\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction hasUnresolvedPredictions() public view returns (bool) {\\r\\n\\t\\tfor (uint256 i = 0; i < predictions.length; i++) {\\r\\n\\t\\t\\tif (!predictions[i].resolved) {\\r\\n\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t}\\r\\n\\r\\n\\t// Permetti al contratto di ricevere ETH\\r\\n\\treceive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0xbda8b60119e446a7967f2bfcabd61d5d54627a73db0db5a8353ee6173b0c749a\",\"license\":\"MIT\"},\"contracts/helpers/Oracle.sol\":{\"content\":\"import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract Oracle {\\r\\n\\tAggregatorV3Interface internal priceFeed;\\r\\n\\r\\n\\tconstructor(address _priceFeedAddress) {\\r\\n\\t\\tpriceFeed = AggregatorV3Interface(_priceFeedAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getLatestPrice() public view returns (uint256) {\\r\\n\\t\\t(, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n\\t\\t// Assumiamo che il prezzo sia sempre positivo\\r\\n\\t\\treturn uint256(price); // Adatta questa moltiplicazione in base alla tua necessit\\u00e0\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x3d71c8afb17be59e107fc8f69d49dc6bffef1ad3570441adebc01f187337135b\"},\"contracts/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IVault {\\r\\n\\tfunction token() external view returns (address);\\r\\n\\r\\n\\tfunction underlying() external view returns (address);\\r\\n\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\tfunction controller() external view returns (address);\\r\\n\\r\\n\\tfunction governance() external view returns (address);\\r\\n\\r\\n\\tfunction getPricePerFullShare() external view returns (uint256);\\r\\n\\r\\n\\tfunction deposit(uint256, address) external;\\r\\n\\r\\n\\tfunction depositAll() external;\\r\\n\\r\\n\\tfunction withdraw(uint256, address, address, uint256) external;\\r\\n\\r\\n\\tfunction withdrawAll() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x05b2afc937219e9aad25bf263f5b5da8394dac5710ba1dd491b3b4fa47334067\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IWETH {\\r\\n\\tfunction deposit() external payable;\\r\\n\\r\\n\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n\\tfunction withdraw(uint) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5b82f6fc97f0d5252790b4251cec7311b0f159f15014d156c27a44e34c89ea21\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1573,"contract":"contracts/community/Pool.sol:Pool","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":2454,"contract":"contracts/community/Pool.sol:Pool","label":"oracle","offset":0,"slot":"1","type":"t_contract(Oracle)7912"},{"astId":2480,"contract":"contracts/community/Pool.sol:Pool","label":"predictions","offset":0,"slot":"2","type":"t_array(t_struct(Prediction)2476_storage)dyn_storage"},{"astId":2483,"contract":"contracts/community/Pool.sol:Pool","label":"wnative","offset":0,"slot":"3","type":"t_contract(IWETH)7999"},{"astId":2486,"contract":"contracts/community/Pool.sol:Pool","label":"yearnVault","offset":0,"slot":"4","type":"t_contract(IVault)7979"},{"astId":2489,"contract":"contracts/community/Pool.sol:Pool","label":"submissionBaseFee","offset":0,"slot":"5","type":"t_uint256"},{"astId":2492,"contract":"contracts/community/Pool.sol:Pool","label":"submissionStepFee","offset":0,"slot":"6","type":"t_uint256"},{"astId":2495,"contract":"contracts/community/Pool.sol:Pool","label":"predictionDuration","offset":0,"slot":"7","type":"t_uint256"},{"astId":2498,"contract":"contracts/community/Pool.sol:Pool","label":"resolutionLimit","offset":0,"slot":"8","type":"t_uint256"},{"astId":2501,"contract":"contracts/community/Pool.sol:Pool","label":"exitLimit","offset":0,"slot":"9","type":"t_uint256"},{"astId":2504,"contract":"contracts/community/Pool.sol:Pool","label":"totalPredictions","offset":0,"slot":"10","type":"t_uint256"},{"astId":2507,"contract":"contracts/community/Pool.sol:Pool","label":"totalDistribution","offset":0,"slot":"11","type":"t_uint256"},{"astId":2511,"contract":"contracts/community/Pool.sol:Pool","label":"distributionCounter","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"},{"astId":2515,"contract":"contracts/community/Pool.sol:Pool","label":"lastWithdraw","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"},{"astId":2519,"contract":"contracts/community/Pool.sol:Pool","label":"userSubmissionFees","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Prediction)2476_storage)dyn_storage":{"base":"t_struct(Prediction)2476_storage","encoding":"dynamic_array","label":"struct Pool.Prediction[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IVault)7979":{"encoding":"inplace","label":"contract IVault","numberOfBytes":"20"},"t_contract(IWETH)7999":{"encoding":"inplace","label":"contract IWETH","numberOfBytes":"20"},"t_contract(Oracle)7912":{"encoding":"inplace","label":"contract Oracle","numberOfBytes":"20"},"t_enum(Coin)2456":{"encoding":"inplace","label":"enum Pool.Coin","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Prediction)2476_storage":{"encoding":"inplace","label":"struct Pool.Prediction","members":[{"astId":2458,"contract":"contracts/community/Pool.sol:Pool","label":"predictor","offset":0,"slot":"0","type":"t_address"},{"astId":2461,"contract":"contracts/community/Pool.sol:Pool","label":"token","offset":20,"slot":"0","type":"t_enum(Coin)2456"},{"astId":2463,"contract":"contracts/community/Pool.sol:Pool","label":"predictedPrice","offset":0,"slot":"1","type":"t_uint256"},{"astId":2465,"contract":"contracts/community/Pool.sol:Pool","label":"actualPrice","offset":0,"slot":"2","type":"t_uint256"},{"astId":2467,"contract":"contracts/community/Pool.sol:Pool","label":"resolvedPrice","offset":0,"slot":"3","type":"t_uint256"},{"astId":2469,"contract":"contracts/community/Pool.sol:Pool","label":"difference","offset":0,"slot":"4","type":"t_uint256"},{"astId":2471,"contract":"contracts/community/Pool.sol:Pool","label":"timestamp","offset":0,"slot":"5","type":"t_uint256"},{"astId":2473,"contract":"contracts/community/Pool.sol:Pool","label":"endTime","offset":0,"slot":"6","type":"t_uint256"},{"astId":2475,"contract":"contracts/community/Pool.sol:Pool","label":"resolved","offset":0,"slot":"7","type":"t_bool"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/community/Tournament.sol":{"Tournament":{"abi":[{"inputs":[{"internalType":"address","name":"_oracleAddress","type":"address"},{"internalType":"uint256","name":"_maxParticipants","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":true,"internalType":"address","name":"predictor","type":"address"},{"indexed":false,"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PredictionSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"winners","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"prizeAmounts","type":"uint256[]"}],"name":"TournamentResolved","type":"event"},{"inputs":[],"name":"currentRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentPricePool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentRoundPartecipants","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastWinners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestRoundPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaxPartecipants","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNextVerificationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPartecipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPredictions","outputs":[{"components":[{"internalType":"uint256","name":"round","type":"uint256"},{"internalType":"address","name":"predictor","type":"address"},{"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Tournament.Prediction[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRoundOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keeperPercentageFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRoundPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxParticipants","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract Oracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"predictions","outputs":[{"internalType":"uint256","name":"round","type":"uint256"},{"internalType":"address","name":"predictor","type":"address"},{"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeedAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prizePool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resolutionEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resolveTournament","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"roundWinners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"submissionEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictedPrice","type":"uint256"}],"name":"submitPrediction","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"verificationEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verificationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"errors":{"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460b957601f61164038819003918201601f19168301916001600160401b0383118484101760be57808492604094855283398101031260b95780516001600160a01b038116919082900360b9576020015160016000556064600255617080600355620151809182600455610e106005556000600c5560018060a01b03196001541617600155600655420180421160a35760095560405161156b90816100d58239f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561002e575b5050361561001d57600080fd5b61002934600b54610a0e565b600b55005b600090813560e01c9081624fbbb014610857578162614418146107fa578163149c6dac1461083857816324924bf714610819578163308d19ab14610819578163344c8e37146107fa578163532eaca0146107db57816358f6b9c5146105265781635d21b255146107bc578163719ce73e146107bc57816376a4956c146107755781637dc0d1d01461074d57816385d62b45146105455781638a19c8bc146103c05781638dd78d671461052657816393bc976e14610507578163956909361461048457816398d5fdca146103df578163a32bf597146103c0578163bb9b110b1461037d578163c78c3a8314610269578163e0abca0b14610241578163e2f1dcc614610222578163ef949f4a146101e157508063f985ad93146101be5763f9ceb3ea0361001057346101bb57806003193601126101bb5760085461016f81610a33565b915b8181106101915783516020808252819061018d90820186610906565b0390f35b806001600160a01b0360016101a681946108b6565b500154166101b48286610ac7565b5201610171565b80fd5b5090346101dd57816003193601126101dd576020906005549051908152f35b5080fd5b9050823461021e578260031936011261021e57600283541461021157826002815561020a610aec565b6001815580f35b51633ee5aeb560e01b8152fd5b8280fd5b8284346101dd57816003193601126101dd576020906008549051908152f35b8284346101dd57816003193601126101dd576020906001600160a01b03600a54169051908152f35b9050346101dd57816003193601126101dd576008549161028883610a1b565b610294855191826109ec565b8381526008825260209384820193837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3865b84831061032e575050505050845193808501918186525180925285850193925b8281106102f35785850386f35b835180518652808301516001600160a01b031686840152878101518887015260609081015190860152608090940193928101926001016102e6565b83896001928c9b98999b5161034281610966565b855481526001600160a01b038587015416838201528d60028701549082015260038601546060820152815201920192019190979594976102c6565b8284346101dd57816003193601126101dd5760095461383f198101929083116103ad576020838351904211158152f35b634e487b7160e01b815260118452602490fd5b8284346101dd57816003193601126101dd57602090600c549051908152f35b9050823461021e578260031936011261021e57819260206001600160a01b0360015416835194858092638e15f47360e01b82525afa928315610478578193610444575b506402540be400928381029381850414901517156103ad576020838351908152f35b9092506020813d602011610470575b81610460602093836109ec565b8101031261021e57519184610422565b3d9150610453565b509051903d90823e3d90fd5b5050346101bb57806003193601126101bb578151918291600f54808552602080950194600f835260008051602061151683398151915292905b8282106104e75761018d86866104d5828b03836109ec565b51918291602083526020830190610906565b83546001600160a01b0316875295860195600193840193909101906104bd565b8391503461021e578260031936011261021e5760209250549051908152f35b8284346101dd57816003193601126101dd576020906007549051908152f35b826020853660031901821361021e578335662386f26fc10000341061070a576008546006548110156106c75761058060095460035490610943565b421161066f57600c549083519161059683610966565b8252848201338152848301908482526060840192348452600160401b81101561065c578060016105c992016008556108b6565b94909461064a579060039392915185556001600160a01b03600186019151166001600160a01b03198254161790555160028401555191015561060d34600b54610a0e565b600b55600c5492825193845283015234908201527f6508c7e3d28df907ed24f614c03b61c067dbc85e84a98bb8f78ffb1c8a711e5560603392a280f35b634e487b7160e01b8952888a52602489fd5b634e487b7160e01b895260418a52602489fd5b825162461bcd60e51b8152808701859052602c60248201527f5375626d697373696f6e7320636c6f736564203420686f757273206265666f7260448201526b6520726f756e6420656e647360a01b6064820152608490fd5b825162461bcd60e51b8152808701859052601960248201527f5061727469636970616e74206c696d69742072656163686564000000000000006044820152606490fd5b815162461bcd60e51b8152808601849052601760248201527f456e7472792066656520697320302e30312065746865720000000000000000006044820152606490fd5b8284346101dd57816003193601126101dd576020906001600160a01b03600154169051908152f35b8391503461021e57602036600319011261021e5735600f5481101561021e576001600160a01b0390600f602094526000805160206115168339815191520154169051908152f35b8284346101dd57816003193601126101dd57602090600b549051908152f35b8284346101dd57816003193601126101dd576020906003549051908152f35b8284346101dd57816003193601126101dd576020906009549051908152f35b8284346101dd57816003193601126101dd576020906006549051908152f35b8284346101dd57816003193601126101dd576020906002549051908152f35b8391503461021e57602036600319011261021e5735916008548310156101bb57506108836080926108b6565b50908154916001600160a01b03600182015416916003600283015492015492815194855260208501528301526060820152f35b6008548110156108f057600860005260021b7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110610926575050505090565b83516001600160a01b031685529381019392810192600101610918565b9190820391821161095057565b634e487b7160e01b600052601160045260246000fd5b6080810190811067ffffffffffffffff82111761098257604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761098257604052565b6020810190811067ffffffffffffffff82111761098257604052565b6040810190811067ffffffffffffffff82111761098257604052565b90601f8019910116810190811067ffffffffffffffff82111761098257604052565b9190820180921161095057565b67ffffffffffffffff81116109825760051b60200190565b90610a3d82610a1b565b610a4a60405191826109ec565b8281528092610a5b601f1991610a1b565b0190602036910137565b908152610a7f602092606060208401526060830190610906565b9060408183039101526020808451928381520193019160005b828110610aa6575050505090565b835185529381019392810192600101610a98565b8051156108f05760200190565b80518210156108f05760209160051b010190565b9060038110156108f05760051b0190565b60095480421061135b57600554610b0291610a0e565b4210156112be5760049060206001600160a01b036001541660405193848092638e15f47360e01b82525afa9182156112b25760009261127e575b506402540be40091808381020483148115171561095057828102600755600854156111cc57600854600181146110525750600260085414610ed5579160405190610b8582610998565b60005b60608110610ea557506000938491600854915b828410610d665750505050600b546002549081810291818304148115171561095057610bcf612710610bd893048092610943565b600b55336113aa565b600b54610be484610a33565b91610bee85610a33565b9460005b818110610cde575050505080519267ffffffffffffffff841161098257600160401b841161098257600f5484600f55808510610caf575b506020820193600f60005260005b818110610c845750507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f929350610c77600c549160405193849384610a65565b0390a1610c8261144a565b565b60019060206001600160a01b0388511697019681600080516020611516833981519152015501610c37565b8460008051602061151683398151915291820191015b818110610cd25750610c29565b60008155600101610cc5565b6001600160a01b036001610cfc610cf58487610adb565b51516108b6565b50015416610d0a8287610ac7565b528115610d5057600190828504610d21828a610ac7565b52610d4a6001600160a01b03610d378389610ac7565b5116610d43838b610ac7565b51906113aa565b01610bf2565b634e487b7160e01b600052601260045260246000fd5b90919295610d73876108b6565b50600201548284021015610e8757610d9b610d8d886108b6565b506002858502910154610943565b6003821015610def5760405190610db182610998565b888252602082015260016040820152610dca8287610adb565b52610dd58186610adb565b506000198114610950576001809101965b01929190610b9b565b600097919760208751015160015b60038110610e5157509082916001949310610e1a575b5050610de6565b604051610e4992610e2a82610998565b8482526020820152846040820152610e42828a610adb565b5287610adb565b503880610e13565b816020610e5e838c610adb565b51015111610e6f575b600101610dfd565b9150506020610e7e8289610adb565b51015181610e67565b610ea06002610e95896108b6565b500154848402610943565b610d9b565b602090604095929551610eb781610998565b60008152600083820152600060408201528185015201939093610b88565b509050604051610ee481610998565b6002815260208101906040368337604051610efe81610998565b60028152604036602083013781600b5460011c60005b60028110610ff65750507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f91610f53600c549160405193849384610a65565b0390a1519067ffffffffffffffff821161098257600160401b821161098257600f5482600f55808310610fc7575b50600f60005260005b828110610f9c57505050610c8261144a565b60019060206001600160a01b0384511693019281600080516020611516833981519152015501610f8a565b8260008051602061151683398151915291820191015b818110610fea5750610f81565b60008155600101610fdd565b60019192506001600160a01b038261100d836108b6565b5001541661101b8287610ac7565b52826110278286610ac7565b526110496001600160a01b0361103d8388610ac7565b5116610d438387610ac7565b01908391610f14565b91925050604051611062816109d0565b60018152602081019160203684376040519061107d826109d0565b6001825260203681840137156108f057817f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f9160086000526001600160a01b037ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee454166110e983610aba565b52600b546110f682610aba565b526111166001600160a01b0361110b84610aba565b5116610d4383610aba565b611129600c549160405193849384610a65565b0390a1519067ffffffffffffffff821161098257600160401b821161098257600f5482600f5580831061119d575b50600f60005260005b82811061117257505050610c8261144a565b60019060206001600160a01b0384511693019281600080516020611516833981519152015501611160565b8260008051602061151683398151915291820191015b8181106111c05750611157565b600081556001016111b3565b5090507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f600c5460405190611200826109b4565b60008252611223604051611213816109b4565b6000815260405193849384610a65565b0390a16000604051611234816109b4565b52600f546000600f5580611251575b50600f600052610c8261144a565b600080516020611516833981519152908101905b8181106112725750611243565b60008155600101611265565b90916020823d6020116112aa575b81611299602093836109ec565b810103126101bb5750519038610b3c565b3d915061128c565b6040513d6000823e3d90fd5b60005b60085481101561130157806112fb6001600160a01b0360016112e381956108b6565b5001541660036112f2846108b6565b500154906113aa565b016112c1565b507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f600c5460405190611333826109b4565b60008252610c77604051611346816109b4565b60008152600036813760405193849384610a65565b60405162461bcd60e51b815260206004820152602160248201527f546f75726e616d656e742063616e6e6f74206265207265736f6c7665642079656044820152601d60fa1b6064820152608490fd5b814710611432576001600160a01b0390600080809481948294165af1903d1561142c573d9067ffffffffffffffff821161141857604051916113f6601f8201601f1916602001846109ec565b825260203d92013e5b1561140657565b604051630a12f52160e11b8152600490fd5b634e487b7160e01b81526041600452602490fd5b506113ff565b60405163cd78605960e01b8152306004820152602490fd5b6008546000908160085580611497575b5080600b5561146b60045442610a0e565b600955600c5490600182018092116114835750600c55565b634e487b7160e01b81526011600452602490fd5b60026001600160fe1b038216820361150157600883527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39160021b8201915b8281106114e457505061145a565b8084600492558460018201558483820155846003820155016114d6565b634e487b7160e01b83526011600452602483fdfe8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a264697066735822122047a835bfa1246535da09fc1f47b0703279fd07a2cd5fac71bea7f5d27697042164736f6c63430008190033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xB9 JUMPI PUSH1 0x1F PUSH2 0x1640 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xBE JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xB9 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0xB9 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH2 0x7080 PUSH1 0x3 SSTORE PUSH3 0x15180 SWAP2 DUP3 PUSH1 0x4 SSTORE PUSH2 0xE10 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x6 SSTORE TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH1 0xA3 JUMPI PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x156B SWAP1 DUP2 PUSH2 0xD5 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x2E JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29 CALLVALUE PUSH1 0xB SLOAD PUSH2 0xA0E JUMP JUMPDEST PUSH1 0xB SSTORE STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x4FBBB0 EQ PUSH2 0x857 JUMPI DUP2 PUSH3 0x614418 EQ PUSH2 0x7FA JUMPI DUP2 PUSH4 0x149C6DAC EQ PUSH2 0x838 JUMPI DUP2 PUSH4 0x24924BF7 EQ PUSH2 0x819 JUMPI DUP2 PUSH4 0x308D19AB EQ PUSH2 0x819 JUMPI DUP2 PUSH4 0x344C8E37 EQ PUSH2 0x7FA JUMPI DUP2 PUSH4 0x532EACA0 EQ PUSH2 0x7DB JUMPI DUP2 PUSH4 0x58F6B9C5 EQ PUSH2 0x526 JUMPI DUP2 PUSH4 0x5D21B255 EQ PUSH2 0x7BC JUMPI DUP2 PUSH4 0x719CE73E EQ PUSH2 0x7BC JUMPI DUP2 PUSH4 0x76A4956C EQ PUSH2 0x775 JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x74D JUMPI DUP2 PUSH4 0x85D62B45 EQ PUSH2 0x545 JUMPI DUP2 PUSH4 0x8A19C8BC EQ PUSH2 0x3C0 JUMPI DUP2 PUSH4 0x8DD78D67 EQ PUSH2 0x526 JUMPI DUP2 PUSH4 0x93BC976E EQ PUSH2 0x507 JUMPI DUP2 PUSH4 0x95690936 EQ PUSH2 0x484 JUMPI DUP2 PUSH4 0x98D5FDCA EQ PUSH2 0x3DF JUMPI DUP2 PUSH4 0xA32BF597 EQ PUSH2 0x3C0 JUMPI DUP2 PUSH4 0xBB9B110B EQ PUSH2 0x37D JUMPI DUP2 PUSH4 0xC78C3A83 EQ PUSH2 0x269 JUMPI DUP2 PUSH4 0xE0ABCA0B EQ PUSH2 0x241 JUMPI DUP2 PUSH4 0xE2F1DCC6 EQ PUSH2 0x222 JUMPI DUP2 PUSH4 0xEF949F4A EQ PUSH2 0x1E1 JUMPI POP DUP1 PUSH4 0xF985AD93 EQ PUSH2 0x1BE JUMPI PUSH4 0xF9CEB3EA SUB PUSH2 0x10 JUMPI CALLVALUE PUSH2 0x1BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BB JUMPI PUSH1 0x8 SLOAD PUSH2 0x16F DUP2 PUSH2 0xA33 JUMP JUMPDEST SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x191 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x18D SWAP1 DUP3 ADD DUP7 PUSH2 0x906 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH2 0x1A6 DUP2 SWAP5 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x1B4 DUP3 DUP7 PUSH2 0xAC7 JUMP JUMPDEST MSTORE ADD PUSH2 0x171 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH1 0x2 DUP4 SLOAD EQ PUSH2 0x211 JUMPI DUP3 PUSH1 0x2 DUP2 SSTORE PUSH2 0x20A PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x8 SLOAD SWAP2 PUSH2 0x288 DUP4 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x294 DUP6 MLOAD SWAP2 DUP3 PUSH2 0x9EC JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP3 ADD SWAP4 DUP4 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP7 JUMPDEST DUP5 DUP4 LT PUSH2 0x32E JUMPI POP POP POP POP POP DUP5 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE DUP6 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F3 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP7 MSTORE DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 ADD MSTORE DUP8 DUP2 ADD MLOAD DUP9 DUP8 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2E6 JUMP JUMPDEST DUP4 DUP10 PUSH1 0x1 SWAP3 DUP13 SWAP12 SWAP9 SWAP10 SWAP12 MLOAD PUSH2 0x342 DUP2 PUSH2 0x966 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP8 ADD SLOAD AND DUP4 DUP3 ADD MSTORE DUP14 PUSH1 0x2 DUP8 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP8 SWAP6 SWAP5 SWAP8 PUSH2 0x2C6 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x9 SLOAD PUSH2 0x383F NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x3AD JUMPI PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 TIMESTAMP GT ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI DUP2 SWAP3 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND DUP4 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x478 JUMPI DUP2 SWAP4 PUSH2 0x444 JUMPI JUMPDEST POP PUSH5 0x2540BE400 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x3AD JUMPI PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x470 JUMPI JUMPDEST DUP2 PUSH2 0x460 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x21E JUMPI MLOAD SWAP2 DUP5 PUSH2 0x422 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x453 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BB JUMPI DUP2 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xF SLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH1 0xF DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4E7 JUMPI PUSH2 0x18D DUP7 DUP7 PUSH2 0x4D5 DUP3 DUP12 SUB DUP4 PUSH2 0x9EC JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4BD JUMP JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 PUSH1 0x20 DUP6 CALLDATASIZE PUSH1 0x3 NOT ADD DUP3 SGT PUSH2 0x21E JUMPI DUP4 CALLDATALOAD PUSH7 0x2386F26FC10000 CALLVALUE LT PUSH2 0x70A JUMPI PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x580 PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD SWAP1 PUSH2 0x943 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x66F JUMPI PUSH1 0xC SLOAD SWAP1 DUP4 MLOAD SWAP2 PUSH2 0x596 DUP4 PUSH2 0x966 JUMP JUMPDEST DUP3 MSTORE DUP5 DUP3 ADD CALLER DUP2 MSTORE DUP5 DUP4 ADD SWAP1 DUP5 DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 CALLVALUE DUP5 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP1 PUSH1 0x1 PUSH2 0x5C9 SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x64A JUMPI SWAP1 PUSH1 0x3 SWAP4 SWAP3 SWAP2 MLOAD DUP6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP7 ADD SWAP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0x60D CALLVALUE PUSH1 0xB SLOAD PUSH2 0xA0E JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xC SLOAD SWAP3 DUP3 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE CALLVALUE SWAP1 DUP3 ADD MSTORE PUSH32 0x6508C7E3D28DF907ED24F614C03B61C067DBC85E84A98BB8F78FFB1C8A711E55 PUSH1 0x60 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE DUP9 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697373696F6E7320636C6F736564203420686F757273206265666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6520726F756E6420656E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E74206C696D6974207265616368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP5 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E7472792066656520697320302E3031206574686572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI CALLDATALOAD PUSH1 0xF SLOAD DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0xF PUSH1 0x20 SWAP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI CALLDATALOAD SWAP2 PUSH1 0x8 SLOAD DUP4 LT ISZERO PUSH2 0x1BB JUMPI POP PUSH2 0x883 PUSH1 0x80 SWAP3 PUSH2 0x8B6 JUMP JUMPDEST POP SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 DUP2 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x2 SHL PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x926 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x918 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x950 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x950 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x982 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA3D DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0xA4A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x9EC JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0xA5B PUSH1 0x1F NOT SWAP2 PUSH2 0xA1B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH2 0xA7F PUSH1 0x20 SWAP3 PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xAA6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA98 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH2 0x135B JUMPI PUSH1 0x5 SLOAD PUSH2 0xB02 SWAP2 PUSH2 0xA0E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x4 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x127E JUMPI JUMPDEST POP PUSH5 0x2540BE400 SWAP2 DUP1 DUP4 DUP2 MUL DIV DUP4 EQ DUP2 ISZERO OR ISZERO PUSH2 0x950 JUMPI DUP3 DUP2 MUL PUSH1 0x7 SSTORE PUSH1 0x8 SLOAD ISZERO PUSH2 0x11CC JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 DUP2 EQ PUSH2 0x1052 JUMPI POP PUSH1 0x2 PUSH1 0x8 SLOAD EQ PUSH2 0xED5 JUMPI SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB85 DUP3 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x60 DUP2 LT PUSH2 0xEA5 JUMPI POP PUSH1 0x0 SWAP4 DUP5 SWAP2 PUSH1 0x8 SLOAD SWAP2 JUMPDEST DUP3 DUP5 LT PUSH2 0xD66 JUMPI POP POP POP POP PUSH1 0xB SLOAD PUSH1 0x2 SLOAD SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ DUP2 ISZERO OR ISZERO PUSH2 0x950 JUMPI PUSH2 0xBCF PUSH2 0x2710 PUSH2 0xBD8 SWAP4 DIV DUP1 SWAP3 PUSH2 0x943 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH2 0x13AA JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xBE4 DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP2 PUSH2 0xBEE DUP6 PUSH2 0xA33 JUMP JUMPDEST SWAP5 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xCDE JUMPI POP POP POP POP DUP1 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x982 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x982 JUMPI PUSH1 0xF SLOAD DUP5 PUSH1 0xF SSTORE DUP1 DUP6 LT PUSH2 0xCAF JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD SWAP4 PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC84 JUMPI POP POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F SWAP3 SWAP4 POP PUSH2 0xC77 PUSH1 0xC SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND SWAP8 ADD SWAP7 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE ADD PUSH2 0xC37 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xCD2 JUMPI POP PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH2 0xCFC PUSH2 0xCF5 DUP5 DUP8 PUSH2 0xADB JUMP JUMPDEST MLOAD MLOAD PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0xD0A DUP3 DUP8 PUSH2 0xAC7 JUMP JUMPDEST MSTORE DUP2 ISZERO PUSH2 0xD50 JUMPI PUSH1 0x1 SWAP1 DUP3 DUP6 DIV PUSH2 0xD21 DUP3 DUP11 PUSH2 0xAC7 JUMP JUMPDEST MSTORE PUSH2 0xD4A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD37 DUP4 DUP10 PUSH2 0xAC7 JUMP JUMPDEST MLOAD AND PUSH2 0xD43 DUP4 DUP12 PUSH2 0xAC7 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x13AA JUMP JUMPDEST ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP6 PUSH2 0xD73 DUP8 PUSH2 0x8B6 JUMP JUMPDEST POP PUSH1 0x2 ADD SLOAD DUP3 DUP5 MUL LT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xD9B PUSH2 0xD8D DUP9 PUSH2 0x8B6 JUMP JUMPDEST POP PUSH1 0x2 DUP6 DUP6 MUL SWAP2 ADD SLOAD PUSH2 0x943 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xDEF JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xDB1 DUP3 PUSH2 0x998 JUMP JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xDCA DUP3 DUP8 PUSH2 0xADB JUMP JUMPDEST MSTORE PUSH2 0xDD5 DUP2 DUP7 PUSH2 0xADB JUMP JUMPDEST POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x950 JUMPI PUSH1 0x1 DUP1 SWAP2 ADD SWAP7 JUMPDEST ADD SWAP3 SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 SWAP8 SWAP2 SWAP8 PUSH1 0x20 DUP8 MLOAD ADD MLOAD PUSH1 0x1 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xE51 JUMPI POP SWAP1 DUP3 SWAP2 PUSH1 0x1 SWAP5 SWAP4 LT PUSH2 0xE1A JUMPI JUMPDEST POP POP PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE49 SWAP3 PUSH2 0xE2A DUP3 PUSH2 0x998 JUMP JUMPDEST DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xE42 DUP3 DUP11 PUSH2 0xADB JUMP JUMPDEST MSTORE DUP8 PUSH2 0xADB JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xE13 JUMP JUMPDEST DUP2 PUSH1 0x20 PUSH2 0xE5E DUP4 DUP13 PUSH2 0xADB JUMP JUMPDEST MLOAD ADD MLOAD GT PUSH2 0xE6F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 PUSH2 0xE7E DUP3 DUP10 PUSH2 0xADB JUMP JUMPDEST MLOAD ADD MLOAD DUP2 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xEA0 PUSH1 0x2 PUSH2 0xE95 DUP10 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD DUP5 DUP5 MUL PUSH2 0x943 JUMP JUMPDEST PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP6 SWAP3 SWAP6 MLOAD PUSH2 0xEB7 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP6 ADD MSTORE ADD SWAP4 SWAP1 SWAP4 PUSH2 0xB88 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0xEE4 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x40 CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x40 MLOAD PUSH2 0xEFE DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP2 PUSH1 0xB SLOAD PUSH1 0x1 SHR PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xFF6 JUMPI POP POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F SWAP2 PUSH2 0xF53 PUSH1 0xC SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x982 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x982 JUMPI PUSH1 0xF SLOAD DUP3 PUSH1 0xF SSTORE DUP1 DUP4 LT PUSH2 0xFC7 JUMPI JUMPDEST POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF9C JUMPI POP POP POP PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE ADD PUSH2 0xF8A JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xFEA JUMPI POP PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH2 0x100D DUP4 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x101B DUP3 DUP8 PUSH2 0xAC7 JUMP JUMPDEST MSTORE DUP3 PUSH2 0x1027 DUP3 DUP7 PUSH2 0xAC7 JUMP JUMPDEST MSTORE PUSH2 0x1049 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x103D DUP4 DUP9 PUSH2 0xAC7 JUMP JUMPDEST MLOAD AND PUSH2 0xD43 DUP4 DUP8 PUSH2 0xAC7 JUMP JUMPDEST ADD SWAP1 DUP4 SWAP2 PUSH2 0xF14 JUMP JUMPDEST SWAP2 SWAP3 POP POP PUSH1 0x40 MLOAD PUSH2 0x1062 DUP2 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x20 CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP1 PUSH2 0x107D DUP3 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 CALLDATASIZE DUP2 DUP5 ADD CALLDATACOPY ISZERO PUSH2 0x8F0 JUMPI DUP2 PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F SWAP2 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 SLOAD AND PUSH2 0x10E9 DUP4 PUSH2 0xABA JUMP JUMPDEST MSTORE PUSH1 0xB SLOAD PUSH2 0x10F6 DUP3 PUSH2 0xABA JUMP JUMPDEST MSTORE PUSH2 0x1116 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x110B DUP5 PUSH2 0xABA JUMP JUMPDEST MLOAD AND PUSH2 0xD43 DUP4 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x1129 PUSH1 0xC SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x982 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x982 JUMPI PUSH1 0xF SLOAD DUP3 PUSH1 0xF SSTORE DUP1 DUP4 LT PUSH2 0x119D JUMPI JUMPDEST POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1172 JUMPI POP POP POP PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE ADD PUSH2 0x1160 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x11C0 JUMPI POP PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11B3 JUMP JUMPDEST POP SWAP1 POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1200 DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x1223 PUSH1 0x40 MLOAD PUSH2 0x1213 DUP2 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1234 DUP2 PUSH2 0x9B4 JUMP JUMPDEST MSTORE PUSH1 0xF SLOAD PUSH1 0x0 PUSH1 0xF SSTORE DUP1 PUSH2 0x1251 JUMPI JUMPDEST POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1272 JUMPI POP PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1265 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12AA JUMPI JUMPDEST DUP2 PUSH2 0x1299 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BB JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0xB3C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1301 JUMPI DUP1 PUSH2 0x12FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH2 0x12E3 DUP2 SWAP6 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 PUSH2 0x12F2 DUP5 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0x13AA JUMP JUMPDEST ADD PUSH2 0x12C1 JUMP JUMPDEST POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1333 DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0xC77 PUSH1 0x40 MLOAD PUSH2 0x1346 DUP2 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F75726E616D656E742063616E6E6F74206265207265736F6C766564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x1432 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP5 DUP2 SWAP5 DUP3 SWAP5 AND GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x142C JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x13F6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x9EC JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1406 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 PUSH1 0x8 SSTORE DUP1 PUSH2 0x1497 JUMPI JUMPDEST POP DUP1 PUSH1 0xB SSTORE PUSH2 0x146B PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xC SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1483 JUMPI POP PUSH1 0xC SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1501 JUMPI PUSH1 0x8 DUP4 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP2 PUSH1 0x2 SHL DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x14E4 JUMPI POP POP PUSH2 0x145A JUMP JUMPDEST DUP1 DUP5 PUSH1 0x4 SWAP3 SSTORE DUP5 PUSH1 0x1 DUP3 ADD SSTORE DUP5 DUP4 DUP3 ADD SSTORE DUP5 PUSH1 0x3 DUP3 ADD SSTORE ADD PUSH2 0x14D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT INVALID DUP14 GT ADDMOD 0xE1 SIGNEXTEND 0xCB PUSH29 0x27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802A2646970 PUSH7 0x735822122047A8 CALLDATALOAD 0xBF LOG1 0x24 PUSH6 0x35DA09FC1F47 0xB0 PUSH17 0x3279FD07A2CD5FAC71BEA7F5D276970421 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"287:7193:17:-:0;;;;;;;;;;;;;-1:-1:-1;;287:7193:17;;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;-1:-1:-1;287:7193:17;393:3;;287:7193;435:7;;287:7193;483:6;287:7193;;483:6;287:7193;528:7;;287:7193;-1:-1:-1;891:1:17;287:7193;;;;;;;;;;;;;1464:34;287:7193;1522:15;287:7193;1522:15;;287:7193;;;1503:56;287:7193;;;;;;;;;;;;;;-1:-1:-1;287:7193:17;;483:6;287:7193;;-1:-1:-1;287:7193:17;;-1:-1:-1;287:7193:17;;;;;;-1:-1:-1;287:7193:17;;;;;-1:-1:-1;287:7193:17"},"deployedBytecode":{"functionDebugData":{"abi_encode_array_address_dyn":{"entryPoint":2310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_array_address_dyn_array_uint256_dyn":{"entryPoint":2661,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":2611,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_struct_Prediction_dyn":{"entryPoint":2587,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":2574,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":2371,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2540,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_12750":{"entryPoint":2406,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_12796":{"entryPoint":2456,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_17233":{"entryPoint":2484,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_17238":{"entryPoint":2512,"id":null,"parameterSlots":1,"returnSlots":0},"fun_resetTournament":{"entryPoint":5194,"id":3588,"parameterSlots":0,"returnSlots":0},"fun_resolveTournament_inner":{"entryPoint":2796,"id":null,"parameterSlots":0,"returnSlots":0},"fun_sendValue":{"entryPoint":5034,"id":1336,"parameterSlots":2,"returnSlots":0},"memory_array_index_access_address_dyn":{"entryPoint":2759,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_address_dyn_12785":{"entryPoint":2746,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_WinnerInfo":{"entryPoint":2779,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_struct_Prediction__dyn":{"entryPoint":2230,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60406080815260048036101561002e575b5050361561001d57600080fd5b61002934600b54610a0e565b600b55005b600090813560e01c9081624fbbb014610857578162614418146107fa578163149c6dac1461083857816324924bf714610819578163308d19ab14610819578163344c8e37146107fa578163532eaca0146107db57816358f6b9c5146105265781635d21b255146107bc578163719ce73e146107bc57816376a4956c146107755781637dc0d1d01461074d57816385d62b45146105455781638a19c8bc146103c05781638dd78d671461052657816393bc976e14610507578163956909361461048457816398d5fdca146103df578163a32bf597146103c0578163bb9b110b1461037d578163c78c3a8314610269578163e0abca0b14610241578163e2f1dcc614610222578163ef949f4a146101e157508063f985ad93146101be5763f9ceb3ea0361001057346101bb57806003193601126101bb5760085461016f81610a33565b915b8181106101915783516020808252819061018d90820186610906565b0390f35b806001600160a01b0360016101a681946108b6565b500154166101b48286610ac7565b5201610171565b80fd5b5090346101dd57816003193601126101dd576020906005549051908152f35b5080fd5b9050823461021e578260031936011261021e57600283541461021157826002815561020a610aec565b6001815580f35b51633ee5aeb560e01b8152fd5b8280fd5b8284346101dd57816003193601126101dd576020906008549051908152f35b8284346101dd57816003193601126101dd576020906001600160a01b03600a54169051908152f35b9050346101dd57816003193601126101dd576008549161028883610a1b565b610294855191826109ec565b8381526008825260209384820193837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3865b84831061032e575050505050845193808501918186525180925285850193925b8281106102f35785850386f35b835180518652808301516001600160a01b031686840152878101518887015260609081015190860152608090940193928101926001016102e6565b83896001928c9b98999b5161034281610966565b855481526001600160a01b038587015416838201528d60028701549082015260038601546060820152815201920192019190979594976102c6565b8284346101dd57816003193601126101dd5760095461383f198101929083116103ad576020838351904211158152f35b634e487b7160e01b815260118452602490fd5b8284346101dd57816003193601126101dd57602090600c549051908152f35b9050823461021e578260031936011261021e57819260206001600160a01b0360015416835194858092638e15f47360e01b82525afa928315610478578193610444575b506402540be400928381029381850414901517156103ad576020838351908152f35b9092506020813d602011610470575b81610460602093836109ec565b8101031261021e57519184610422565b3d9150610453565b509051903d90823e3d90fd5b5050346101bb57806003193601126101bb578151918291600f54808552602080950194600f835260008051602061151683398151915292905b8282106104e75761018d86866104d5828b03836109ec565b51918291602083526020830190610906565b83546001600160a01b0316875295860195600193840193909101906104bd565b8391503461021e578260031936011261021e5760209250549051908152f35b8284346101dd57816003193601126101dd576020906007549051908152f35b826020853660031901821361021e578335662386f26fc10000341061070a576008546006548110156106c75761058060095460035490610943565b421161066f57600c549083519161059683610966565b8252848201338152848301908482526060840192348452600160401b81101561065c578060016105c992016008556108b6565b94909461064a579060039392915185556001600160a01b03600186019151166001600160a01b03198254161790555160028401555191015561060d34600b54610a0e565b600b55600c5492825193845283015234908201527f6508c7e3d28df907ed24f614c03b61c067dbc85e84a98bb8f78ffb1c8a711e5560603392a280f35b634e487b7160e01b8952888a52602489fd5b634e487b7160e01b895260418a52602489fd5b825162461bcd60e51b8152808701859052602c60248201527f5375626d697373696f6e7320636c6f736564203420686f757273206265666f7260448201526b6520726f756e6420656e647360a01b6064820152608490fd5b825162461bcd60e51b8152808701859052601960248201527f5061727469636970616e74206c696d69742072656163686564000000000000006044820152606490fd5b815162461bcd60e51b8152808601849052601760248201527f456e7472792066656520697320302e30312065746865720000000000000000006044820152606490fd5b8284346101dd57816003193601126101dd576020906001600160a01b03600154169051908152f35b8391503461021e57602036600319011261021e5735600f5481101561021e576001600160a01b0390600f602094526000805160206115168339815191520154169051908152f35b8284346101dd57816003193601126101dd57602090600b549051908152f35b8284346101dd57816003193601126101dd576020906003549051908152f35b8284346101dd57816003193601126101dd576020906009549051908152f35b8284346101dd57816003193601126101dd576020906006549051908152f35b8284346101dd57816003193601126101dd576020906002549051908152f35b8391503461021e57602036600319011261021e5735916008548310156101bb57506108836080926108b6565b50908154916001600160a01b03600182015416916003600283015492015492815194855260208501528301526060820152f35b6008548110156108f057600860005260021b7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110610926575050505090565b83516001600160a01b031685529381019392810192600101610918565b9190820391821161095057565b634e487b7160e01b600052601160045260246000fd5b6080810190811067ffffffffffffffff82111761098257604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761098257604052565b6020810190811067ffffffffffffffff82111761098257604052565b6040810190811067ffffffffffffffff82111761098257604052565b90601f8019910116810190811067ffffffffffffffff82111761098257604052565b9190820180921161095057565b67ffffffffffffffff81116109825760051b60200190565b90610a3d82610a1b565b610a4a60405191826109ec565b8281528092610a5b601f1991610a1b565b0190602036910137565b908152610a7f602092606060208401526060830190610906565b9060408183039101526020808451928381520193019160005b828110610aa6575050505090565b835185529381019392810192600101610a98565b8051156108f05760200190565b80518210156108f05760209160051b010190565b9060038110156108f05760051b0190565b60095480421061135b57600554610b0291610a0e565b4210156112be5760049060206001600160a01b036001541660405193848092638e15f47360e01b82525afa9182156112b25760009261127e575b506402540be40091808381020483148115171561095057828102600755600854156111cc57600854600181146110525750600260085414610ed5579160405190610b8582610998565b60005b60608110610ea557506000938491600854915b828410610d665750505050600b546002549081810291818304148115171561095057610bcf612710610bd893048092610943565b600b55336113aa565b600b54610be484610a33565b91610bee85610a33565b9460005b818110610cde575050505080519267ffffffffffffffff841161098257600160401b841161098257600f5484600f55808510610caf575b506020820193600f60005260005b818110610c845750507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f929350610c77600c549160405193849384610a65565b0390a1610c8261144a565b565b60019060206001600160a01b0388511697019681600080516020611516833981519152015501610c37565b8460008051602061151683398151915291820191015b818110610cd25750610c29565b60008155600101610cc5565b6001600160a01b036001610cfc610cf58487610adb565b51516108b6565b50015416610d0a8287610ac7565b528115610d5057600190828504610d21828a610ac7565b52610d4a6001600160a01b03610d378389610ac7565b5116610d43838b610ac7565b51906113aa565b01610bf2565b634e487b7160e01b600052601260045260246000fd5b90919295610d73876108b6565b50600201548284021015610e8757610d9b610d8d886108b6565b506002858502910154610943565b6003821015610def5760405190610db182610998565b888252602082015260016040820152610dca8287610adb565b52610dd58186610adb565b506000198114610950576001809101965b01929190610b9b565b600097919760208751015160015b60038110610e5157509082916001949310610e1a575b5050610de6565b604051610e4992610e2a82610998565b8482526020820152846040820152610e42828a610adb565b5287610adb565b503880610e13565b816020610e5e838c610adb565b51015111610e6f575b600101610dfd565b9150506020610e7e8289610adb565b51015181610e67565b610ea06002610e95896108b6565b500154848402610943565b610d9b565b602090604095929551610eb781610998565b60008152600083820152600060408201528185015201939093610b88565b509050604051610ee481610998565b6002815260208101906040368337604051610efe81610998565b60028152604036602083013781600b5460011c60005b60028110610ff65750507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f91610f53600c549160405193849384610a65565b0390a1519067ffffffffffffffff821161098257600160401b821161098257600f5482600f55808310610fc7575b50600f60005260005b828110610f9c57505050610c8261144a565b60019060206001600160a01b0384511693019281600080516020611516833981519152015501610f8a565b8260008051602061151683398151915291820191015b818110610fea5750610f81565b60008155600101610fdd565b60019192506001600160a01b038261100d836108b6565b5001541661101b8287610ac7565b52826110278286610ac7565b526110496001600160a01b0361103d8388610ac7565b5116610d438387610ac7565b01908391610f14565b91925050604051611062816109d0565b60018152602081019160203684376040519061107d826109d0565b6001825260203681840137156108f057817f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f9160086000526001600160a01b037ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee454166110e983610aba565b52600b546110f682610aba565b526111166001600160a01b0361110b84610aba565b5116610d4383610aba565b611129600c549160405193849384610a65565b0390a1519067ffffffffffffffff821161098257600160401b821161098257600f5482600f5580831061119d575b50600f60005260005b82811061117257505050610c8261144a565b60019060206001600160a01b0384511693019281600080516020611516833981519152015501611160565b8260008051602061151683398151915291820191015b8181106111c05750611157565b600081556001016111b3565b5090507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f600c5460405190611200826109b4565b60008252611223604051611213816109b4565b6000815260405193849384610a65565b0390a16000604051611234816109b4565b52600f546000600f5580611251575b50600f600052610c8261144a565b600080516020611516833981519152908101905b8181106112725750611243565b60008155600101611265565b90916020823d6020116112aa575b81611299602093836109ec565b810103126101bb5750519038610b3c565b3d915061128c565b6040513d6000823e3d90fd5b60005b60085481101561130157806112fb6001600160a01b0360016112e381956108b6565b5001541660036112f2846108b6565b500154906113aa565b016112c1565b507f4fd7288032271e74afa3073bdad87433c58165b48192fee01cb3ca4d114c3a0f600c5460405190611333826109b4565b60008252610c77604051611346816109b4565b60008152600036813760405193849384610a65565b60405162461bcd60e51b815260206004820152602160248201527f546f75726e616d656e742063616e6e6f74206265207265736f6c7665642079656044820152601d60fa1b6064820152608490fd5b814710611432576001600160a01b0390600080809481948294165af1903d1561142c573d9067ffffffffffffffff821161141857604051916113f6601f8201601f1916602001846109ec565b825260203d92013e5b1561140657565b604051630a12f52160e11b8152600490fd5b634e487b7160e01b81526041600452602490fd5b506113ff565b60405163cd78605960e01b8152306004820152602490fd5b6008546000908160085580611497575b5080600b5561146b60045442610a0e565b600955600c5490600182018092116114835750600c55565b634e487b7160e01b81526011600452602490fd5b60026001600160fe1b038216820361150157600883527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39160021b8201915b8281106114e457505061145a565b8084600492558460018201558483820155846003820155016114d6565b634e487b7160e01b83526011600452602483fdfe8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a264697066735822122047a835bfa1246535da09fc1f47b0703279fd07a2cd5fac71bea7f5d27697042164736f6c63430008190033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x2E JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29 CALLVALUE PUSH1 0xB SLOAD PUSH2 0xA0E JUMP JUMPDEST PUSH1 0xB SSTORE STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x4FBBB0 EQ PUSH2 0x857 JUMPI DUP2 PUSH3 0x614418 EQ PUSH2 0x7FA JUMPI DUP2 PUSH4 0x149C6DAC EQ PUSH2 0x838 JUMPI DUP2 PUSH4 0x24924BF7 EQ PUSH2 0x819 JUMPI DUP2 PUSH4 0x308D19AB EQ PUSH2 0x819 JUMPI DUP2 PUSH4 0x344C8E37 EQ PUSH2 0x7FA JUMPI DUP2 PUSH4 0x532EACA0 EQ PUSH2 0x7DB JUMPI DUP2 PUSH4 0x58F6B9C5 EQ PUSH2 0x526 JUMPI DUP2 PUSH4 0x5D21B255 EQ PUSH2 0x7BC JUMPI DUP2 PUSH4 0x719CE73E EQ PUSH2 0x7BC JUMPI DUP2 PUSH4 0x76A4956C EQ PUSH2 0x775 JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x74D JUMPI DUP2 PUSH4 0x85D62B45 EQ PUSH2 0x545 JUMPI DUP2 PUSH4 0x8A19C8BC EQ PUSH2 0x3C0 JUMPI DUP2 PUSH4 0x8DD78D67 EQ PUSH2 0x526 JUMPI DUP2 PUSH4 0x93BC976E EQ PUSH2 0x507 JUMPI DUP2 PUSH4 0x95690936 EQ PUSH2 0x484 JUMPI DUP2 PUSH4 0x98D5FDCA EQ PUSH2 0x3DF JUMPI DUP2 PUSH4 0xA32BF597 EQ PUSH2 0x3C0 JUMPI DUP2 PUSH4 0xBB9B110B EQ PUSH2 0x37D JUMPI DUP2 PUSH4 0xC78C3A83 EQ PUSH2 0x269 JUMPI DUP2 PUSH4 0xE0ABCA0B EQ PUSH2 0x241 JUMPI DUP2 PUSH4 0xE2F1DCC6 EQ PUSH2 0x222 JUMPI DUP2 PUSH4 0xEF949F4A EQ PUSH2 0x1E1 JUMPI POP DUP1 PUSH4 0xF985AD93 EQ PUSH2 0x1BE JUMPI PUSH4 0xF9CEB3EA SUB PUSH2 0x10 JUMPI CALLVALUE PUSH2 0x1BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BB JUMPI PUSH1 0x8 SLOAD PUSH2 0x16F DUP2 PUSH2 0xA33 JUMP JUMPDEST SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x191 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x18D SWAP1 DUP3 ADD DUP7 PUSH2 0x906 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH2 0x1A6 DUP2 SWAP5 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x1B4 DUP3 DUP7 PUSH2 0xAC7 JUMP JUMPDEST MSTORE ADD PUSH2 0x171 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH1 0x2 DUP4 SLOAD EQ PUSH2 0x211 JUMPI DUP3 PUSH1 0x2 DUP2 SSTORE PUSH2 0x20A PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x8 SLOAD SWAP2 PUSH2 0x288 DUP4 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x294 DUP6 MLOAD SWAP2 DUP3 PUSH2 0x9EC JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP3 ADD SWAP4 DUP4 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP7 JUMPDEST DUP5 DUP4 LT PUSH2 0x32E JUMPI POP POP POP POP POP DUP5 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE DUP6 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F3 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP7 MSTORE DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 ADD MSTORE DUP8 DUP2 ADD MLOAD DUP9 DUP8 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2E6 JUMP JUMPDEST DUP4 DUP10 PUSH1 0x1 SWAP3 DUP13 SWAP12 SWAP9 SWAP10 SWAP12 MLOAD PUSH2 0x342 DUP2 PUSH2 0x966 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP8 ADD SLOAD AND DUP4 DUP3 ADD MSTORE DUP14 PUSH1 0x2 DUP8 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP8 SWAP6 SWAP5 SWAP8 PUSH2 0x2C6 JUMP JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x9 SLOAD PUSH2 0x383F NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x3AD JUMPI PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 TIMESTAMP GT ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xC SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI DUP2 SWAP3 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND DUP4 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x478 JUMPI DUP2 SWAP4 PUSH2 0x444 JUMPI JUMPDEST POP PUSH5 0x2540BE400 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x3AD JUMPI PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x470 JUMPI JUMPDEST DUP2 PUSH2 0x460 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x21E JUMPI MLOAD SWAP2 DUP5 PUSH2 0x422 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x453 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BB JUMPI DUP2 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0xF SLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH1 0xF DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4E7 JUMPI PUSH2 0x18D DUP7 DUP7 PUSH2 0x4D5 DUP3 DUP12 SUB DUP4 PUSH2 0x9EC JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4BD JUMP JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 PUSH1 0x20 DUP6 CALLDATASIZE PUSH1 0x3 NOT ADD DUP3 SGT PUSH2 0x21E JUMPI DUP4 CALLDATALOAD PUSH7 0x2386F26FC10000 CALLVALUE LT PUSH2 0x70A JUMPI PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x580 PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD SWAP1 PUSH2 0x943 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x66F JUMPI PUSH1 0xC SLOAD SWAP1 DUP4 MLOAD SWAP2 PUSH2 0x596 DUP4 PUSH2 0x966 JUMP JUMPDEST DUP3 MSTORE DUP5 DUP3 ADD CALLER DUP2 MSTORE DUP5 DUP4 ADD SWAP1 DUP5 DUP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 CALLVALUE DUP5 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP1 PUSH1 0x1 PUSH2 0x5C9 SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x64A JUMPI SWAP1 PUSH1 0x3 SWAP4 SWAP3 SWAP2 MLOAD DUP6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP7 ADD SWAP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0x60D CALLVALUE PUSH1 0xB SLOAD PUSH2 0xA0E JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xC SLOAD SWAP3 DUP3 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE CALLVALUE SWAP1 DUP3 ADD MSTORE PUSH32 0x6508C7E3D28DF907ED24F614C03B61C067DBC85E84A98BB8F78FFB1C8A711E55 PUSH1 0x60 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE DUP9 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697373696F6E7320636C6F736564203420686F757273206265666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6520726F756E6420656E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E74206C696D6974207265616368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP5 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E7472792066656520697320302E3031206574686572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI CALLDATALOAD PUSH1 0xF SLOAD DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0xF PUSH1 0x20 SWAP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1DD JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI CALLDATALOAD SWAP2 PUSH1 0x8 SLOAD DUP4 LT ISZERO PUSH2 0x1BB JUMPI POP PUSH2 0x883 PUSH1 0x80 SWAP3 PUSH2 0x8B6 JUMP JUMPDEST POP SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 DUP2 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x2 SHL PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x926 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x918 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x950 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x950 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x982 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA3D DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0xA4A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x9EC JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0xA5B PUSH1 0x1F NOT SWAP2 PUSH2 0xA1B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH2 0xA7F PUSH1 0x20 SWAP3 PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x906 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xAA6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA98 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH2 0x135B JUMPI PUSH1 0x5 SLOAD PUSH2 0xB02 SWAP2 PUSH2 0xA0E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x4 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x127E JUMPI JUMPDEST POP PUSH5 0x2540BE400 SWAP2 DUP1 DUP4 DUP2 MUL DIV DUP4 EQ DUP2 ISZERO OR ISZERO PUSH2 0x950 JUMPI DUP3 DUP2 MUL PUSH1 0x7 SSTORE PUSH1 0x8 SLOAD ISZERO PUSH2 0x11CC JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 DUP2 EQ PUSH2 0x1052 JUMPI POP PUSH1 0x2 PUSH1 0x8 SLOAD EQ PUSH2 0xED5 JUMPI SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB85 DUP3 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x60 DUP2 LT PUSH2 0xEA5 JUMPI POP PUSH1 0x0 SWAP4 DUP5 SWAP2 PUSH1 0x8 SLOAD SWAP2 JUMPDEST DUP3 DUP5 LT PUSH2 0xD66 JUMPI POP POP POP POP PUSH1 0xB SLOAD PUSH1 0x2 SLOAD SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ DUP2 ISZERO OR ISZERO PUSH2 0x950 JUMPI PUSH2 0xBCF PUSH2 0x2710 PUSH2 0xBD8 SWAP4 DIV DUP1 SWAP3 PUSH2 0x943 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH2 0x13AA JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xBE4 DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP2 PUSH2 0xBEE DUP6 PUSH2 0xA33 JUMP JUMPDEST SWAP5 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xCDE JUMPI POP POP POP POP DUP1 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x982 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x982 JUMPI PUSH1 0xF SLOAD DUP5 PUSH1 0xF SSTORE DUP1 DUP6 LT PUSH2 0xCAF JUMPI JUMPDEST POP PUSH1 0x20 DUP3 ADD SWAP4 PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC84 JUMPI POP POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F SWAP3 SWAP4 POP PUSH2 0xC77 PUSH1 0xC SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND SWAP8 ADD SWAP7 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE ADD PUSH2 0xC37 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xCD2 JUMPI POP PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH2 0xCFC PUSH2 0xCF5 DUP5 DUP8 PUSH2 0xADB JUMP JUMPDEST MLOAD MLOAD PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0xD0A DUP3 DUP8 PUSH2 0xAC7 JUMP JUMPDEST MSTORE DUP2 ISZERO PUSH2 0xD50 JUMPI PUSH1 0x1 SWAP1 DUP3 DUP6 DIV PUSH2 0xD21 DUP3 DUP11 PUSH2 0xAC7 JUMP JUMPDEST MSTORE PUSH2 0xD4A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD37 DUP4 DUP10 PUSH2 0xAC7 JUMP JUMPDEST MLOAD AND PUSH2 0xD43 DUP4 DUP12 PUSH2 0xAC7 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x13AA JUMP JUMPDEST ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP6 PUSH2 0xD73 DUP8 PUSH2 0x8B6 JUMP JUMPDEST POP PUSH1 0x2 ADD SLOAD DUP3 DUP5 MUL LT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xD9B PUSH2 0xD8D DUP9 PUSH2 0x8B6 JUMP JUMPDEST POP PUSH1 0x2 DUP6 DUP6 MUL SWAP2 ADD SLOAD PUSH2 0x943 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xDEF JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xDB1 DUP3 PUSH2 0x998 JUMP JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xDCA DUP3 DUP8 PUSH2 0xADB JUMP JUMPDEST MSTORE PUSH2 0xDD5 DUP2 DUP7 PUSH2 0xADB JUMP JUMPDEST POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x950 JUMPI PUSH1 0x1 DUP1 SWAP2 ADD SWAP7 JUMPDEST ADD SWAP3 SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 SWAP8 SWAP2 SWAP8 PUSH1 0x20 DUP8 MLOAD ADD MLOAD PUSH1 0x1 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xE51 JUMPI POP SWAP1 DUP3 SWAP2 PUSH1 0x1 SWAP5 SWAP4 LT PUSH2 0xE1A JUMPI JUMPDEST POP POP PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE49 SWAP3 PUSH2 0xE2A DUP3 PUSH2 0x998 JUMP JUMPDEST DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xE42 DUP3 DUP11 PUSH2 0xADB JUMP JUMPDEST MSTORE DUP8 PUSH2 0xADB JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xE13 JUMP JUMPDEST DUP2 PUSH1 0x20 PUSH2 0xE5E DUP4 DUP13 PUSH2 0xADB JUMP JUMPDEST MLOAD ADD MLOAD GT PUSH2 0xE6F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 PUSH2 0xE7E DUP3 DUP10 PUSH2 0xADB JUMP JUMPDEST MLOAD ADD MLOAD DUP2 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xEA0 PUSH1 0x2 PUSH2 0xE95 DUP10 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD DUP5 DUP5 MUL PUSH2 0x943 JUMP JUMPDEST PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP6 SWAP3 SWAP6 MLOAD PUSH2 0xEB7 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP6 ADD MSTORE ADD SWAP4 SWAP1 SWAP4 PUSH2 0xB88 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0xEE4 DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x40 CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x40 MLOAD PUSH2 0xEFE DUP2 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP2 PUSH1 0xB SLOAD PUSH1 0x1 SHR PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xFF6 JUMPI POP POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F SWAP2 PUSH2 0xF53 PUSH1 0xC SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x982 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x982 JUMPI PUSH1 0xF SLOAD DUP3 PUSH1 0xF SSTORE DUP1 DUP4 LT PUSH2 0xFC7 JUMPI JUMPDEST POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF9C JUMPI POP POP POP PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE ADD PUSH2 0xF8A JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xFEA JUMPI POP PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH2 0x100D DUP4 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x101B DUP3 DUP8 PUSH2 0xAC7 JUMP JUMPDEST MSTORE DUP3 PUSH2 0x1027 DUP3 DUP7 PUSH2 0xAC7 JUMP JUMPDEST MSTORE PUSH2 0x1049 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x103D DUP4 DUP9 PUSH2 0xAC7 JUMP JUMPDEST MLOAD AND PUSH2 0xD43 DUP4 DUP8 PUSH2 0xAC7 JUMP JUMPDEST ADD SWAP1 DUP4 SWAP2 PUSH2 0xF14 JUMP JUMPDEST SWAP2 SWAP3 POP POP PUSH1 0x40 MLOAD PUSH2 0x1062 DUP2 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x20 CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP1 PUSH2 0x107D DUP3 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 CALLDATASIZE DUP2 DUP5 ADD CALLDATACOPY ISZERO PUSH2 0x8F0 JUMPI DUP2 PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F SWAP2 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 SLOAD AND PUSH2 0x10E9 DUP4 PUSH2 0xABA JUMP JUMPDEST MSTORE PUSH1 0xB SLOAD PUSH2 0x10F6 DUP3 PUSH2 0xABA JUMP JUMPDEST MSTORE PUSH2 0x1116 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x110B DUP5 PUSH2 0xABA JUMP JUMPDEST MLOAD AND PUSH2 0xD43 DUP4 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x1129 PUSH1 0xC SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x982 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x982 JUMPI PUSH1 0xF SLOAD DUP3 PUSH1 0xF SSTORE DUP1 DUP4 LT PUSH2 0x119D JUMPI JUMPDEST POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1172 JUMPI POP POP POP PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE ADD PUSH2 0x1160 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x11C0 JUMPI POP PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11B3 JUMP JUMPDEST POP SWAP1 POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1200 DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x1223 PUSH1 0x40 MLOAD PUSH2 0x1213 DUP2 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1234 DUP2 PUSH2 0x9B4 JUMP JUMPDEST MSTORE PUSH1 0xF SLOAD PUSH1 0x0 PUSH1 0xF SSTORE DUP1 PUSH2 0x1251 JUMPI JUMPDEST POP PUSH1 0xF PUSH1 0x0 MSTORE PUSH2 0xC82 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1516 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1272 JUMPI POP PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1265 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12AA JUMPI JUMPDEST DUP2 PUSH2 0x1299 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BB JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0xB3C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1301 JUMPI DUP1 PUSH2 0x12FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH2 0x12E3 DUP2 SWAP6 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD AND PUSH1 0x3 PUSH2 0x12F2 DUP5 PUSH2 0x8B6 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0x13AA JUMP JUMPDEST ADD PUSH2 0x12C1 JUMP JUMPDEST POP PUSH32 0x4FD7288032271E74AFA3073BDAD87433C58165B48192FEE01CB3CA4D114C3A0F PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1333 DUP3 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0xC77 PUSH1 0x40 MLOAD PUSH2 0x1346 DUP2 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F75726E616D656E742063616E6E6F74206265207265736F6C766564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x1432 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP5 DUP2 SWAP5 DUP3 SWAP5 AND GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x142C JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x13F6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x9EC JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1406 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 PUSH1 0x8 SSTORE DUP1 PUSH2 0x1497 JUMPI JUMPDEST POP DUP1 PUSH1 0xB SSTORE PUSH2 0x146B PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xC SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1483 JUMPI POP PUSH1 0xC SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1501 JUMPI PUSH1 0x8 DUP4 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP2 PUSH1 0x2 SHL DUP3 ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x14E4 JUMPI POP POP PUSH2 0x145A JUMP JUMPDEST DUP1 DUP5 PUSH1 0x4 SWAP3 SSTORE DUP5 PUSH1 0x1 DUP3 ADD SSTORE DUP5 DUP4 DUP3 ADD SSTORE DUP5 PUSH1 0x3 DUP3 ADD SSTORE ADD PUSH2 0x14D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT INVALID DUP14 GT ADDMOD 0xE1 SIGNEXTEND 0xCB PUSH29 0x27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802A2646970 PUSH7 0x735822122047A8 CALLDATALOAD 0xBF LOG1 0x24 PUSH6 0x35DA09FC1F47 0xB0 PUSH17 0x3279FD07A2CD5FAC71BEA7F5D276970421 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"287:7193:17:-:0;;;;;;;;;;;-1:-1:-1;287:7193:17;;;;;;;;;;7450:22;7463:9;7450:22;287:7193;7450:22;:::i;:::-;;287:7193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6395:23;287:7193;6395:23;;;287:7193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7258:11;287:7193;7244:33;;;:::i;:::-;7287:13;7302:22;;;;;;287:7193;;;;;;;;;;;;;;:::i;:::-;;;;7326:3;7355:14;-1:-1:-1;;;;;287:7193:17;7355:14;;;;:::i;:::-;:24;;287:7193;;7337:42;;;;:::i;:::-;287:7193;;7287:13;;287:7193;;;;;;;;;;;;;;;;;;;493:42;287:7193;;;;;;;;;;;;;;;;;;;;;;;;;;1755:1:11;287:7193:17;;2558:18:11;2554:86;;287:7193:17;1755:1:11;287:7193:17;;2387:1:11;;:::i;:::-;1713;287:7193:17;;;;2554:86:11;287:7193:17;-1:-1:-1;;;2599:30:11;;;287:7193:17;;;;;;;;;;;;;;;;;;;;6809:11;287:7193;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;798:31:17;287:7193;;;;;;;;;;;;;;;;;;;;;;7118:11;287:7193;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;7118:11;287:7193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:16;287:7193;-1:-1:-1;;287:7193:17;;;;;;;;;;;;1631:15;;:45;;287:7193;;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;6605:12;287:7193;;;;;;;;;;;;;;;;;;;;;;;;6395:23;-1:-1:-1;;;;;6395:6:17;287:7193;;;;;;;;;;;6395:23;;;;;;;;;;;;;287:7193;6421:4;;287:7193;;;;;;;;;;;;;;;6395:23;287:7193;;;;;;;6395:23;;;;;;;;;;;;;;;;;;:::i;:::-;;;287:7193;;;;;6395:23;;;;;;;-1:-1:-1;6395:23:17;;;287:7193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6311:12;287:7193;;;;;;;;;6311:12;287:7193;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:29;287:7193;;;;;;;;;;;;-1:-1:-1;;287:7193:17;;-1:-1:-1;287:7193:17;;;;1780:10;1767:9;:23;287:7193;;1836:11;287:7193;1857:15;287:7193;1836:36;;287:7193;;;1947:36;:16;287:7193;1966:17;287:7193;1947:36;;:::i;:::-;1928:15;:55;287:7193;;2080:12;287:7193;;;;;;;;:::i;:::-;;;2069:64;;;2094:10;287:7193;;2069:64;;;287:7193;;;;2069:64;;;1767:9;;287:7193;;-1:-1:-1;;;287:7193:17;;;;;;;;;;1836:11;287:7193;;:::i;:::-;;;;;;;1966:17;287:7193;;;;;;-1:-1:-1;;;;;287:7193:17;;;;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;;;;2143:22;1767:9;2143:22;287:7193;2143:22;:::i;:::-;;287:7193;2080:12;287:7193;;;;;;;;;;1767:9;287:7193;;;;2175:94;2069:64;2094:10;2175:94;;287:7193;;;-1:-1:-1;;;287:7193:17;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;330:20:17;287:7193;;;;;;;;;;;;;;;;;-1:-1:-1;;287:7193:17;;;;;983:29;287:7193;983:29;;;;;-1:-1:-1;;;;;287:7193:17;983:29;287:7193;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;833:24;287:7193;;;;;;;;;;;;;;;;;;;;;;;400:42;287:7193;;;;;;;;;;;;;;;;;;;;;;;7010:16;287:7193;;;;;;;;;;;;;;;;;;;;;;;6701:15;287:7193;;;;;;;;;;;;;;;;;;;;;;;356:40;287:7193;;;;;;;;;;;;;;;;-1:-1:-1;;287:7193:17;;;;;;726:31;287:7193;726:31;;;;;;;287:7193;726:31;;:::i;:::-;287:7193;;;;726:31;-1:-1:-1;;;;;287:7193:17;726:31;;287:7193;;726:31;;;;;287:7193;726:31;;287:7193;;;;;;;;;;;;;;;;;;;;726:31;287:7193;;;;;;726:31;-1:-1:-1;287:7193:17;;;;;;-1:-1:-1;287:7193:17;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;287:7193:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;287:7193:17;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;2449:3778::-;2537:16;287:7193;2518:15;;:35;287:7193;;2648:17;287:7193;2629:36;;;:::i;:::-;2518:15;2610:55;;2606:365;;2999:23;287:7193;2999:23;-1:-1:-1;;;;;2999:6:17;287:7193;;;;;;;;;;;2999:23;;;;;;;;;-1:-1:-1;2999:23:17;;;2449:3778;3067:4;;287:7193;;;;;;;;;;;;;;;;;3076:32;287:7193;3119:11;287:7193;3119:23;3115:208;;3119:11;287:7193;2999:6;3333:23;;3329:483;;287:7193;3844:1;3119:11;287:7193;3822:23;3818:565;;287:7193;;;;;;;:::i;:::-;-1:-1:-1;287:7193:17;;;;;;4422:24;-1:-1:-1;4532:13:17;;287:7193;3119:11;287:7193;4527:826;4547:22;;;;;;287:7193;;;;5380:9;287:7193;3844:1;287:7193;;;;;;;;;;;;;;;;5425:22;5415:5;5491:9;287:7193;;5425:22;;;:::i;:::-;5380:9;287:7193;5478:10;5491:9;:::i;:::-;5380;287:7193;5643:27;;;:::i;:::-;5712;;;;:::i;:::-;5751:13;-1:-1:-1;5766:16:17;;;;;;287:7193;;;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;6060:36;287:7193;;6060:36;287:7193;;;;;;5746:308;287:7193;2999:23;287:7193;;;6060:36;-1:-1:-1;287:7193:17;-1:-1:-1;287:7193:17;;;;;;;;6108:91;287:7193;;;6108:91;6132:12;287:7193;;;;6108:91;;;;;:::i;:::-;;;;;;:::i;:::-;2449:3778::o;287:7193::-;2999:6;287:7193;2999:23;-1:-1:-1;;;;;287:7193:17;;;;;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;;;;;;;;;-1:-1:-1;287:7193:17;;2999:6;287:7193;;;5784:3;-1:-1:-1;;;;;2999:6:17;5822:29;5834:10;;;;:::i;:::-;;287:7193;5822:29;:::i;:::-;:39;;287:7193;;5795:66;;;;:::i;:::-;287:7193;;;;;2999:6;287:7193;;;;5904:48;;;;:::i;:::-;287:7193;6022:20;-1:-1:-1;;;;;5990:24:17;;;;:::i;:::-;287:7193;;6022:20;;;;:::i;:::-;287:7193;6022:20;;:::i;:::-;287:7193;5751:13;;287:7193;;;;-1:-1:-1;287:7193:17;;2999:23;287:7193;;-1:-1:-1;287:7193:17;4571:3;4603:14;;;;;;;:::i;:::-;-1:-1:-1;3844:1:17;4603:29;287:7193;;;;-1:-1:-1;4603:157:17;;;4658:47;:14;;;:::i;:::-;287:7193;3844:1;287:7193;;;4658:29;;287:7193;4658:47;:::i;:::-;287:7193;4772:16;;287:7193;;;;;;;;;:::i;:::-;;;;2999:23;4821:31;;287:7193;2999:6;287:7193;4821:31;;287:7193;4797:55;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;287:7193:17;;;;2999:6;287:7193;;;4768:580;;287:7193;4532:13;;;;;4768:580;-1:-1:-1;5002:24:17;;;2999:23;5051:10;;:21;287:7193;2999:6;5099:5;287:7193;5099:5;;;;5249:20;;;;2999:6;5249:20;;;5245:97;;5079:158;4768:580;;;;5245:97;287:7193;;5279:55;;287:7193;;;:::i;:::-;;;;2999:23;5303:31;;287:7193;5303:31;287:7193;5303:31;;287:7193;5279:55;;;;:::i;:::-;;;;:::i;:::-;;5245:97;;;;5106:3;5123:10;2999:23;5123:10;;;;:::i;:::-;;:21;287:7193;5123:31;5119:111;;5106:3;2999:6;287:7193;5084:13;;5119:111;5175:10;;;2999:23;5175:10;;;;:::i;:::-;;:21;287:7193;5205:16;5119:111;;4603:157;4713:47;3844:1;4731:14;;;:::i;:::-;:29;;287:7193;;;;4713:47;:::i;:::-;4603:157;;287:7193;2999:23;287:7193;;;;;;;;;:::i;:::-;-1:-1:-1;287:7193:17;;-1:-1:-1;287:7193:17;;;;-1:-1:-1;287:7193:17;;;;;;;;;;;;;;3818:565;287:7193;;;;;;;;:::i;:::-;3844:1;287:7193;;2999:23;287:7193;;;;;;;;;;;;:::i;:::-;3844:1;287:7193;;;;2999:23;287:7193;;;;4032:9;287:7193;2999:6;287:7193;-1:-1:-1;4071:5:17;3844:1;4071:5;;;;287:7193;;4246:58;287:7193;4246:58;4265:12;287:7193;;;;4246:58;;;;;:::i;:::-;;;;287:7193;;;;;;;-1:-1:-1;;;287:7193:17;;;;4310:31;287:7193;;4310:31;287:7193;;;;;;4051:185;287:7193;4310:31;-1:-1:-1;287:7193:17;-1:-1:-1;287:7193:17;;;;;;4310:31;;;;;:::i;287:7193::-;2999:6;287:7193;2999:23;-1:-1:-1;;;;;287:7193:17;;;;;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;;;;;;;;;-1:-1:-1;287:7193:17;;2999:6;287:7193;;;4078:3;2999:6;4112:14;;;-1:-1:-1;;;;;4112:14:17;;;;:::i;:::-;:24;;287:7193;;4090:46;;;;:::i;:::-;287:7193;4143:21;;;;;:::i;:::-;287:7193;4219:9;-1:-1:-1;;;;;4197:19:17;;;;:::i;:::-;287:7193;;4219:9;;;;:::i;:::-;287:7193;4056:13;;;;;3329:483;287:7193;;;;;;;;;:::i;:::-;2999:6;287:7193;;2999:23;287:7193;;;2999:23;287:7193;;;;;;;;;:::i;:::-;2999:6;287:7193;;2999:23;287:7193;;;;;;;;;3676:60;287:7193;3119:11;-1:-1:-1;287:7193:17;-1:-1:-1;;;;;3543:24:17;287:7193;;3524:43;;;:::i;:::-;287:7193;3590:9;287:7193;3573:26;;;:::i;:::-;287:7193;3650:14;-1:-1:-1;;;;;3631:16:17;;;:::i;:::-;287:7193;;3650:14;;;:::i;:::-;3676:60;3695:12;287:7193;;;;3676:60;;;;;:::i;:::-;;;;287:7193;;;;;;;-1:-1:-1;;;287:7193:17;;;;3742:28;287:7193;;3742:28;287:7193;;;;;;3329:483;287:7193;3742:28;-1:-1:-1;287:7193:17;-1:-1:-1;287:7193:17;;;;;;3742:28;;;;;:::i;287:7193::-;2999:6;287:7193;2999:23;-1:-1:-1;;;;;287:7193:17;;;;;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;;;;;;;;;-1:-1:-1;287:7193:17;;2999:6;287:7193;;;3115:208;287:7193;;;3155:89;3180:12;287:7193;;;;;;;:::i;:::-;-1:-1:-1;287:7193:17;;3155:89;287:7193;;;;;:::i;:::-;-1:-1:-1;287:7193:17;;;;3155:89;;;;;:::i;:::-;;;;-1:-1:-1;287:7193:17;;;;;:::i;:::-;;3250:31;287:7193;-1:-1:-1;3250:31:17;287:7193;;;;3115:208;287:7193;3250:31;-1:-1:-1;287:7193:17;3250:31;;:::i;287:7193::-;-1:-1:-1;;;;;;;;;;;287:7193:17;;;;;;;;;;;;;;-1:-1:-1;287:7193:17;;2999:6;287:7193;;;2999:23;;;;;;;;;;;;;;;;;:::i;:::-;;;287:7193;;;;;;2999:23;;;;;;;-1:-1:-1;2999:23:17;;;287:7193;;;-1:-1:-1;287:7193:17;;;;;2606:365;-1:-1:-1;2717:3:17;2697:11;287:7193;2693:22;;;;;2762:14;2795:21;-1:-1:-1;;;;;287:7193:17;2762:14;;;;:::i;:::-;:24;;287:7193;;2795:21;:14;;;:::i;:::-;:21;;287:7193;2795:21;;:::i;:::-;287:7193;2678:13;;2693:22;;2840:89;2865:12;287:7193;;;;;;;:::i;:::-;-1:-1:-1;287:7193:17;;2840:89;287:7193;;;;;:::i;:::-;-1:-1:-1;287:7193:17;;-1:-1:-1;287:7193:17;;;;;2840:89;;;;;:::i;287:7193::-;;;-1:-1:-1;;;287:7193:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;1531:331:9;1616:21;;:30;1612:109;;-1:-1:-1;;;;;1750:33:9;;287:7193:17;;;;;;;;1750:33:9;;287:7193:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;287:7193:17;;;;;:::i;:::-;;;;;;;;;1797:8:9;1793:63;;1531:331::o;1793:63::-;287:7193:17;;-1:-1:-1;;;1828:17:9;;;;;287:7193:17;-1:-1:-1;;;287:7193:17;;;;;;;;;;;;1612:109:9;287:7193:17;;-1:-1:-1;;;1669:41:9;;1624:4;1669:41;;;287:7193:17;;;1669:41:9;2279:165:17;2320:18;287:7193;2320:18;287:7193;;2320:18;287:7193;;;;2279:165;287:7193;;2343:13;287:7193;2380:37;2398:19;287:7193;2380:15;:37;:::i;:::-;2361:56;287:7193;2422:17;287:7193;;;;;;;;;;;2422:17;287:7193;2279:165::o;287:7193::-;-1:-1:-1;;;287:7193:17;;;2398:19;287:7193;;;;;;-1:-1:-1;;;;;287:7193:17;;;;;;2320:18;287:7193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;287:7193:17;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1096600","executionCost":"infinite","totalCost":"infinite"},"external":{"currentRound()":"2560","getCurrentPricePool()":"2450","getCurrentRound()":"2670","getCurrentRoundPartecipants()":"2758","getLastWinners()":"infinite","getLatestRoundPrice()":"2428","getMaxPartecipants()":"2362","getNextVerificationTime()":"2384","getPartecipants()":"infinite","getPredictions()":"infinite","getPrice()":"infinite","isRoundOpen()":"2737","keeperPercentageFee()":"2318","lastRoundPrice()":"2582","maxParticipants()":"2340","oracle()":"2534","predictions(uint256)":"12989","priceFeedAddress()":"2754","prizePool()":"2472","resolutionEndTime()":"2803","resolveTournament()":"infinite","roundWinners(uint256)":"infinite","submissionEndTime()":"2406","submitPrediction(uint256)":"154484","verificationEndTime()":"2605","verificationTime()":"2296"},"internal":{"_resetTournament()":"infinite"}},"methodIdentifiers":{"currentRound()":"8a19c8bc","getCurrentPricePool()":"5d21b255","getCurrentRound()":"a32bf597","getCurrentRoundPartecipants()":"e2f1dcc6","getLastWinners()":"95690936","getLatestRoundPrice()":"58f6b9c5","getMaxPartecipants()":"308d19ab","getNextVerificationTime()":"344c8e37","getPartecipants()":"f9ceb3ea","getPredictions()":"c78c3a83","getPrice()":"98d5fdca","isRoundOpen()":"bb9b110b","keeperPercentageFee()":"149c6dac","lastRoundPrice()":"8dd78d67","maxParticipants()":"24924bf7","oracle()":"7dc0d1d0","predictions(uint256)":"004fbbb0","priceFeedAddress()":"e0abca0b","prizePool()":"719ce73e","resolutionEndTime()":"f985ad93","resolveTournament()":"ef949f4a","roundWinners(uint256)":"76a4956c","submissionEndTime()":"532eaca0","submitPrediction(uint256)":"85d62b45","verificationEndTime()":"93bc976e","verificationTime()":"00614418"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxParticipants\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PredictionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"prizeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"TournamentResolved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPricePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundPartecipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastWinners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestRoundPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxPartecipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextVerificationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPartecipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPredictions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Tournament.Prediction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRoundOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeperPercentageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRoundPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract Oracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"predictor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolutionEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolveTournament\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundWinners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictedPrice\",\"type\":\"uint256\"}],\"name\":\"submitPrediction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verificationEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verificationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/community/Tournament.sol\":\"Tournament\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/community/Tournament.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"../helpers/Oracle.sol\\\";\\r\\n\\r\\ncontract Tournament is ReentrancyGuard {\\r\\n\\tOracle public oracle;\\r\\n\\r\\n\\tuint256 public keeperPercentageFee = 100;\\r\\n\\tuint256 public submissionEndTime = 8 hours;\\r\\n\\tuint256 public verificationEndTime = 1 days;\\r\\n\\tuint256 public resolutionEndTime = 1 hours;\\r\\n\\r\\n\\tstruct Prediction {\\r\\n\\t\\tuint256 round;\\r\\n\\t\\taddress predictor;\\r\\n\\t\\tuint256 predictedPrice;\\r\\n\\t\\tuint256 amount;\\r\\n\\t}\\r\\n\\r\\n\\tuint256 public maxParticipants;\\r\\n\\r\\n\\tuint256 public lastRoundPrice;\\r\\n\\r\\n\\tPrediction[] public predictions;\\r\\n\\r\\n\\tuint256 public verificationTime;\\r\\n\\taddress public priceFeedAddress;\\r\\n\\tuint256 public prizePool;\\r\\n\\tuint256 public currentRound = 0;\\r\\n\\r\\n\\tmapping(uint256 => uint256) scores;\\r\\n\\tmapping(uint256 => uint256) prizePerScore;\\r\\n\\r\\n\\taddress[] public roundWinners;\\r\\n\\r\\n\\tstruct WinnerInfo {\\r\\n\\t\\tuint256 index;\\r\\n\\t\\tuint256 difference;\\r\\n\\t\\tbool exists;\\r\\n\\t}\\r\\n\\r\\n\\tevent PredictionSubmitted(\\r\\n\\t\\tuint256 round,\\r\\n\\t\\taddress indexed predictor,\\r\\n\\t\\tuint256 predictedPrice,\\r\\n\\t\\tuint256 amount\\r\\n\\t);\\r\\n\\r\\n\\tevent TournamentResolved(\\r\\n\\t\\tuint256 round,\\r\\n\\t\\taddress[] winners,\\r\\n\\t\\tuint256[] prizeAmounts\\r\\n\\t);\\r\\n\\r\\n\\tconstructor(\\r\\n\\t\\taddress _oracleAddress,\\r\\n\\t\\tuint256 _maxParticipants\\r\\n\\t) ReentrancyGuard() {\\r\\n\\t\\toracle = Oracle(_oracleAddress);\\r\\n\\t\\tmaxParticipants = _maxParticipants;\\r\\n\\t\\tverificationTime = block.timestamp + verificationEndTime;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isRoundOpen() public view returns (bool) {\\r\\n\\t\\treturn block.timestamp <= verificationTime - 4 hours;\\r\\n\\t}\\r\\n\\r\\n\\tfunction submitPrediction(uint256 _predictedPrice) external payable {\\r\\n\\t\\trequire(msg.value >= 0.01 ether, \\\"Entry fee is 0.01 ether\\\");\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tpredictions.length < maxParticipants,\\r\\n\\t\\t\\t\\\"Participant limit reached\\\"\\r\\n\\t\\t);\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tblock.timestamp <= verificationTime - submissionEndTime,\\r\\n\\t\\t\\t\\\"Submissions closed 4 hours before round ends\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tpredictions.push(\\r\\n\\t\\t\\tPrediction(currentRound, msg.sender, _predictedPrice, msg.value)\\r\\n\\t\\t);\\r\\n\\t\\tprizePool += msg.value;\\r\\n\\t\\temit PredictionSubmitted(\\r\\n\\t\\t\\tcurrentRound,\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\t_predictedPrice,\\r\\n\\t\\t\\tmsg.value\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _resetTournament() private {\\r\\n\\t\\tdelete predictions;\\r\\n\\t\\tprizePool = 0;\\r\\n\\t\\tverificationTime = block.timestamp + verificationEndTime;\\r\\n\\t\\tcurrentRound += 1;\\r\\n\\t}\\r\\n\\r\\n\\tfunction resolveTournament() external nonReentrant {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tblock.timestamp >= verificationTime,\\r\\n\\t\\t\\t\\\"Tournament cannot be resolved yet\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tif (block.timestamp >= verificationTime + resolutionEndTime) {\\r\\n\\t\\t\\tfor (uint256 i = 0; i < predictions.length; i++) {\\r\\n\\t\\t\\t\\tAddress.sendValue(\\r\\n\\t\\t\\t\\t\\tpayable(predictions[i].predictor),\\r\\n\\t\\t\\t\\t\\tpredictions[i].amount\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\temit TournamentResolved(\\r\\n\\t\\t\\t\\tcurrentRound,\\r\\n\\t\\t\\t\\tnew address[](0),\\r\\n\\t\\t\\t\\tnew uint256[](0)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\t_resetTournament();\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 actualPrice = oracle.getLatestPrice();\\r\\n\\t\\tuint256 actualPriceUint = actualPrice * 1e10;\\r\\n\\t\\tlastRoundPrice = actualPriceUint;\\r\\n\\r\\n\\t\\tif (predictions.length == 0) {\\r\\n\\t\\t\\temit TournamentResolved(\\r\\n\\t\\t\\t\\tcurrentRound,\\r\\n\\t\\t\\t\\tnew address[](0),\\r\\n\\t\\t\\t\\tnew uint256[](0)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\troundWinners = new address[](0);\\r\\n\\t\\t\\t_resetTournament();\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (predictions.length == 1) {\\r\\n\\t\\t\\t// Restituisce il premio all'unico partecipante\\r\\n\\t\\t\\taddress[] memory winnerAddress = new address[](1);\\r\\n\\t\\t\\tuint256[] memory winnerPrize = new uint256[](1);\\r\\n\\t\\t\\twinnerAddress[0] = predictions[0].predictor;\\r\\n\\t\\t\\twinnerPrize[0] = prizePool;\\r\\n\\t\\t\\tAddress.sendValue(payable(winnerAddress[0]), winnerPrize[0]);\\r\\n\\t\\t\\temit TournamentResolved(currentRound, winnerAddress, winnerPrize);\\r\\n\\t\\t\\troundWinners = winnerAddress;\\r\\n\\t\\t\\t_resetTournament();\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (predictions.length == 2) {\\r\\n\\t\\t\\t// Distribuisci il premio tra i due partecipanti\\r\\n\\t\\t\\taddress[] memory winnersAddresses = new address[](2);\\r\\n\\t\\t\\tuint256[] memory prizes = new uint256[](2);\\r\\n\\t\\t\\tuint256 halfPrize = prizePool / 2;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 2; i++) {\\r\\n\\t\\t\\t\\twinnersAddresses[i] = predictions[i].predictor;\\r\\n\\t\\t\\t\\tprizes[i] = halfPrize;\\r\\n\\t\\t\\t\\tAddress.sendValue(payable(winnersAddresses[i]), prizes[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\temit TournamentResolved(currentRound, winnersAddresses, prizes);\\r\\n\\t\\t\\troundWinners = winnersAddresses;\\r\\n\\t\\t\\t_resetTournament();\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tWinnerInfo[3] memory winners;\\r\\n\\t\\tuint256 winnersCount = 0;\\r\\n\\r\\n\\t\\t// Identifica i potenziali vincitori e calcola la differenza di prezzo\\r\\n\\t\\tfor (uint256 i = 0; i < predictions.length; i++) {\\r\\n\\t\\t\\tuint256 difference = predictions[i].predictedPrice > actualPriceUint\\r\\n\\t\\t\\t\\t? predictions[i].predictedPrice - actualPriceUint\\r\\n\\t\\t\\t\\t: actualPriceUint - predictions[i].predictedPrice;\\r\\n\\r\\n\\t\\t\\tif (winnersCount < 3) {\\r\\n\\t\\t\\t\\twinners[winnersCount] = WinnerInfo(i, difference, true);\\r\\n\\t\\t\\t\\twinnersCount++;\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t// Trova e sostituisci il vincitore con la differenza maggiore se ce n'\\u00e8 uno con una differenza minore\\r\\n\\t\\t\\t\\tuint256 maxDiffIndex = 0;\\r\\n\\t\\t\\t\\tuint256 maxDiff = winners[0].difference;\\r\\n\\t\\t\\t\\tfor (uint256 j = 1; j < 3; j++) {\\r\\n\\t\\t\\t\\t\\tif (winners[j].difference > maxDiff) {\\r\\n\\t\\t\\t\\t\\t\\tmaxDiff = winners[j].difference;\\r\\n\\t\\t\\t\\t\\t\\tmaxDiffIndex = j;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif (difference < maxDiff) {\\r\\n\\t\\t\\t\\t\\twinners[maxDiffIndex] = WinnerInfo(i, difference, true);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 keeperFee = (prizePool * keeperPercentageFee) / 10000;\\r\\n\\t\\tprizePool -= keeperFee;\\r\\n\\t\\tAddress.sendValue(payable(msg.sender), keeperFee);\\r\\n\\r\\n\\t\\tuint256 totalPrize = prizePool;\\r\\n\\r\\n\\t\\t// Preparazione degli array per i vincitori e i premi\\r\\n\\t\\taddress[] memory finalWinnersAddresses = new address[](winnersCount);\\r\\n\\t\\tuint256[] memory finalPrizeAmounts = new uint256[](winnersCount);\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < winnersCount; i++) {\\r\\n\\t\\t\\tfinalWinnersAddresses[i] = predictions[winners[i].index].predictor;\\r\\n\\t\\t\\t// Distribuzione equa del premio\\r\\n\\t\\t\\tfinalPrizeAmounts[i] = totalPrize / winnersCount;\\r\\n\\t\\t\\tAddress.sendValue(\\r\\n\\t\\t\\t\\tpayable(finalWinnersAddresses[i]),\\r\\n\\t\\t\\t\\tfinalPrizeAmounts[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\troundWinners = finalWinnersAddresses;\\r\\n\\r\\n\\t\\temit TournamentResolved(\\r\\n\\t\\t\\tcurrentRound,\\r\\n\\t\\t\\tfinalWinnersAddresses,\\r\\n\\t\\t\\tfinalPrizeAmounts\\r\\n\\t\\t);\\r\\n\\t\\t_resetTournament();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getLastWinners() external view returns (address[] memory) {\\r\\n\\t\\treturn roundWinners;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPrice() public view returns (uint256) {\\r\\n\\t\\treturn oracle.getLatestPrice() * 1e10;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getLatestRoundPrice() external view returns (uint256) {\\r\\n\\t\\treturn lastRoundPrice;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getCurrentRound() external view returns (uint256) {\\r\\n\\t\\treturn currentRound;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getMaxPartecipants() external view returns (uint256) {\\r\\n\\t\\treturn maxParticipants;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getCurrentRoundPartecipants() external view returns (uint256) {\\r\\n\\t\\treturn predictions.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getCurrentPricePool() external view returns (uint256) {\\r\\n\\t\\treturn prizePool;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getNextVerificationTime() external view returns (uint256) {\\r\\n\\t\\treturn verificationTime;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPredictions() external view returns (Prediction[] memory) {\\r\\n\\t\\treturn predictions;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPartecipants() external view returns (address[] memory) {\\r\\n\\t\\taddress[] memory partecipants = new address[](predictions.length);\\r\\n\\t\\tfor (uint256 i = 0; i < predictions.length; i++) {\\r\\n\\t\\t\\tpartecipants[i] = predictions[i].predictor;\\r\\n\\t\\t}\\r\\n\\t\\treturn partecipants;\\r\\n\\t}\\r\\n\\r\\n\\treceive() external payable {\\r\\n\\t\\tprizePool += msg.value;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x1a361e2fe1d161fa6a67cf1ff26f9f8474c9da7b9baecb1db0971921f64261a8\",\"license\":\"MIT\"},\"contracts/helpers/Oracle.sol\":{\"content\":\"import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract Oracle {\\r\\n\\tAggregatorV3Interface internal priceFeed;\\r\\n\\r\\n\\tconstructor(address _priceFeedAddress) {\\r\\n\\t\\tpriceFeed = AggregatorV3Interface(_priceFeedAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getLatestPrice() public view returns (uint256) {\\r\\n\\t\\t(, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n\\t\\t// Assumiamo che il prezzo sia sempre positivo\\r\\n\\t\\treturn uint256(price); // Adatta questa moltiplicazione in base alla tua necessit\\u00e0\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x3d71c8afb17be59e107fc8f69d49dc6bffef1ad3570441adebc01f187337135b\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1573,"contract":"contracts/community/Tournament.sol:Tournament","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":3391,"contract":"contracts/community/Tournament.sol:Tournament","label":"oracle","offset":0,"slot":"1","type":"t_contract(Oracle)7912"},{"astId":3394,"contract":"contracts/community/Tournament.sol:Tournament","label":"keeperPercentageFee","offset":0,"slot":"2","type":"t_uint256"},{"astId":3397,"contract":"contracts/community/Tournament.sol:Tournament","label":"submissionEndTime","offset":0,"slot":"3","type":"t_uint256"},{"astId":3400,"contract":"contracts/community/Tournament.sol:Tournament","label":"verificationEndTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":3403,"contract":"contracts/community/Tournament.sol:Tournament","label":"resolutionEndTime","offset":0,"slot":"5","type":"t_uint256"},{"astId":3414,"contract":"contracts/community/Tournament.sol:Tournament","label":"maxParticipants","offset":0,"slot":"6","type":"t_uint256"},{"astId":3416,"contract":"contracts/community/Tournament.sol:Tournament","label":"lastRoundPrice","offset":0,"slot":"7","type":"t_uint256"},{"astId":3420,"contract":"contracts/community/Tournament.sol:Tournament","label":"predictions","offset":0,"slot":"8","type":"t_array(t_struct(Prediction)3412_storage)dyn_storage"},{"astId":3422,"contract":"contracts/community/Tournament.sol:Tournament","label":"verificationTime","offset":0,"slot":"9","type":"t_uint256"},{"astId":3424,"contract":"contracts/community/Tournament.sol:Tournament","label":"priceFeedAddress","offset":0,"slot":"10","type":"t_address"},{"astId":3426,"contract":"contracts/community/Tournament.sol:Tournament","label":"prizePool","offset":0,"slot":"11","type":"t_uint256"},{"astId":3429,"contract":"contracts/community/Tournament.sol:Tournament","label":"currentRound","offset":0,"slot":"12","type":"t_uint256"},{"astId":3433,"contract":"contracts/community/Tournament.sol:Tournament","label":"scores","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3437,"contract":"contracts/community/Tournament.sol:Tournament","label":"prizePerScore","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3440,"contract":"contracts/community/Tournament.sol:Tournament","label":"roundWinners","offset":0,"slot":"15","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(Prediction)3412_storage)dyn_storage":{"base":"t_struct(Prediction)3412_storage","encoding":"dynamic_array","label":"struct Tournament.Prediction[]","numberOfBytes":"32"},"t_contract(Oracle)7912":{"encoding":"inplace","label":"contract Oracle","numberOfBytes":"20"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Prediction)3412_storage":{"encoding":"inplace","label":"struct Tournament.Prediction","members":[{"astId":3405,"contract":"contracts/community/Tournament.sol:Tournament","label":"round","offset":0,"slot":"0","type":"t_uint256"},{"astId":3407,"contract":"contracts/community/Tournament.sol:Tournament","label":"predictor","offset":0,"slot":"1","type":"t_address"},{"astId":3409,"contract":"contracts/community/Tournament.sol:Tournament","label":"predictedPrice","offset":0,"slot":"2","type":"t_uint256"},{"astId":3411,"contract":"contracts/community/Tournament.sol:Tournament","label":"amount","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/core/BaluniAgent.sol":{"BaluniAgent":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct BaluniAgent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC20 token failed."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes a new instance of the Agent contract.","params":{"_owner":"The address of the contract owner.","_router":"The address of the router contract."}},"execute((address,uint256,bytes)[],address[])":{"details":"Executes a batch of calls and performs token operations.","params":{"calls":"An array of Call structs representing the calls to be executed.","tokensReturn":"An array of token addresses to return after the batch call."}},"getRouter()":{"details":"Returns the address of the router contract.","returns":{"_0":"The address of the router contract."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":215,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803460bc57601f61083438819003918201601f19168301916001600160401b0383118484101760c157808492604094855283398101031260bc57604b602060458360d7565b920160d7565b6001600160a01b0390811691903383900360895760018060a01b03199116816000541617600055600154161760015560405161074990816100eb8239f35b60405162461bcd60e51b815260206004820152600b60248201526a27b7363c902937baba32b960a91b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360bc5756fe608060408181526004908136101561001657600080fd5b600092833560e01c9081638da5cb5b1461045357508063b0f479a11461042b5763eedc3c501461004557600080fd5b3461042757806003193601126104275767ffffffffffffffff9082358281116103dc576100759036908501610476565b91909360248035858111610423576100909036908401610476565b90956001600160a01b0395600198878a541633036103e0578a5b82811061031c5750505050848754169084518092630c2fe7ff60e11b8252818660209586935afa908115610312578a916102e1575b50888a5b888a858084106101fb579450505050506100fb578880f35b88805b82811061010b5750508880f35b89918861012161011c84878e610570565b6104e4565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036101605750504761014d575b0189906100fe565b61015b888c5416479061066f565b610145565b88516370a0823160e01b8152308982015292935090919085828881845afa9182156101f157908392918d9594926101bb575b508a600a83116101a6575b50505050610145565b6101b2935416906105a9565b8a38808a61019d565b945090508584813d81116101ea575b6101d481836104f8565b810103126101e6578b93519038610192565b5080fd5b503d6101ca565b89513d85823e3d90fd5b8361011c9161020993610570565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361024857506102406127106102368547610580565b048a84541661066f565b0189906100e3565b88516370a0823160e01b815230898201529192509085818881855afa908d82156102d6578d94939286929061029b575b5061028a610296939261271092610580565b04908b855416906105a9565b610240565b92945050508581813d83116102cf575b6102b581836104f8565b810103126102cb57518b9290849061028a610278565b8c80fd5b503d6102ab565b8a51903d90823e3d90fd5b90508281813d831161030b575b6102f881836104f8565b810103126103075751386100df565b8980fd5b503d6102ee565b86513d8c823e3d90fd5b61032a61011c8285856104ac565b8c6020918261033a8588886104ac565b0135906103488588886104ac565b8c81013590601e19813603018212156103dc57018035908982116103dc5785019281360384136103dc578493828f519384928337810185815203925af161038d610530565b501561039b57508a016100aa565b876011886064938c519362461bcd60e51b85528401528201527f42617463682063616c6c206661696c65640000000000000000000000000000006044820152fd5b8480fd5b865162461bcd60e51b8152602081880152601b60248201527f43616c6c61626c65206f6e6c792062792074686520726f7574657200000000006044820152606490fd5b8780fd5b8280fd5b8382346101e657816003193601126101e6576020906001600160a01b03600154169051908152f35b8490346101e657816003193601126101e6576001600160a01b0360209254168152f35b9181601f840112156104a75782359167ffffffffffffffff83116104a7576020808501948460051b0101116104a757565b600080fd5b91908110156104ce5760051b81013590605e19813603018212156104a7570190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036104a75790565b90601f8019910116810190811067ffffffffffffffff82111761051a57604052565b634e487b7160e01b600052604160045260246000fd5b3d1561056b573d9067ffffffffffffffff821161051a576040519161055f601f8201601f1916602001846104f8565b82523d6000602084013e565b606090565b91908110156104ce5760051b0190565b8181029291811591840414171561059357565b634e487b7160e01b600052601160045260246000fd5b91909160405192602084019263a9059cbb60e01b84526001600160a01b038092166024860152604485015260448452608084019184831067ffffffffffffffff84111761051a57610614926040521692600080938192519082875af161060d610530565b90846106c2565b908151918215159283610644575b50505061062c5750565b60249060405190635274afe760e01b82526004820152fd5b8192935090602091810103126101e657602001519081159182150361066c5750388080610622565b80fd5b8147106106aa5760008080936001600160a01b038294165af1610690610530565b501561069857565b604051630a12f52160e11b8152600490fd5b60405163cd78605960e01b8152306004820152602490fd5b906106d7575080511561069857805190602001fd5b8151158061070a575b6106e8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156106e056fea26469706673582212205930771bdac7a28577e83853179585c14d2d1de60202bee4d616bc2925c9934164736f6c63430008190033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x834 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xD7 JUMP JUMPDEST SWAP3 ADD PUSH1 0xD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 CALLER DUP4 SWAP1 SUB PUSH1 0x89 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP2 AND DUP2 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x749 SWAP1 DUP2 PUSH2 0xEB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x27B7363C902937BABA32B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xBC JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI POP DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x42B JUMPI PUSH4 0xEEDC3C50 EQ PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x3DC JUMPI PUSH2 0x75 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x476 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x24 DUP1 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x423 JUMPI PUSH2 0x90 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x476 JUMP JUMPDEST SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH1 0x1 SWAP9 DUP8 DUP11 SLOAD AND CALLER SUB PUSH2 0x3E0 JUMPI DUP11 JUMPDEST DUP3 DUP2 LT PUSH2 0x31C JUMPI POP POP POP POP DUP5 DUP8 SLOAD AND SWAP1 DUP5 MLOAD DUP1 SWAP3 PUSH4 0xC2FE7FF PUSH1 0xE1 SHL DUP3 MSTORE DUP2 DUP7 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x312 JUMPI DUP11 SWAP2 PUSH2 0x2E1 JUMPI JUMPDEST POP DUP9 DUP11 JUMPDEST DUP9 DUP11 DUP6 DUP1 DUP5 LT PUSH2 0x1FB JUMPI SWAP5 POP POP POP POP POP PUSH2 0xFB JUMPI DUP9 DUP1 RETURN JUMPDEST DUP9 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x10B JUMPI POP POP DUP9 DUP1 RETURN JUMPDEST DUP10 SWAP2 DUP9 PUSH2 0x121 PUSH2 0x11C DUP5 DUP8 DUP15 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x160 JUMPI POP POP SELFBALANCE PUSH2 0x14D JUMPI JUMPDEST ADD DUP10 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x15B DUP9 DUP13 SLOAD AND SELFBALANCE SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP1 DUP6 DUP3 DUP9 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1F1 JUMPI SWAP1 DUP4 SWAP3 SWAP2 DUP14 SWAP6 SWAP5 SWAP3 PUSH2 0x1BB JUMPI JUMPDEST POP DUP11 PUSH1 0xA DUP4 GT PUSH2 0x1A6 JUMPI JUMPDEST POP POP POP POP PUSH2 0x145 JUMP JUMPDEST PUSH2 0x1B2 SWAP4 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST DUP11 CODESIZE DUP1 DUP11 PUSH2 0x19D JUMP JUMPDEST SWAP5 POP SWAP1 POP DUP6 DUP5 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x1EA JUMPI JUMPDEST PUSH2 0x1D4 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI DUP12 SWAP4 MLOAD SWAP1 CODESIZE PUSH2 0x192 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x11C SWAP2 PUSH2 0x209 SWAP4 PUSH2 0x570 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x248 JUMPI POP PUSH2 0x240 PUSH2 0x2710 PUSH2 0x236 DUP6 SELFBALANCE PUSH2 0x580 JUMP JUMPDEST DIV DUP11 DUP5 SLOAD AND PUSH2 0x66F JUMP JUMPDEST ADD DUP10 SWAP1 PUSH2 0xE3 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP6 DUP2 DUP9 DUP2 DUP6 GAS STATICCALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0x2D6 JUMPI DUP14 SWAP5 SWAP4 SWAP3 DUP7 SWAP3 SWAP1 PUSH2 0x29B JUMPI JUMPDEST POP PUSH2 0x28A PUSH2 0x296 SWAP4 SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0x580 JUMP JUMPDEST DIV SWAP1 DUP12 DUP6 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2CF JUMPI JUMPDEST PUSH2 0x2B5 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2CB JUMPI MLOAD DUP12 SWAP3 SWAP1 DUP5 SWAP1 PUSH2 0x28A PUSH2 0x278 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2AB JUMP JUMPDEST DUP11 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x30B JUMPI JUMPDEST PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x307 JUMPI MLOAD CODESIZE PUSH2 0xDF JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2EE JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32A PUSH2 0x11C DUP3 DUP6 DUP6 PUSH2 0x4AC JUMP JUMPDEST DUP13 PUSH1 0x20 SWAP2 DUP3 PUSH2 0x33A DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST ADD CALLDATALOAD SWAP1 PUSH2 0x348 DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3DC JUMPI ADD DUP1 CALLDATALOAD SWAP1 DUP10 DUP3 GT PUSH2 0x3DC JUMPI DUP6 ADD SWAP3 DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0x3DC JUMPI DUP5 SWAP4 DUP3 DUP16 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0x38D PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x39B JUMPI POP DUP11 ADD PUSH2 0xAA JUMP JUMPDEST DUP8 PUSH1 0x11 DUP9 PUSH1 0x64 SWAP4 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42617463682063616C6C206661696C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C61626C65206F6E6C792062792074686520726F757465720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP3 SLOAD AND DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4A7 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x4A7 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x4A7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x5E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x4A7 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4A7 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x51A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x55F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x4F8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x593 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x44 DUP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP2 DUP5 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x51A JUMPI PUSH2 0x614 SWAP3 PUSH1 0x40 MSTORE AND SWAP3 PUSH1 0x0 DUP1 SWAP4 DUP2 SWAP3 MLOAD SWAP1 DUP3 DUP8 GAS CALL PUSH2 0x60D PUSH2 0x530 JUMP JUMPDEST SWAP1 DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x644 JUMPI JUMPDEST POP POP POP PUSH2 0x62C JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x66C JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x622 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x690 PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x698 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6D7 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x698 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x70A JUMPI JUMPDEST PUSH2 0x6E8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x6E0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE ADDRESS PUSH24 0x1BDAC7A28577E83853179585C14D2D1DE60202BEE4D616BC 0x29 0x25 0xC9 SWAP4 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"308:3437:18:-:0;;;;;;;;;;;;;-1:-1:-1;;308:3437:18;;;;-1:-1:-1;;;;;308:3437:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;308:3437:18;;;;;1120:10;:21;;;308:3437;;;;;;;;;;;-1:-1:-1;308:3437:18;;;-1:-1:-1;308:3437:18;1181:16;308:3437;;;1181:16;308:3437;;;;;;;;;;;;;-1:-1:-1;;;308:3437:18;;;;;;;;;;;;-1:-1:-1;;;308:3437:18;;;;;;;;-1:-1:-1;308:3437:18;;;;;;-1:-1:-1;308:3437:18;;;;;-1:-1:-1;308:3437:18;;;;-1:-1:-1;;;;;308:3437:18;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_struct_Call_calldata_dyn_calldata":{"entryPoint":1142,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":1392,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_struct_Call_calldata_dyn_calldata":{"entryPoint":1196,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_uint256":{"entryPoint":1408,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":1328,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":0},"fun_safeTransfer":{"entryPoint":1449,"id":1039,"parameterSlots":3,"returnSlots":0},"fun_sendValue":{"entryPoint":1647,"id":1336,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":1730,"id":1491,"parameterSlots":3,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":1252,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004908136101561001657600080fd5b600092833560e01c9081638da5cb5b1461045357508063b0f479a11461042b5763eedc3c501461004557600080fd5b3461042757806003193601126104275767ffffffffffffffff9082358281116103dc576100759036908501610476565b91909360248035858111610423576100909036908401610476565b90956001600160a01b0395600198878a541633036103e0578a5b82811061031c5750505050848754169084518092630c2fe7ff60e11b8252818660209586935afa908115610312578a916102e1575b50888a5b888a858084106101fb579450505050506100fb578880f35b88805b82811061010b5750508880f35b89918861012161011c84878e610570565b6104e4565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036101605750504761014d575b0189906100fe565b61015b888c5416479061066f565b610145565b88516370a0823160e01b8152308982015292935090919085828881845afa9182156101f157908392918d9594926101bb575b508a600a83116101a6575b50505050610145565b6101b2935416906105a9565b8a38808a61019d565b945090508584813d81116101ea575b6101d481836104f8565b810103126101e6578b93519038610192565b5080fd5b503d6101ca565b89513d85823e3d90fd5b8361011c9161020993610570565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361024857506102406127106102368547610580565b048a84541661066f565b0189906100e3565b88516370a0823160e01b815230898201529192509085818881855afa908d82156102d6578d94939286929061029b575b5061028a610296939261271092610580565b04908b855416906105a9565b610240565b92945050508581813d83116102cf575b6102b581836104f8565b810103126102cb57518b9290849061028a610278565b8c80fd5b503d6102ab565b8a51903d90823e3d90fd5b90508281813d831161030b575b6102f881836104f8565b810103126103075751386100df565b8980fd5b503d6102ee565b86513d8c823e3d90fd5b61032a61011c8285856104ac565b8c6020918261033a8588886104ac565b0135906103488588886104ac565b8c81013590601e19813603018212156103dc57018035908982116103dc5785019281360384136103dc578493828f519384928337810185815203925af161038d610530565b501561039b57508a016100aa565b876011886064938c519362461bcd60e51b85528401528201527f42617463682063616c6c206661696c65640000000000000000000000000000006044820152fd5b8480fd5b865162461bcd60e51b8152602081880152601b60248201527f43616c6c61626c65206f6e6c792062792074686520726f7574657200000000006044820152606490fd5b8780fd5b8280fd5b8382346101e657816003193601126101e6576020906001600160a01b03600154169051908152f35b8490346101e657816003193601126101e6576001600160a01b0360209254168152f35b9181601f840112156104a75782359167ffffffffffffffff83116104a7576020808501948460051b0101116104a757565b600080fd5b91908110156104ce5760051b81013590605e19813603018212156104a7570190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036104a75790565b90601f8019910116810190811067ffffffffffffffff82111761051a57604052565b634e487b7160e01b600052604160045260246000fd5b3d1561056b573d9067ffffffffffffffff821161051a576040519161055f601f8201601f1916602001846104f8565b82523d6000602084013e565b606090565b91908110156104ce5760051b0190565b8181029291811591840414171561059357565b634e487b7160e01b600052601160045260246000fd5b91909160405192602084019263a9059cbb60e01b84526001600160a01b038092166024860152604485015260448452608084019184831067ffffffffffffffff84111761051a57610614926040521692600080938192519082875af161060d610530565b90846106c2565b908151918215159283610644575b50505061062c5750565b60249060405190635274afe760e01b82526004820152fd5b8192935090602091810103126101e657602001519081159182150361066c5750388080610622565b80fd5b8147106106aa5760008080936001600160a01b038294165af1610690610530565b501561069857565b604051630a12f52160e11b8152600490fd5b60405163cd78605960e01b8152306004820152602490fd5b906106d7575080511561069857805190602001fd5b8151158061070a575b6106e8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156106e056fea26469706673582212205930771bdac7a28577e83853179585c14d2d1de60202bee4d616bc2925c9934164736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI POP DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x42B JUMPI PUSH4 0xEEDC3C50 EQ PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x3DC JUMPI PUSH2 0x75 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x476 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x24 DUP1 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x423 JUMPI PUSH2 0x90 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x476 JUMP JUMPDEST SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH1 0x1 SWAP9 DUP8 DUP11 SLOAD AND CALLER SUB PUSH2 0x3E0 JUMPI DUP11 JUMPDEST DUP3 DUP2 LT PUSH2 0x31C JUMPI POP POP POP POP DUP5 DUP8 SLOAD AND SWAP1 DUP5 MLOAD DUP1 SWAP3 PUSH4 0xC2FE7FF PUSH1 0xE1 SHL DUP3 MSTORE DUP2 DUP7 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x312 JUMPI DUP11 SWAP2 PUSH2 0x2E1 JUMPI JUMPDEST POP DUP9 DUP11 JUMPDEST DUP9 DUP11 DUP6 DUP1 DUP5 LT PUSH2 0x1FB JUMPI SWAP5 POP POP POP POP POP PUSH2 0xFB JUMPI DUP9 DUP1 RETURN JUMPDEST DUP9 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x10B JUMPI POP POP DUP9 DUP1 RETURN JUMPDEST DUP10 SWAP2 DUP9 PUSH2 0x121 PUSH2 0x11C DUP5 DUP8 DUP15 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x160 JUMPI POP POP SELFBALANCE PUSH2 0x14D JUMPI JUMPDEST ADD DUP10 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x15B DUP9 DUP13 SLOAD AND SELFBALANCE SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP1 DUP6 DUP3 DUP9 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1F1 JUMPI SWAP1 DUP4 SWAP3 SWAP2 DUP14 SWAP6 SWAP5 SWAP3 PUSH2 0x1BB JUMPI JUMPDEST POP DUP11 PUSH1 0xA DUP4 GT PUSH2 0x1A6 JUMPI JUMPDEST POP POP POP POP PUSH2 0x145 JUMP JUMPDEST PUSH2 0x1B2 SWAP4 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST DUP11 CODESIZE DUP1 DUP11 PUSH2 0x19D JUMP JUMPDEST SWAP5 POP SWAP1 POP DUP6 DUP5 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x1EA JUMPI JUMPDEST PUSH2 0x1D4 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI DUP12 SWAP4 MLOAD SWAP1 CODESIZE PUSH2 0x192 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x11C SWAP2 PUSH2 0x209 SWAP4 PUSH2 0x570 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x248 JUMPI POP PUSH2 0x240 PUSH2 0x2710 PUSH2 0x236 DUP6 SELFBALANCE PUSH2 0x580 JUMP JUMPDEST DIV DUP11 DUP5 SLOAD AND PUSH2 0x66F JUMP JUMPDEST ADD DUP10 SWAP1 PUSH2 0xE3 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP6 DUP2 DUP9 DUP2 DUP6 GAS STATICCALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0x2D6 JUMPI DUP14 SWAP5 SWAP4 SWAP3 DUP7 SWAP3 SWAP1 PUSH2 0x29B JUMPI JUMPDEST POP PUSH2 0x28A PUSH2 0x296 SWAP4 SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0x580 JUMP JUMPDEST DIV SWAP1 DUP12 DUP6 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2CF JUMPI JUMPDEST PUSH2 0x2B5 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2CB JUMPI MLOAD DUP12 SWAP3 SWAP1 DUP5 SWAP1 PUSH2 0x28A PUSH2 0x278 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2AB JUMP JUMPDEST DUP11 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x30B JUMPI JUMPDEST PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x307 JUMPI MLOAD CODESIZE PUSH2 0xDF JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2EE JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32A PUSH2 0x11C DUP3 DUP6 DUP6 PUSH2 0x4AC JUMP JUMPDEST DUP13 PUSH1 0x20 SWAP2 DUP3 PUSH2 0x33A DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST ADD CALLDATALOAD SWAP1 PUSH2 0x348 DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3DC JUMPI ADD DUP1 CALLDATALOAD SWAP1 DUP10 DUP3 GT PUSH2 0x3DC JUMPI DUP6 ADD SWAP3 DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0x3DC JUMPI DUP5 SWAP4 DUP3 DUP16 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0x38D PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x39B JUMPI POP DUP11 ADD PUSH2 0xAA JUMP JUMPDEST DUP8 PUSH1 0x11 DUP9 PUSH1 0x64 SWAP4 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42617463682063616C6C206661696C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C61626C65206F6E6C792062792074686520726F757465720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP3 SLOAD AND DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4A7 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x4A7 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x4A7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x5E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x4A7 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4A7 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x51A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x55F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x4F8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x593 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x44 DUP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP2 DUP5 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x51A JUMPI PUSH2 0x614 SWAP3 PUSH1 0x40 MSTORE AND SWAP3 PUSH1 0x0 DUP1 SWAP4 DUP2 SWAP3 MLOAD SWAP1 DUP3 DUP8 GAS CALL PUSH2 0x60D PUSH2 0x530 JUMP JUMPDEST SWAP1 DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x644 JUMPI JUMPDEST POP POP POP PUSH2 0x62C JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x66C JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x622 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x690 PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x698 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6D7 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x698 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x70A JUMPI JUMPDEST PUSH2 0x6E8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x6E0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE ADDRESS PUSH24 0x1BDAC7A28577E83853179585C14D2D1DE60202BEE4D616BC 0x29 0x25 0xC9 SWAP4 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"308:3437:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1256:6:18;;308:3437;;;;;1242:10;:20;308:3437;;1744:10;1756:16;;;;;;308:3437;;;;;;;;;;;;;;;;2434:27;;308:3437;;;2434:27;;;;;;;;;;;;;;1739:181;2471:13;;;2486:23;;;;;;;;;3243:22;;;;;;3239:499;;308:3437;;;3239:499;3278:9;;3289:22;;;;;;3239:499;;308:3437;;;3278:9;3338:15;;;;;;;;;:::i;:::-;;:::i;:::-;308:3437;499:42;3364:16;;499:42;;3394:21;;;3390:96;;3360:330;308:3437;3278:9;;;;3390:96;3455:21;308:3437;;;;3455:21;;;:::i;:::-;3390:96;;3360:330;308:3437;;-1:-1:-1;;;3525:61:18;;3573:4;3525:61;;;308:3437;;;-1:-1:-1;308:3437:18;;;3525:61;308:3437;3525:61;308:3437;;3525:61;;;;;;;;;;;;;;;;;3360:330;3598:15;;691:2;3598:15;;3594:89;;3360:330;;;;;;;3594:89;3666:7;308:3437;;;3666:7;;:::i;:::-;3594:89;;;;;;3525:61;;-1:-1:-1;3525:61:18;-1:-1:-1;3525:61:18;;;;;;;;;;;;;:::i;:::-;;;308:3437;;;;;;;3525:61;;;;308:3437;;;;3525:61;;;;;;308:3437;;;;;;;;;2511:3;2538:15;;;;;;:::i;:::-;308:3437;499:42;2563:16;;499:42;;2683:21;2782:6;735:5;2683:30;:21;;:30;:::i;:::-;735:5;308:3437;;;;2782:6;:::i;:::-;308:3437;2471:13;;;;2559:416;308:3437;;-1:-1:-1;;;2827:38:18;;2859:4;2827:38;;;308:3437;;;-1:-1:-1;308:3437:18;2827:38;308:3437;2827:38;308:3437;;2827:38;;;;;;;;;;;;;;;;;2559:416;2882:16;;2961:6;2882:16;;735:5;2882:16;;:::i;:::-;735:5;308:3437;;;;;2961:6;;:::i;:::-;2559:416;;2827:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;308:3437;;;;;;;;;;2882:16;2827:38;;308:3437;;;;2827:38;;;;;;308:3437;;;;;;;;;;2434:27;;;;;;;;;;;;;;;;:::i;:::-;;;308:3437;;;;;2434:27;;;308:3437;;;;2434:27;;;;;;308:3437;;;;;;;;;1774:3;1804:11;:8;;;;;:::i;:11::-;308:3437;;1829:8;;;;;;;:::i;:::-;:14;308:3437;1852:8;;;;;;:::i;:::-;:13;;;308:3437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:67;;;;;;:::i;:::-;;308:3437;;;1774:3;;308:3437;1744:10;;308:3437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;308:3437:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2169:6:18;308:3437;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;308:3437:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;308:3437:18;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;308:3437:18;;;;;:::i;:::-;;;;-1:-1:-1;308:3437:18;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;499:42::-;;;;;;;;;;;;;;;;:::o;:::-;308:3437;;;499:42;;;;;;;;1303:160:8;;;;308:3437:18;;1412:43:8;;;;308:3437:18;;;;1412:43:8;;-1:-1:-1;;;;;308:3437:18;;;1412:43:8;;;308:3437:18;;;;;;1412:43:8;;308:3437:18;;;;;;;;;;;;;3510:55:9;308:3437:18;;;;-1:-1:-1;;3462:31:9;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;308:3437:18;;;4551:22:8;;;;:57;;;;1303:160;4547:135;;;;;1303:160;:::o;4547:135::-;1412:43;308:3437:18;;;4631:40:8;;;;;;;;;308:3437:18;4631:40:8;4551:57;4578:30;;;;;1412:43;4578:30;;;308:3437:18;;;;1412:43:8;4578:30;308:3437:18;;;;;;;;;;4551:57:8;;;;;;308:3437:18;;;1531:331:9;1616:21;;:30;1612:109;;1750:33;308:3437:18;;;-1:-1:-1;;;;;308:3437:18;;;1750:33:9;;;;:::i;:::-;;1797:8;1793:63;;1531:331::o;1793:63::-;308:3437:18;;-1:-1:-1;;;1828:17:9;;;;;1612:109;308:3437:18;;-1:-1:-1;;;1669:41:9;;1624:4;1669:41;;;308:3437:18;;;1669:41:9;4625:582;;4797:8;;-1:-1:-1;308:3437:18;;5874:21:9;:17;;6046:142;;;;;;4793:408;308:3437:18;;5045:22:9;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;308:3437:18;;-1:-1:-1;;;5121:24:9;;-1:-1:-1;;;;;308:3437:18;;;5121:24:9;;;308:3437:18;;;5121:24:9;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"373000","executionCost":"infinite","totalCost":"infinite"},"external":{"execute((address,uint256,bytes)[],address[])":"infinite","getRouter()":"2322","owner()":"2286"},"internal":{"_chargeFees(address[] calldata)":"infinite","_returnTokens(address[] calldata)":"infinite"}},"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50","getRouter()":"b0f479a1","owner()":"8da5cb5b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BaluniAgent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes a new instance of the Agent contract.\",\"params\":{\"_owner\":\"The address of the contract owner.\",\"_router\":\"The address of the router contract.\"}},\"execute((address,uint256,bytes)[],address[])\":{\"details\":\"Executes a batch of calls and performs token operations.\",\"params\":{\"calls\":\"An array of Call structs representing the calls to be executed.\",\"tokensReturn\":\"An array of token addresses to return after the batch call.\"}},\"getRouter()\":{\"details\":\"Returns the address of the router contract.\",\"returns\":{\"_0\":\"The address of the router contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Only the router contract can deploy this contract.\"},\"execute((address,uint256,bytes)[],address[])\":{\"notice\":\"Only the router contract is allowed to execute this function.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaluniAgent.sol\":\"BaluniAgent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"contracts/core/BaluniAgent.sol\":{\"content\":\"pragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\ninterface IRouter {\\r\\n\\tfunction getBpsFee() external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract BaluniAgent {\\r\\n\\tusing SafeERC20 for IERC20Metadata;\\r\\n\\tusing Address for address payable;\\r\\n\\r\\n\\taddress public owner;\\r\\n\\taddress private router;\\r\\n\\taddress internal constant _NATIVE =\\r\\n\\t\\t0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\r\\n\\tuint256 internal constant _DUST = 10;\\r\\n\\tuint256 internal constant _BPS_BASE = 10000;\\r\\n\\r\\n\\tstruct Call {\\r\\n\\t\\taddress to;\\r\\n\\t\\tuint256 value;\\r\\n\\t\\tbytes data;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Initializes a new instance of the Agent contract.\\r\\n\\t * @param _owner The address of the contract owner.\\r\\n\\t * @param _router The address of the router contract.\\r\\n\\t * @notice Only the router contract can deploy this contract.\\r\\n\\t */\\r\\n\\tconstructor(address _owner, address _router) {\\r\\n\\t\\trequire(msg.sender == _router, \\\"Only Router\\\");\\r\\n\\t\\towner = _owner;\\r\\n\\t\\trouter = _router;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyRouter() {\\r\\n\\t\\trequire(msg.sender == router, \\\"Callable only by the router\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Executes a batch of calls and performs token operations.\\r\\n\\t * @param calls An array of Call structs representing the calls to be executed.\\r\\n\\t * @param tokensReturn An array of token addresses to return after the batch call.\\r\\n\\t * @notice Only the router contract is allowed to execute this function.\\r\\n\\t */\\r\\n\\tfunction execute(\\r\\n\\t\\tCall[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external onlyRouter {\\r\\n\\t\\tfor (uint i = 0; i < calls.length; i++) {\\r\\n\\t\\t\\t(bool success, ) = calls[i].to.call{ value: calls[i].value }(\\r\\n\\t\\t\\t\\tcalls[i].data\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(success, \\\"Batch call failed\\\");\\r\\n\\t\\t}\\r\\n\\t\\t_chargeFees(tokensReturn);\\r\\n\\t\\t_returnTokens(tokensReturn);\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the address of the router contract.\\r\\n\\t * @return The address of the router contract.\\r\\n\\t */\\r\\n\\tfunction getRouter() public view returns (address) {\\r\\n\\t\\treturn router;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to charge fees for the tokens returned.\\r\\n\\t * @param tokensReturn The array of tokens to charge fees for.\\r\\n\\t */\\r\\n\\tfunction _chargeFees(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 bpsFee = IRouter(router).getBpsFee();\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t// Use the native balance for amount calculation as wrap will be executed later\\r\\n\\t\\t\\t\\tamount = (address(this).balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\t// send to router\\r\\n\\t\\t\\t\\tpayable(router).sendValue(amount);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\t\\tamount = (balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(router, amount);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to return tokens to the owner.\\r\\n\\t * @param tokensReturn The array of tokens to return.\\r\\n\\t */\\r\\n\\tfunction _returnTokens(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 tokensReturnLength = tokensReturn.length;\\r\\n\\t\\tif (tokensReturnLength > 0) {\\r\\n\\t\\t\\tfor (uint256 i; i < tokensReturnLength; ) {\\r\\n\\t\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t\\tif (address(this).balance > 0) {\\r\\n\\t\\t\\t\\t\\t\\tpayable(owner).sendValue(address(this).balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 balance = IERC20Metadata(token).balanceOf(\\r\\n\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tif (balance > _DUST) {\\r\\n\\t\\t\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(owner, balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tunchecked {\\r\\n\\t\\t\\t\\t\\t++i;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xb82df35b2eddfe85c4c4ee4a1ef7074ebb7571dd986bde80ca8348dcbaee1066\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4249,"contract":"contracts/core/BaluniAgent.sol:BaluniAgent","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":4251,"contract":"contracts/core/BaluniAgent.sol:BaluniAgent","label":"router","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Only the router contract can deploy this contract."},"execute((address,uint256,bytes)[],address[])":{"notice":"Only the router contract is allowed to execute this function."}},"version":1}},"IRouter":{"abi":[{"inputs":[],"name":"getBpsFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getBpsFee()":"185fcffe"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getBpsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaluniAgent.sol\":\"IRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"contracts/core/BaluniAgent.sol\":{\"content\":\"pragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\ninterface IRouter {\\r\\n\\tfunction getBpsFee() external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract BaluniAgent {\\r\\n\\tusing SafeERC20 for IERC20Metadata;\\r\\n\\tusing Address for address payable;\\r\\n\\r\\n\\taddress public owner;\\r\\n\\taddress private router;\\r\\n\\taddress internal constant _NATIVE =\\r\\n\\t\\t0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\r\\n\\tuint256 internal constant _DUST = 10;\\r\\n\\tuint256 internal constant _BPS_BASE = 10000;\\r\\n\\r\\n\\tstruct Call {\\r\\n\\t\\taddress to;\\r\\n\\t\\tuint256 value;\\r\\n\\t\\tbytes data;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Initializes a new instance of the Agent contract.\\r\\n\\t * @param _owner The address of the contract owner.\\r\\n\\t * @param _router The address of the router contract.\\r\\n\\t * @notice Only the router contract can deploy this contract.\\r\\n\\t */\\r\\n\\tconstructor(address _owner, address _router) {\\r\\n\\t\\trequire(msg.sender == _router, \\\"Only Router\\\");\\r\\n\\t\\towner = _owner;\\r\\n\\t\\trouter = _router;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyRouter() {\\r\\n\\t\\trequire(msg.sender == router, \\\"Callable only by the router\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Executes a batch of calls and performs token operations.\\r\\n\\t * @param calls An array of Call structs representing the calls to be executed.\\r\\n\\t * @param tokensReturn An array of token addresses to return after the batch call.\\r\\n\\t * @notice Only the router contract is allowed to execute this function.\\r\\n\\t */\\r\\n\\tfunction execute(\\r\\n\\t\\tCall[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external onlyRouter {\\r\\n\\t\\tfor (uint i = 0; i < calls.length; i++) {\\r\\n\\t\\t\\t(bool success, ) = calls[i].to.call{ value: calls[i].value }(\\r\\n\\t\\t\\t\\tcalls[i].data\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(success, \\\"Batch call failed\\\");\\r\\n\\t\\t}\\r\\n\\t\\t_chargeFees(tokensReturn);\\r\\n\\t\\t_returnTokens(tokensReturn);\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the address of the router contract.\\r\\n\\t * @return The address of the router contract.\\r\\n\\t */\\r\\n\\tfunction getRouter() public view returns (address) {\\r\\n\\t\\treturn router;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to charge fees for the tokens returned.\\r\\n\\t * @param tokensReturn The array of tokens to charge fees for.\\r\\n\\t */\\r\\n\\tfunction _chargeFees(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 bpsFee = IRouter(router).getBpsFee();\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t// Use the native balance for amount calculation as wrap will be executed later\\r\\n\\t\\t\\t\\tamount = (address(this).balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\t// send to router\\r\\n\\t\\t\\t\\tpayable(router).sendValue(amount);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\t\\tamount = (balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(router, amount);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to return tokens to the owner.\\r\\n\\t * @param tokensReturn The array of tokens to return.\\r\\n\\t */\\r\\n\\tfunction _returnTokens(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 tokensReturnLength = tokensReturn.length;\\r\\n\\t\\tif (tokensReturnLength > 0) {\\r\\n\\t\\t\\tfor (uint256 i; i < tokensReturnLength; ) {\\r\\n\\t\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t\\tif (address(this).balance > 0) {\\r\\n\\t\\t\\t\\t\\t\\tpayable(owner).sendValue(address(this).balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 balance = IERC20Metadata(token).balanceOf(\\r\\n\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tif (balance > _DUST) {\\r\\n\\t\\t\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(owner, balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tunchecked {\\r\\n\\t\\t\\t\\t\\t++i;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xb82df35b2eddfe85c4c4ee4a1ef7074ebb7571dd986bde80ca8348dcbaee1066\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/core/BaluniRouter.sol":{"BaluniRouter":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"agent","type":"address"}],"name":"AgentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"ChangeBpsFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"ChangeLiquidateFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false,"internalType":"struct BaluniAgent.Call[]","name":"calls","type":"tuple[]"},{"indexed":false,"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"Execute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_LIQUIDATE_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceStakedOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnTokensAndSwapToUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"calculateRewardsEarned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsLiquidateFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"claimTo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct BaluniAgent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBpsFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUnitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"listAllTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"},{"internalType":"address","name":"asset","type":"address"}],"name":"mintERC20","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintUSDC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract IOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performArbitrage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"}],"name":"rebalance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakeTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenBalanceMap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"contract IUniswapV3Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"updateRewardIndexPublic","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userAgents","outputs":[{"internalType":"contract BaluniAgent","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC20 token failed."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_memory_array_string":{"entryPoint":1607,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":1707,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_7682":{"entryPoint":1664,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":1720,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":1739,"id":null,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":1752,"id":1684,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"604061012081523461064257610013610647565b9060206542616c756e6960d01b8184015261002c610647565b6542414c554e4960d01b82820152331561062a5760008054336001600160a01b0319821681178355919291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a38451906001600160401b03808311610616576004928354906001988983811c9316801561060c575b88841014610524578190601f938481116105be575b50889084831160011461055f578892610554575b5050600019600383901b1c191690891b1784555b82519182116105415760059283548981811c91168015610537575b8882101461052457908183859493116104d6575b508791831160011461047757869261046c575b5050600019600383901b1c191690871b1790555b84600655301594851580610467575b1561042457306080523060a052601e600d55612710600e55601e600f55730addd25a91563696d8567df78d5a01c9a991f9b860c05273e592427a0aece92de3edee1f18e0157c0586156460e05261010095731f98431c8ad98523631ae4a59f267346ea31f984875261040e57908492916101ca600354610680565b600355308352845282822090670de0b6b3a7640000918281540190558351828152837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef873093a3308352600785528383206102258154610680565b9055610232600954610680565b6009553383526008855242848420556009549081158015806103ba575b505050503082526008845261026783832054426106cb565b6301e133809190828111156103b157506102aa825b308552600787526102a5868620549161029f600a54600b8b5289892054906106cb565b926106b8565b6106b8565b0404308252600c84526102c18383209182546106ab565b9055600b600a54933083525220556102d76106d8565b50516153b091826107a88339608051828181610f0a015281816115e901526122bc015260a05182818161025701528181610d4501528181611d2a0152613a67015260c0518281816111f4015281816118c5015281816131b60152614428015260e051828181610a25015281816115a5015281816120b40152818161254b015281816127bc015281816132930152818161337a0152818161407d015281816141b201526146850152518181816104b70152818161053801528181610a01015281816110e30152818161207b015281816124e501526127630152f35b6102aa9061027c565b6103c5575b8061024f565b9091929394506103fb5750906103f08593926ec097ce7bc90715b34b9f100000000004600a546106ab565b600a553880806103bf565b634e487b7160e01b845260129052602483fd5b5060249184519163ec442f0560e01b8352820152fd5b845162461bcd60e51b8152808301859052601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b61014f565b01519050388061012c565b8487528787208a94509190601f198416885b8a8282106104c057505084116104a7575b505050811b019055610140565b015160001960f88460031b161c1916905538808061049a565b8385015186558d97909501949384019301610489565b9091925084875287872083808601871c8201928a871061051b575b9186958d9295949301881c01915b82811061050d575050610119565b8981558695508c91016104ff565b925081926104f1565b634e487b7160e01b875260228652602487fd5b90607f1690610105565b634e487b7160e01b855260418452602485fd5b0151905038806100d6565b8789528989208c94509190601f1984168a5b8c8282106105a8575050841161058f575b505050811b0184556100ea565b015160001960f88460031b161c19169055388080610582565b8385015186558f97909501949384019301610571565b9091508688528888208480850160051c8201928b8610610603575b918d91869594930160051c01915b8281106105f55750506100c2565b8a81558594508d91016105e7565b925081926105d9565b92607f16926100ad565b634e487b7160e01b84526041600452602484fd5b8251631e4fbdf760e01b815260006004820152602490fd5b600080fd5b60408051919082016001600160401b0381118382101761066a5760405260068252565b634e487b7160e01b600052604160045260246000fd5b90670de0b6b3a7640000820180921161069557565b634e487b7160e01b600052601160045260246000fd5b9190820180921161069557565b8181029291811591840414171561069557565b9190820391821161069557565b732791bca1f2de4661ed88a30c99a7a9449aa84174600081815260116020527fd858bff8317940b1bb2b6603753b280d3518ab8e24c32a7de1cc1e7559e16598546107a2576010546801000000000000000081101561078e57600181018060105581101561077a577f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720182905560105491815260116020526040902055600190565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b90509056fe6080604052600436101561001257600080fd5b60003560e01c8063012a33aa146135d557806306497cb91461358957806306fdde03146134c4578063095ea7b31461343e57806312f399cf1461313b57806318160ddd1461311d578063185fcffe14610cda57806323b872dd1461302a57806327d54a9214612ec2578063295b930014612ea75780632be01190146123695780632e17de78146122355780632f86556814611fec578063313ce56714611fd057806334a1ca8914611fa457806334decfc914611f8757806342966c6814611db55780634e71d92d14611cb657806350b1b34a146117ee5780635e7f8b761461172f57806365534d521461171157806370259077146116d757806370a082311461169d578063715018a61461164457806371ddcfb81461160d57806372f702f3146115c9578063735de9f7146115855780637811a7851461154a5780637b848914146114fe5780637d9fc717146112185780637dc0d1d0146111d4578063833d557f1461119a578063853771881461117c57806389a30271146111535780638b086764146111075780638bdb2afa146110c35780638da5cb5b1461109c57806395d89b4114610f88578063a694fc3a14610e71578063a9059cbb14610e40578063ab86c69e14610cf8578063b9f5e61714610cda578063bf9c89bb14610ca0578063cde53358146109ca578063dd62ed3e14610978578063eedc3c5014610325578063f2fde38b1461029e578063f377e7cf146102805763f7c618c11461023757600080fd5b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b600080fd5b3461027b57600036600319011261027b576020600954604051908152f35b3461027b57602036600319011261027b576102b7613641565b6102bf613c95565b6001600160a01b0380911690811561030c57600054826001600160a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461027b57610333366136b2565b919261033d613cc1565b60405160208101903360601b82526014815261035881613736565b5190203360005260126020526001600160a01b036040600020541615610869575b503360005260126020526001600160a01b036040600020541661039b846138cf565b946103a9604051968761376e565b8486526103b5856138cf565b601f190136602088013760005b85811061082f5750813b1561027b5791604051928391630eedc3c560e41b8352816044840160406004860152526064830160648360051b85010192826000905b82821061077d5750505050508181036003190160248301528581526020018460005b8781106107515750509181600081819503925af1801561065657610723575b5060005b828110610455576001600655005b610468610463828585613888565b6138ae565b90604051630b4c774160e11b81526001600160a01b0383166004820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12706024820152610bb860448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561065657600091610704575b5060405190630b4c774160e11b82526001600160a01b0384166004830152730d500b1d8e8ef31e21c99d1db9a6444d3adf127060248301526101f460448301526020826064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610656576000926106ca575b506001600160a01b031615908115916106b7575b50610588828761394d565b511515806106b0575b610698575b156105a6575b6001915001610447565b6040516370a0823160e01b8152306004820152916020836024816001600160a01b0385165afa92831561065657600093610662575b5060405163a9059cbb60e01b8152336004820152602481019390935260209083908160006001600160a01b0382604481015b0393165af191821561065657600192610627575b5061059c565b6106489060203d60201161064f575b610640818361376e565b810190613970565b5085610621565b503d610636565b6040513d6000823e3d90fd5b92506020833d602011610690575b8161067d6020938361376e565b8101031261027b5791519161060d6105db565b3d9150610670565b6106aa6001600160a01b0384166149c1565b50610596565b5080610591565b6001600160a01b0391501615158661057d565b6001600160a01b039192506106f69060203d6020116106fd575b6106ee818361376e565b810190613988565b9190610569565b503d6106e4565b61071d915060203d6020116106fd576106ee818361376e565b866104e8565b67ffffffffffffffff811161073b5760405283610443565b634e487b7160e01b600052604160045260246000fd5b91819350602080916001600160a01b0361076c60019561366d565b168152019301910190849291610424565b9193955091936063198882030185528535605e198336030181121561027b5782016001600160a01b036107af8261366d565b168252602081013560208301526040810135601e198236030181121561027b5701906020823592019167ffffffffffffffff811161027b57803603831361027b576001928260209392606060408695015280606083015280608093848401376000838284010152601f801991011601019701950192018795949391610402565b806001600160a01b036108486104636001948a8a613888565b16600052601160205260406000205415610862828a61394d565b52016103c2565b6040516108348082019082821067ffffffffffffffff83111761073b5782916108a091614b27843933815230602082015260400190565b03906000f58015610656576001600160a01b031663ffffffff813b1615610925573360008181526012602090815260409182902080546001600160a01b0319168517905581519283526001600160a01b03909316928201929092527f8c6e353968e7ffd60dba22ff7d2a4354af301f9d41858a35668e7292ec1301b69190a184610379565b60405162461bcd60e51b815260206004820152602560248201527f4167656e74206372656174696f6e206661696c65642c206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b3461027b57604036600319011261027b57610991613641565b610999613657565b906001600160a01b038091166000526002602052604060002091166000526020526020604060002054604051908152f35b3461027b5760208060031936011261027b57600435906109e8613cc1565b6109f3821515613b42565b6000916001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001693817f000000000000000000000000000000000000000000000000000000000000000016905b601054811015610c4f5780610a5c849261498a565b929054600393841b1c169154916040516370a0823160e01b815230600482015260249388828681865afa91821561065657600092610c20575b508115610c1457308314610c145760405163313ce56760e01b8152918983600481875afa9081156106565760ff8a92610ad895600091610be7575b50169261479b565b9060008051602061535b83398151915288818314610b8a5750604051630b4c774160e11b81526004810183905294850152610bb8604485015287846064818c5afa938415610656576001948791600091610b6d575b50610b39848885613e68565b1615610b5257610b4a913391613fc7565b505b01610a47565b610b6190610b68923391614581565b15156139a7565b610b4c565b610b8491508a3d8c116106fd576106ee818361376e565b8b610b2d565b60405163a9059cbb60e01b8152336004820152602481019490945292945084915060449082906000905af191821561065657600192610bca575b50610b4c565b610be090873d891161064f57610640818361376e565b5087610bc4565b610c0791508d803d10610c0d575b610bff818361376e565b810190613919565b8e610ad0565b503d610bf5565b50505060019150610b4c565b9091508881813d8311610c48575b610c38818361376e565b8101031261027b5751908a610a95565b503d610c2e565b7fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5610c9685610c7e813361482f565b60408051338152602081019290925290918291820190565b0390a16001600655005b3461027b57602036600319011261027b576001600160a01b03610cc1613641565b1660005260076020526020604060002054604051908152f35b3461027b57600036600319011261027b576020600d54604051908152f35b3461027b5760208060031936011261027b576004358015610dfb5760095415610da6576040516323b872dd60e01b81523360048201523060248201526044810182905291808360648160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af192831561065657610d8693610d88575b50506148d3565b005b81610d9e92903d1061064f57610640818361376e565b508280610d7f565b60405162461bcd60e51b815260048101839052602760248201527f4e6f207374616b696e6720737570706c7920746f2064697374726962757465206044820152667265776172647360c81b6064820152608490fd5b60405162461bcd60e51b815260048101839052601760248201527f526577617264206d75737420626520706f7369746976650000000000000000006044820152606490fd5b3461027b57604036600319011261027b57610e66610e5c613641565b60243590336141ef565b602060405160018152f35b3461027b5760208060031936011261027b5760043590610e8f613cc1565b610e98336146f9565b33600052600781526040600020610eb08382546138c2565b9055610ebe826009546138c2565b60095533600081815260088352604090819020429055516323b872dd60e01b81526004810191909152306024820152604481018390529080828060648101038160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215610656577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d92610f6b575b506040519283523392a26001600655005b610f8190823d841161064f57610640818361376e565b5083610f5a565b3461027b57600036600319011261027b5760405160006005549060018260011c9160018416918215611092575b602094858510841461107c57858794868652918260001461105c575050600114610fff575b50610fe79250038361376e565b610ffb60405192828493845283019061361c565b0390f35b84915060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906000915b858310611044575050610fe7935082010185610fda565b8054838901850152879450869390920191810161102d565b60ff191685820152610fe795151560051b8501019250879150610fda9050565b634e487b7160e01b600052602260045260246000fd5b92607f1692610fb5565b3461027b57600036600319011261027b5760206001600160a01b0360005416604051908152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b57602036600319011261027b57602061114b611125613641565b6001600160a01b038116600052600c835261114560406000205491614914565b906138c2565b604051908152f35b3461027b57600036600319011261027b57602060405160008051602061535b8339815191528152f35b3461027b57600036600319011261027b576020600e54604051908152f35b3461027b57602036600319011261027b576001600160a01b036111bb613641565b1660005260136020526020604060002054604051908152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b5760208060031936011261027b57600435611235613cc1565b61124f6112546112436142cf565b600354928391856137a8565b613868565b6040516370a0823160e01b815233600482015260008051602061535b83398151915292918582602481875afa918215610656576000926114cd575b506112a264e8d4a5100092931515613b81565b0480911061148857604051636eb1769f60e11b81523360048201523060248201528481604481865afa8015610656578290600090611457575b6112e792501015613bfd565b6040516323b872dd60e01b858201908152336024830152306044830152606480830193909352918152601f199160009182919061132560848261376e565b519082865af1903d1561144a573d9167ffffffffffffffff831161073b576113699261135b8760405194601f840116018461376e565b82523d60008784013e614a5e565b805190848215159283611431575b50505061141957506113a461139d600e5461124f611397600d5483613932565b856137a8565b8092613932565b906113af823061473c565b60408051308152602081018490527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885926113fb929091849190a160095461140b575b610c7e813361473c565b0390a16001600655604051908152f35b611414846148d3565b6113f1565b60249060405190635274afe760e01b82526004820152fd5b6114419350820181019101613970565b15848481611377565b5061136990606090614a5e565b50508481813d8311611481575b61146e818361376e565b8101031261027b57816112e791516112db565b503d611464565b60405162461bcd60e51b815260048101859052601c60248201527f555344432062616c616e636520697320696e73756666696369656e74000000006044820152606490fd5b91508582813d83116114f7575b6114e4818361376e565b8101031261027b579051906112a261128f565b503d6114da565b3461027b57602036600319011261027b577f120de5c966483867382dce1eb95f0d016a917f91b2188b2f4c1413333a9ffb0f602060043561153d613c95565b80600f55604051908152a1005b3461027b57602036600319011261027b5760206001600160a01b038061156e613641565b166000526012825260406000205416604051908152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b57602036600319011261027b57602061114b600354611631811515613c49565b61124f61163c6142cf565b6004356137a8565b3461027b57600036600319011261027b5761165d613c95565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461027b57602036600319011261027b576001600160a01b036116be613641565b1660005260016020526020604060002054604051908152f35b3461027b57602036600319011261027b576001600160a01b036116f8613641565b1660005260086020526020604060002054604051908152f35b3461027b57600036600319011261027b576020600f54604051908152f35b3461027b57600036600319011261027b57604051806010548083526020809301809160106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6729060005b868282106117da5786866117918288038361376e565b604051928392818401908285525180915260408401929160005b8281106117ba57505050500390f35b83516001600160a01b0316855286955093810193928101926001016117ab565b83548552909301926001928301920161177b565b3461027b57604036600319011261027b5760043561180a613657565b90611813613cc1565b61183661181e6142cf565b61124f60035491611830831515613b81565b846137a8565b60405163313ce56760e01b808252602094929160008051602061535b83398151915291908681600481865afa90811561065657600091611c99575b506001600160a01b03809516936040519283528783600481885afa92831561065657600093611c7a575b506040519363802431fb60e01b855260048501528784606481602499898b830152600060448301527f0000000000000000000000000000000000000000000000000000000000000000165afa93841561065657600094611c4b575b5060ff821660ff841611600014611bff57611922839461192261191d856119289697613bd8565b613bec565b90613868565b91670de0b6b3a764000092838102938185041490151715611bea5761191d611954939261192292613bd8565b6040516370a0823160e01b815233600482015285818581865afa8015610656578291600091611bb9575b5010611b7557604051636eb1769f60e11b81523360048201523060248201528581604481865afa8015610656578290600090611b44575b6119c192501015613bfd565b604080516323b872dd60e01b8782019081523386830190815230602082015280840194909452928190039182018152601f1992600092839290611a07906060018261376e565b519082865af13d15611b37573d67ffffffffffffffff8111611b225790611a4d9291611a3d8860405194601f840116018461376e565b82523d60008884013e5b83614ad5565b805190858215159283611b09575b505050611af4575050611a7c61139d600e5461124f611397600d5483613932565b611a86813061473c565b60408051308152602081018390527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918391a1600954611ae5575b50611acd823361473c565b604080513381526020810184905290819081016113fb565b611aee906148d3565b83611ac2565b60405190635274afe760e01b82526004820152fd5b611b199350820181019101613970565b15858581611a5b565b84634e487b7160e01b60005260416004526000fd5b611a4d9150606090611a47565b50508581813d8311611b6e575b611b5b818361376e565b8101031261027b57816119c191516119b5565b503d611b51565b60405162461bcd60e51b8152600481018690526017818501527f42616c616e636520697320696e73756666696369656e740000000000000000006044820152606490fd5b809250878092503d8311611be3575b611bd2818361376e565b8101031261027b578190518761197e565b503d611bc8565b84634e487b7160e01b60005260116004526000fd5b6119228294611c1461191d86611c1a96613bd8565b906137a8565b91670de0b6b3a764000092838102938185041490151715611bea5761191d611c46939261192292613bd8565b611954565b9093508781813d8311611c73575b611c63818361376e565b8101031261027b575192886118f6565b503d611c59565b611c92919350883d8a11610c0d57610bff818361376e565b918861189b565b611cb09150873d8911610c0d57610bff818361376e565b87611871565b3461027b57600036600319011261027b57611ccf613cc1565b611cd8336146f9565b336000526020600c8152604060002054611cf3811515613af6565b336000818152600c845260408082208290555163a9059cbb60e01b81526004810192909252602482018390528390829060449082907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561065657611d98575b506040518181527f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241833392a26001600655604051908152f35b611dae90833d851161064f57610640818361376e565b5082611d5f565b3461027b5760208060031936011261027b5760043590611dd3613cc1565b3360005260019060018152611def836040600020541015613b42565b6000825b611e26577fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5610c9685610c7e813361482f565b601054811015611f82579081611e436001600160a01b039361498a565b939054600394851b1c169254926040516370a0823160e01b81523060048201528381602481855afa90811561065657600091611f55575b508581158015611f4c575b611f41575060405163313ce56760e01b8152918483600481845afa9283156106565760009689611eef9460ff8997611ec5958c91611f2a5750169261479b565b60405163a9059cbb60e01b8152336004820152602481019190915295869283919082906044820190565b03925af19081156106565784938492611f0d575b505b019091611df3565b611f2390843d861161064f57610640818361376e565b5086611f03565b610c079150893d8b11610c0d57610bff818361376e565b945050508290611f05565b50308314611e85565b90508381813d8311611f7b575b611f6c818361376e565b8101031261027b575187611e7a565b503d611f62565b610c4f565b3461027b57600036600319011261027b5760206040516101f48152f35b3461027b57604036600319011261027b57602061114b611fc2613641565b611fca613657565b906139f3565b3461027b57600036600319011261027b57602060405160128152f35b3461027b5760208060031936011261027b57612006613641565b61200e613cc1565b6040516370a0823160e01b81523060048201526001600160a01b038281168483602481845afa92831561065657600093612206575b5060405190630b4c774160e11b8252600482015260008051602061535b8339815191526024820152610bb860448201528481606481857f0000000000000000000000000000000000000000000000000000000000000000165afa908115610656576000916121e9575b506120da83837f00000000000000000000000000000000000000000000000000000000000000001686613e68565b16156121d5576120ef91610b61913091613fc7565b7f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724161211a33306139f3565b917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856121b4612710612151600354600f54906137a8565b0461215c813061473c565b306000526007845260406000206121748282546138c2565b9055612182816009546138c2565b6009553360005260088452426040600020556009546121c7575b60408051308152602081019290925290918291820190565b0390a16040519283523392a26001600655005b6121d0816148d3565b61219c565b6121e491610b61913091614581565b6120ef565b6122009150853d87116106fd576106ee818361376e565b856120ac565b9092508481813d831161222e575b61221e818361376e565b8101031261027b57519185612043565b503d612214565b3461027b5760208060031936011261027b5760043590612253613cc1565b61225c336146f9565b3360005260078152604060002054828110612324578261227b91613932565b336000526007825260406000205561229582600954613932565b60095560405163a9059cbb60e01b81523360048201526024810183905290808260448160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1918215610656577f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7592610f6b57506040519283523392a26001600655005b60405162461bcd60e51b815260048101839052601f60248201527f496e73756666696369656e742062616c616e636520746f20756e7374616b65006044820152606490fd5b3461027b57612377366136b2565b6000939192939160005b858110612e0c5750612392856138e7565b9061239c866138e7565b936123a6876138e7565b936123b0886138e7565b936000916000936000996000925b8c88818610612be757505050505050826123e9836123e36123f596956123ef95614545565b99614545565b96614545565b93614545565b9460005b855181101561263c5761240c818661394d565b5161241a575b6001016123f9565b612484906001600160a01b038061243f610463612437858c61394d565b518d89613888565b1661244a838961394d565b516040516323b872dd60e01b8152336004820152306024820152604481019190915260209490918591839190829060009082906064820190565b03925af180156106565761261f575b506124ac6104636124a4848b61394d565b518c88613888565b604051630b4c774160e11b8152908216600482015260008051602061535b8339815191526024820152610bb860448201529280846064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561065657838a6001968e936000956125ea575b50506125719261253461253c936104639361394d565b51908a613888565b612546858b61394d565b5190847f00000000000000000000000000000000000000000000000000000000000000001690613e68565b16156125b2576125a261258a6104636124a4848b61394d565b612594838961394d565b5187516125ab573391613fc7565b505b9050612412565b3091613fc7565b6125dd6125c56104636124a4848b61394d565b6125cf838961394d565b5187516125e3573391614581565b506125a4565b3091614581565b61046392955061253c9361261261257196938361253494903d106106fd576106ee818361376e565b969350935081945061251e565b61263590843d861161064f57610640818361376e565b508a612493565b508582888560005b8151811015610e6657612657818661394d565b51612665575b600101612644565b61266f818661394d565b516127109081810290808204831490151715612b67578761268f91613868565b6040516370a0823160e01b808252336004830152929160208260248160008051602061535b8339815191525afa90811561065657600091612bb1575b6126d592506137a8565b64e8d4a5100081029080820464e8d4a510001490151715612b675704908115159182612b0d575b50501561265d5761271b610463612713838561394d565b518587613888565b6001600160a01b0360405191630b4c774160e11b835216600482015260008051602061535b8339815191526024820152610bb860448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561065657600091612aee575b506001600160a01b036127b56104636127ad858761394d565b518789613888565b916127f6827f000000000000000000000000000000000000000000000000000000000000000016938464e8d4a510006127ee888d61394d565b510491613e68565b16156128c157508061282d6128146104636127ad61286b958761394d565b64e8d4a51000612824848a61394d565b510430916140fa565b6020612844600e5461124f611397600d5483613932565b60405163a9059cbb60e01b8152336004820152602481019190915293849081906044820190565b0381600060008051602061535b8339815191525af19081156106565760019361289b926128a2575b5015156139a7565b905061265d565b6128ba9060203d60201161064f57610640818361376e565b5089612893565b60206001600160a01b036128e36104636128db868861394d565b51888a613888565b926129c7600064e8d4a510006128f9888d61394d565b516040517309e46f287cb791987b6228c32669ea5126aa105d60621b8882015261017760eb1b6034820181905272d500b1d8e8ef31e21c99d1db9a6444d3adf12760641b6037830152604b820152606098891b6bffffffffffffffffffffffff1916604e8201526042815291900461297082613752565b6040519161297d8361371a565b8252868201903082526040830198428a5283019081526080830190848252604051998a988997889663c04b8d5960e01b88528c60048901525160a0602489015260c488019061361c565b94511660448601525160648501525160848401525160a483015203925af190811561065657600091612abc575b50612a3c6020612a15600e5461124f612a0f600d5483613932565b866137a8565b60405163a9059cbb60e01b8152336004820152602481019190915291829081906044820190565b0381600060008051602061535b8339815191525af1801561065657612a9d575b5015612a6a5760019061289b565b60405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606490fd5b612ab59060203d60201161064f57610640818361376e565b5087612a5c565b90506020813d602011612ae6575b81612ad76020938361376e565b8101031261027b5751876129f4565b3d9150612aca565b612b07915060203d6020116106fd576106ee818361376e565b87612794565b90915060405191825233600483015260208260248160008051602061535b8339815191525afa91821561065657600092612b7d575b5064e8d4a5100082029180830464e8d4a510001490151715612b6757111587806126fc565b634e487b7160e01b600052601160045260246000fd5b9091506020813d602011612ba9575b81612b996020938361376e565b8101031261027b57519088612b42565b3d9150612b8c565b90506020823d602011612bdf575b81612bcc6020938361376e565b8101031261027b576126d59151906126cb565b3d9150612bbf565b6001600160a01b03612c06610463886024969798999b95602095613888565b16604051938480926370a0823160e01b82523360048301525afa8015610656578e8a8994600093612dcf575b50612c4d6104636004966020946001600160a01b0394613888565b166040519485809263313ce56760e01b82525afa928315610656578f938b88958789958d95600095612d90575b509482612cdd60ff612cc0612cb38561046397612cad612ce39c9d612ca7610463858f9e612ca79f613888565b90614378565b9d613888565b359c612710809c04613868565b8c81119c908d15612d815790612cd591613932565b985b1661393f565b94613888565b9315612d465786612cf3916137a8565b0490670de0b6b3a764000091828102928184041490151715612b67578c612d3582612d23600196612d3b96613868565b928b612d2f838d61394d565b5261394d565b52613961565b955b019291906123be565b9d612d5792989993508e91506138c2565b9b87612d63838d61394d565b52612d6e828b61394d565b52612d7890613961565b95600190612d3d565b612d8a91613932565b98612cd7565b868096508486989394959260203d602011612dc8575b612db0818361376e565b8101612dbb91613919565b9750949392509650612c7a565b503d612da6565b94505050506020823d602011612e04575b81612ded6020938361376e565b8101031261027b5790518691908e8a612c4d612c32565b3d9150612de0565b9193926001600160a01b03612e25610463858986613888565b1660405180916370a0823160e01b825233600483015281602460209485935afa91821561065657600092612e77575b5050600191611145612e6e92612ca7610463888c89613888565b93949201612381565b90809250813d8311612ea0575b612e8e818361376e565b8101031261027b575181611145612e54565b503d612e84565b3461027b57600036600319011261027b57602061114b6142cf565b3461027b5760208060031936011261027b57612edc613641565b604051908282016001600160a01b03926bffffffffffffffffffffffff198360601b16825260148152612f0e81613736565b5190209082811615612fe557612f9b612fa7856108349360405190612f358387018361376e565b85825282820195614b278739604080516001600160a01b039092168483019081523060208201529190612f74908290840103601f19810183528261376e565b604051958693612f8c868601998a92519283916135f9565b840191518093868401906135f9565b0103808452018261376e565b519020604051908482019260ff60f81b84523060601b60218401526035830152605582015260558152612fd981613752565b51902016604051908152f35b60405162461bcd60e51b815260048101859052601d60248201527f4f776e657220616464726573732063616e6e6f74206265207a65726f2e0000006044820152606490fd5b3461027b57606036600319011261027b57613043613641565b61304b613657565b604435906001600160a01b0383169283600052600260205260406000203360005260205260406000205493600019850361308b575b50610e6693506141ef565b8385106130f75780156130de5733156130c557610e6694849160005260026020526040600020336000526020520360406000205584613080565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810186905260448101859052606490fd5b3461027b57600036600319011261027b576020600354604051908152f35b3461027b57600036600319011261027b57613154613cc1565b613175600354613165811515613c49565b61124f6131706142cf565b613790565b60405163802431fb60e01b815230600482015260008051602061535b8339815191526024820152600060448201526001600160a01b039060209081816064817f000000000000000000000000000000000000000000000000000000000000000087165afa90811561065657600091613411575b50306000526001825260406000205490604051936370a0823160e01b9182865230600487015260008051602061535b8339815191529685876024818b5afa968715610656576000976133e2575b5064e8d4a510009081830292808404831490151715612b67578083101561334f5750808702908782041487151715612b675785946132e193670de0b6b3a76400006132866132d3956132d995613868565b0491808311613347575b507f0000000000000000000000000000000000000000000000000000000000000000166132bd8982613ce4565b6132c8308a306140fa565b9384928310156137bb565b30613e68565b309030613fc7565b5060246040518096819382523060048301525afa90811561065657600091613317575b5061331092501161381c565b6001600655005b905082813d8311613340575b61332d818361376e565b8101031261027b57613310915183613304565b503d613323565b91508a613290565b9350509095509392919311613368575b50505050613310565b6133c76133ba6133bf6001946133d9977f0000000000000000000000000000000000000000000000000000000000000000166133a5888230613e68565b6133b0308930613fc7565b93849283116137bb565b613ce4565b3090306140fa565b5030600052526040600020541161381c565b8080808061335f565b9096508581813d831161340a575b6133fa818361376e565b8101031261027b57519588613235565b503d6133f0565b90508181813d8311613437575b613428818361376e565b8101031261027b5751846131e8565b503d61341e565b3461027b57604036600319011261027b57613457613641565b6024359033156130de576001600160a01b03169081156130c557336000526002602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b3461027b57600036600319011261027b5760405160006004549060018260011c916001841691821561357f575b602094858510841461107c57858794868652918260001461105c5750506001146135225750610fe79250038361376e565b84915060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906000915b858310613567575050610fe7935082010185610fda565b80548389018501528794508693909201918101613550565b92607f16926134f1565b3461027b57602036600319011261027b577fbea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e060206004356135c8613c95565b80600d55604051908152a1005b3461027b57600036600319011261027b57602061114b600354613165811515613c49565b60005b83811061360c5750506000910152565b81810151838201526020016135fc565b90602091613635815180928185528580860191016135f9565b601f01601f1916010190565b600435906001600160a01b038216820361027b57565b602435906001600160a01b038216820361027b57565b35906001600160a01b038216820361027b57565b9181601f8401121561027b5782359167ffffffffffffffff831161027b576020808501948460051b01011161027b57565b604060031982011261027b5767ffffffffffffffff9160043583811161027b57826136df91600401613681565b9390939260243591821161027b576136f991600401613681565b9091565b610100810190811067ffffffffffffffff82111761073b57604052565b60a0810190811067ffffffffffffffff82111761073b57604052565b6040810190811067ffffffffffffffff82111761073b57604052565b6080810190811067ffffffffffffffff82111761073b57604052565b90601f8019910116810190811067ffffffffffffffff82111761073b57604052565b90670de0b6b3a76400009180830292830403612b6757565b81810292918115918404141715612b6757565b156137c257565b60405162461bcd60e51b815260206004820152602c60248201527f417262697472616765206661696c65643a20696e73756666696369656e74206f60448201526b1d5d1c1d5d08185b5bdd5b9d60a21b6064820152608490fd5b1561382357565b60405162461bcd60e51b815260206004820152601860248201527f41726269747261676520646964206e6f742070726f66697400000000000000006044820152606490fd5b8115613872570490565b634e487b7160e01b600052601260045260246000fd5b91908110156138985760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b038116810361027b5790565b91908201809211612b6757565b67ffffffffffffffff811161073b5760051b60200190565b906138f1826138cf565b6138fe604051918261376e565b828152809261390f601f19916138cf565b0190602036910137565b9081602091031261027b575160ff8116810361027b5790565b91908203918211612b6757565b604d8111612b6757600a0a90565b80518210156138985760209160051b010190565b6000198114612b675760010190565b9081602091031261027b5751801515810361027b5790565b9081602091031261027b57516001600160a01b038116810361027b5790565b156139ae57565b60405162461bcd60e51b815260206004820152601760248201527f53776170204661696c65642c20547279204275726e28290000000000000000006044820152606490fd5b91906139fd613cc1565b613a06836146f9565b6001600160a01b0380931690600093828552602090600c8252604086205493613a30851515613af6565b8652600c825260408087208790555163a9059cbb60e01b81526001600160a01b03841660048201526024810185905282816044818a7f000000000000000000000000000000000000000000000000000000000000000087165af18015613aeb577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419495969750613ace575b50604051938585521692a2906001600655565b613ae490833d851161064f57610640818361376e565b5038613abb565b6040513d89823e3d90fd5b15613afd57565b60405162461bcd60e51b815260206004820152601360248201527f4e6f207265776172647320746f20636c61696d000000000000000000000000006044820152606490fd5b15613b4957565b60405162461bcd60e51b815260206004820152601060248201526f125b9cdd59999a58da595b9d0810905360821b6044820152606490fd5b15613b8857565b60405162461bcd60e51b815260206004820152602260248201527f546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65604482015261726f60f01b6064820152608490fd5b9060ff8091169116039060ff8211612b6757565b60ff16604d8111612b6757600a0a90565b15613c0457565b60405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152606490fd5b15613c5057565b60405162461bcd60e51b815260206004820152601b60248201527f546f74616c20737570706c792063616e6e6f74206265207a65726f00000000006044820152606490fd5b6001600160a01b03600054163303613ca957565b60405163118cdaa760e01b8152336004820152602490fd5b600260065414613cd2576002600655565b604051633ee5aeb560e01b8152600490fd5b60408051636eb1769f60e11b81523060048201526001600160a01b038316602482015260209360008051602061535b8339815191528583604481845afa928315613e5d57600093613e2e575b50818303613d41575b505050505050565b8592613db9575b835163095ea7b360e01b81526001600160a01b0390951660048601526024850191909152839081600081604481015b03925af1908115613daf5750613d91575b80808080613d39565b81613da792903d1061064f57610640818361376e565b503880613d88565b513d6000823e3d90fd5b91509192835163095ea7b360e01b81526001600160a01b03821660048201526000602482015285816044816000875af18015613e235791869391613d77969593613e06575b509450613d48565b613e1c90853d871161064f57610640818361376e565b5038613dfe565b85513d6000823e3d90fd5b9092508581813d8311613e56575b613e46818361376e565b8101031261027b57519138613d30565b503d613e3c565b84513d6000823e3d90fd5b60408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015260209590949293919290918516908684604481855afa938415613e2357600094613f98575b50828403613ec3575b50505050505050565b8693613f35575b845163095ea7b360e01b81526001600160a01b0390911660048201526024810192909252909350839081600081604481015b03925af1908115613daf5750613f17575b8080808080613eba565b81613f2d92903d1061064f57610640818361376e565b503880613f0d565b91938095919350519063095ea7b360e01b8252821660048201526000602482015285816044816000875af18015613e235791869391613efc969593613f7b575b50613eca565b613f9190853d871161064f57610640818361376e565b5038613f75565b9093508681813d8311613fc0575b613fb0818361376e565b8101031261027b57519238613eb1565b503d613fa6565b90604051613fd4816136fd565b6001600160a01b03809316815282806020830160008051602061535b83398151915281526040840194610bb88652826060860198168852608085019042825260a0860190815260c08601918460009a8b998a86528260e08b01978c89526040519d8e9c8d63414bf38960e01b9052511660048d0152511660248b01525162ffffff1660448a0152511660648801525160848701525160a48601525160c4850152511660e48301527f000000000000000000000000000000000000000000000000000000000000000016815a9361010492602095f19182156140ee5780926140ba57505090565b9091506020823d6020116140e6575b816140d66020938361376e565b810103126140e357505190565b80fd5b3d91506140c9565b604051903d90823e3d90fd5b90604051614107816136fd565b60008051602061535b833981519152815260208101926001600160a01b0380948180931681526040840194610bb88652826060860198168852608085019042825260a0860190815260c08601918460009a8b998a86528260e08b01978c89526040519d8e9c8d63414bf38960e01b9052511660048d0152511660248b01525162ffffff1660448a0152511660648801525160848701525160a48601525160c4850152511660e48301527f000000000000000000000000000000000000000000000000000000000000000016815a9361010492602095f19182156140ee5780926140ba57505090565b916001600160a01b038084169283156142b6571692831561429d57600090838252600160205260408220549083821061426b575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6000806010545b8082106142e257505090565b90916001600160a01b036142f58461498a565b90549060031b1c16604080516370a0823160e01b815230600482015260208082602481875afa928315613daf5750600092614345575b50509161114561433d92600194614378565b9201906142d6565b81819392933d8311614371575b61435c818361376e565b810103126140e357505161114561433d61432b565b503d614352565b60405163313ce56760e01b8082529192600092906020906001600160a01b03908116908285600481855afa94851561453a57869561451b575b5060405193845260008051602061535b8339815191528385600481845afa948515613aeb5787956144fc575b5082146144c85760405163802431fb60e01b81526001600160a01b0392909216600483015260008051602061535b8339815191526024830152600060448301528290829060649082907f0000000000000000000000000000000000000000000000000000000000000000165afa91859083614495575b5050506144635750505050600090565b670de0b6b3a76400009361448b61448461191d611c14946144919796613bd8565b80926137a8565b926137a8565b0490565b909180939650813d83116144c1575b6144ae818361376e565b810103126140e357505192388080614453565b503d6144a4565b505050505064e8d4a51000918281029281840414901517156144e8575090565b634e487b7160e01b81526011600452602490fd5b614514919550843d8611610c0d57610bff818361376e565b93386143dd565b614533919550833d8511610c0d57610bff818361376e565b93386143b1565b6040513d88823e3d90fd5b9190614550816138e7565b9060005b818110614562575090925050565b8061456f6001928761394d565b5161457a828661394d565b5201614554565b90916040519160209384916bffffffffffffffffffffffff199060601b168285015261017760eb1b80603486015272d500b1d8e8ef31e21c99d1db9a6444d3adf12760641b6037860152604b8501527309e46f287cb791987b6228c32669ea5126aa105d60621b604e850152604284526145fa84613752565b604051936146078561371a565b8452818401926146676001600160a01b0392838093168652604087019642885260608101918252608081019660009788938482526040519a8b988997889663c04b8d5960e01b88528c60048901525160a0602489015260c488019061361c565b94511660448601525160648501525160848401525160a483015203927f0000000000000000000000000000000000000000000000000000000000000000165af19283156146ec5781936146bb575b50505090565b9091809350813d83116146e5575b6146d3818361376e565b810103126140e35750513880806146b5565b503d6146c9565b50604051903d90823e3d90fd5b6001600160a01b0361470a82614914565b91169081600052600c60205261472660406000209182546138c2565b9055600a5490600052600b602052604060002055565b6001600160a01b031690811561429d577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261477e6000946003546138c2565b6003558484526001825260408420818154019055604051908152a3565b90926147a8821515613c49565b601281116147ea5760128110156147db576012039260128411612b675761448b61124f92611c146147d89661393f565b90565b506147d89261124f91926137a8565b60405162461bcd60e51b815260206004820152601e60248201527f546f6b656e20646563696d616c732073686f756c64206265203c3d20313800006044820152606490fd5b91906001600160a01b0383169081156142b657816000526001602052604060002054938185106148a157506020817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260009596858752600184520360408620558060035403600355604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481018590526044810191909152606490fd5b60095490816148e0575050565b670de0b6b3a764000090818102918183041490151715612b675761490f9161490791613868565b600a546138c2565b600a55565b6001600160a01b0316670de0b6b3a764000061497f6000838152600860205261497a614944604083205442613932565b6301e13380959086811115614984575085905b8352600760205261448b6040842054936040600a5491600b602052205490613932565b6137a8565b040490565b90614957565b6010548110156138985760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720190600090565b600081815260116020526040812054614a595760105468010000000000000000811015614a45576001810180601055811015614a315790826040927f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672015560105492815260116020522055600190565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b905090565b909190614a875750805115614a7557805190602001fd5b604051630a12f52160e11b8152600490fd5b9080511580614abe575b614a985790565b604051639996b31560e01b815260008051602061535b8339815191526004820152602490fd5b5060008051602061535b8339815191523b15614a91565b90614aea5750805115614a7557805190602001fd5b81511580614b1d575b614afb575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15614af356fe60803460bc57601f61083438819003918201601f19168301916001600160401b0383118484101760c157808492604094855283398101031260bc57604b602060458360d7565b920160d7565b6001600160a01b0390811691903383900360895760018060a01b03199116816000541617600055600154161760015560405161074990816100eb8239f35b60405162461bcd60e51b815260206004820152600b60248201526a27b7363c902937baba32b960a91b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360bc5756fe608060408181526004908136101561001657600080fd5b600092833560e01c9081638da5cb5b1461045357508063b0f479a11461042b5763eedc3c501461004557600080fd5b3461042757806003193601126104275767ffffffffffffffff9082358281116103dc576100759036908501610476565b91909360248035858111610423576100909036908401610476565b90956001600160a01b0395600198878a541633036103e0578a5b82811061031c5750505050848754169084518092630c2fe7ff60e11b8252818660209586935afa908115610312578a916102e1575b50888a5b888a858084106101fb579450505050506100fb578880f35b88805b82811061010b5750508880f35b89918861012161011c84878e610570565b6104e4565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036101605750504761014d575b0189906100fe565b61015b888c5416479061066f565b610145565b88516370a0823160e01b8152308982015292935090919085828881845afa9182156101f157908392918d9594926101bb575b508a600a83116101a6575b50505050610145565b6101b2935416906105a9565b8a38808a61019d565b945090508584813d81116101ea575b6101d481836104f8565b810103126101e6578b93519038610192565b5080fd5b503d6101ca565b89513d85823e3d90fd5b8361011c9161020993610570565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361024857506102406127106102368547610580565b048a84541661066f565b0189906100e3565b88516370a0823160e01b815230898201529192509085818881855afa908d82156102d6578d94939286929061029b575b5061028a610296939261271092610580565b04908b855416906105a9565b610240565b92945050508581813d83116102cf575b6102b581836104f8565b810103126102cb57518b9290849061028a610278565b8c80fd5b503d6102ab565b8a51903d90823e3d90fd5b90508281813d831161030b575b6102f881836104f8565b810103126103075751386100df565b8980fd5b503d6102ee565b86513d8c823e3d90fd5b61032a61011c8285856104ac565b8c6020918261033a8588886104ac565b0135906103488588886104ac565b8c81013590601e19813603018212156103dc57018035908982116103dc5785019281360384136103dc578493828f519384928337810185815203925af161038d610530565b501561039b57508a016100aa565b876011886064938c519362461bcd60e51b85528401528201527f42617463682063616c6c206661696c65640000000000000000000000000000006044820152fd5b8480fd5b865162461bcd60e51b8152602081880152601b60248201527f43616c6c61626c65206f6e6c792062792074686520726f7574657200000000006044820152606490fd5b8780fd5b8280fd5b8382346101e657816003193601126101e6576020906001600160a01b03600154169051908152f35b8490346101e657816003193601126101e6576001600160a01b0360209254168152f35b9181601f840112156104a75782359167ffffffffffffffff83116104a7576020808501948460051b0101116104a757565b600080fd5b91908110156104ce5760051b81013590605e19813603018212156104a7570190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036104a75790565b90601f8019910116810190811067ffffffffffffffff82111761051a57604052565b634e487b7160e01b600052604160045260246000fd5b3d1561056b573d9067ffffffffffffffff821161051a576040519161055f601f8201601f1916602001846104f8565b82523d6000602084013e565b606090565b91908110156104ce5760051b0190565b8181029291811591840414171561059357565b634e487b7160e01b600052601160045260246000fd5b91909160405192602084019263a9059cbb60e01b84526001600160a01b038092166024860152604485015260448452608084019184831067ffffffffffffffff84111761051a57610614926040521692600080938192519082875af161060d610530565b90846106c2565b908151918215159283610644575b50505061062c5750565b60249060405190635274afe760e01b82526004820152fd5b8192935090602091810103126101e657602001519081159182150361066c5750388080610622565b80fd5b8147106106aa5760008080936001600160a01b038294165af1610690610530565b501561069857565b604051630a12f52160e11b8152600490fd5b60405163cd78605960e01b8152306004820152602490fd5b906106d7575080511561069857805190602001fd5b8151158061070a575b6106e8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156106e056fea26469706673582212205930771bdac7a28577e83853179585c14d2d1de60202bee4d616bc2925c9934164736f6c634300081900330000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174a2646970667358221220e671a31319baf4efcdfd3784f9ea4116cbbe96dd251b244890ffd4b6958d90aa64736f6c63430008190033","opcodes":"PUSH1 0x40 PUSH2 0x120 DUP2 MSTORE CALLVALUE PUSH2 0x642 JUMPI PUSH2 0x13 PUSH2 0x647 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH6 0x42616C756E69 PUSH1 0xD0 SHL DUP2 DUP5 ADD MSTORE PUSH2 0x2C PUSH2 0x647 JUMP JUMPDEST PUSH6 0x42414C554E49 PUSH1 0xD0 SHL DUP3 DUP3 ADD MSTORE CALLER ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP5 DUP1 LOG3 DUP5 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH2 0x616 JUMPI PUSH1 0x4 SWAP3 DUP4 SLOAD SWAP1 PUSH1 0x1 SWAP9 DUP10 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH2 0x60C JUMPI JUMPDEST DUP9 DUP5 LT EQ PUSH2 0x524 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0x5BE JUMPI JUMPDEST POP DUP9 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0x55F JUMPI DUP9 SWAP3 PUSH2 0x554 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP10 SHL OR DUP5 SSTORE JUMPDEST DUP3 MLOAD SWAP2 DUP3 GT PUSH2 0x541 JUMPI PUSH1 0x5 SWAP3 DUP4 SLOAD DUP10 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x537 JUMPI JUMPDEST DUP9 DUP3 LT EQ PUSH2 0x524 JUMPI SWAP1 DUP2 DUP4 DUP6 SWAP5 SWAP4 GT PUSH2 0x4D6 JUMPI JUMPDEST POP DUP8 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x477 JUMPI DUP7 SWAP3 PUSH2 0x46C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP8 SHL OR SWAP1 SSTORE JUMPDEST DUP5 PUSH1 0x6 SSTORE ADDRESS ISZERO SWAP5 DUP6 ISZERO DUP1 PUSH2 0x467 JUMPI JUMPDEST ISZERO PUSH2 0x424 JUMPI ADDRESS PUSH1 0x80 MSTORE ADDRESS PUSH1 0xA0 MSTORE PUSH1 0x1E PUSH1 0xD SSTORE PUSH2 0x2710 PUSH1 0xE SSTORE PUSH1 0x1E PUSH1 0xF SSTORE PUSH20 0xADDD25A91563696D8567DF78D5A01C9A991F9B8 PUSH1 0xC0 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0xE0 MSTORE PUSH2 0x100 SWAP6 PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 DUP8 MSTORE PUSH2 0x40E JUMPI SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0x1CA PUSH1 0x3 SLOAD PUSH2 0x680 JUMP JUMPDEST PUSH1 0x3 SSTORE ADDRESS DUP4 MSTORE DUP5 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE DUP4 MLOAD DUP3 DUP2 MSTORE DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 ADDRESS SWAP4 LOG3 ADDRESS DUP4 MSTORE PUSH1 0x7 DUP6 MSTORE DUP4 DUP4 KECCAK256 PUSH2 0x225 DUP2 SLOAD PUSH2 0x680 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x232 PUSH1 0x9 SLOAD PUSH2 0x680 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLER DUP4 MSTORE PUSH1 0x8 DUP6 MSTORE TIMESTAMP DUP5 DUP5 KECCAK256 SSTORE PUSH1 0x9 SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO DUP1 PUSH2 0x3BA JUMPI JUMPDEST POP POP POP POP ADDRESS DUP3 MSTORE PUSH1 0x8 DUP5 MSTORE PUSH2 0x267 DUP4 DUP4 KECCAK256 SLOAD TIMESTAMP PUSH2 0x6CB JUMP JUMPDEST PUSH4 0x1E13380 SWAP2 SWAP1 DUP3 DUP2 GT ISZERO PUSH2 0x3B1 JUMPI POP PUSH2 0x2AA DUP3 JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x7 DUP8 MSTORE PUSH2 0x2A5 DUP7 DUP7 KECCAK256 SLOAD SWAP2 PUSH2 0x29F PUSH1 0xA SLOAD PUSH1 0xB DUP12 MSTORE DUP10 DUP10 KECCAK256 SLOAD SWAP1 PUSH2 0x6CB JUMP JUMPDEST SWAP3 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST DIV DIV ADDRESS DUP3 MSTORE PUSH1 0xC DUP5 MSTORE PUSH2 0x2C1 DUP4 DUP4 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x6AB JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xB PUSH1 0xA SLOAD SWAP4 ADDRESS DUP4 MSTORE MSTORE KECCAK256 SSTORE PUSH2 0x2D7 PUSH2 0x6D8 JUMP JUMPDEST POP MLOAD PUSH2 0x53B0 SWAP2 DUP3 PUSH2 0x7A8 DUP4 CODECOPY PUSH1 0x80 MLOAD DUP3 DUP2 DUP2 PUSH2 0xF0A ADD MSTORE DUP2 DUP2 PUSH2 0x15E9 ADD MSTORE PUSH2 0x22BC ADD MSTORE PUSH1 0xA0 MLOAD DUP3 DUP2 DUP2 PUSH2 0x257 ADD MSTORE DUP2 DUP2 PUSH2 0xD45 ADD MSTORE DUP2 DUP2 PUSH2 0x1D2A ADD MSTORE PUSH2 0x3A67 ADD MSTORE PUSH1 0xC0 MLOAD DUP3 DUP2 DUP2 PUSH2 0x11F4 ADD MSTORE DUP2 DUP2 PUSH2 0x18C5 ADD MSTORE DUP2 DUP2 PUSH2 0x31B6 ADD MSTORE PUSH2 0x4428 ADD MSTORE PUSH1 0xE0 MLOAD DUP3 DUP2 DUP2 PUSH2 0xA25 ADD MSTORE DUP2 DUP2 PUSH2 0x15A5 ADD MSTORE DUP2 DUP2 PUSH2 0x20B4 ADD MSTORE DUP2 DUP2 PUSH2 0x254B ADD MSTORE DUP2 DUP2 PUSH2 0x27BC ADD MSTORE DUP2 DUP2 PUSH2 0x3293 ADD MSTORE DUP2 DUP2 PUSH2 0x337A ADD MSTORE DUP2 DUP2 PUSH2 0x407D ADD MSTORE DUP2 DUP2 PUSH2 0x41B2 ADD MSTORE PUSH2 0x4685 ADD MSTORE MLOAD DUP2 DUP2 DUP2 PUSH2 0x4B7 ADD MSTORE DUP2 DUP2 PUSH2 0x538 ADD MSTORE DUP2 DUP2 PUSH2 0xA01 ADD MSTORE DUP2 DUP2 PUSH2 0x10E3 ADD MSTORE DUP2 DUP2 PUSH2 0x207B ADD MSTORE DUP2 DUP2 PUSH2 0x24E5 ADD MSTORE PUSH2 0x2763 ADD MSTORE RETURN JUMPDEST PUSH2 0x2AA SWAP1 PUSH2 0x27C JUMP JUMPDEST PUSH2 0x3C5 JUMPI JUMPDEST DUP1 PUSH2 0x24F JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x3FB JUMPI POP SWAP1 PUSH2 0x3F0 DUP6 SWAP4 SWAP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DIV PUSH1 0xA SLOAD PUSH2 0x6AB JUMP JUMPDEST PUSH1 0xA SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP PUSH1 0x24 SWAP2 DUP5 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x14F JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12C JUMP JUMPDEST DUP5 DUP8 MSTORE DUP8 DUP8 KECCAK256 DUP11 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP9 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x4C0 JUMPI POP POP DUP5 GT PUSH2 0x4A7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x140 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP14 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x489 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP5 DUP8 MSTORE DUP8 DUP8 KECCAK256 DUP4 DUP1 DUP7 ADD DUP8 SHR DUP3 ADD SWAP3 DUP11 DUP8 LT PUSH2 0x51B JUMPI JUMPDEST SWAP2 DUP7 SWAP6 DUP14 SWAP3 SWAP6 SWAP5 SWAP4 ADD DUP9 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x50D JUMPI POP POP PUSH2 0x119 JUMP JUMPDEST DUP10 DUP2 SSTORE DUP7 SWAP6 POP DUP13 SWAP2 ADD PUSH2 0x4FF JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x4F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x105 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD6 JUMP JUMPDEST DUP8 DUP10 MSTORE DUP10 DUP10 KECCAK256 DUP13 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x5A8 JUMPI POP POP DUP5 GT PUSH2 0x58F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0xEA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x582 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP16 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x571 JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 DUP9 MSTORE DUP9 DUP9 KECCAK256 DUP5 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH2 0x603 JUMPI JUMPDEST SWAP2 DUP14 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x5F5 JUMPI POP POP PUSH2 0xC2 JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP DUP14 SWAP2 ADD PUSH2 0x5E7 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xAD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP3 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x66A JUMPI PUSH1 0x40 MSTORE PUSH1 0x6 DUP3 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x695 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x695 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x695 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x695 JUMPI JUMP JUMPDEST PUSH20 0x2791BCA1F2DE4661ED88A30C99A7A9449AA84174 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH32 0xD858BFF8317940B1BB2B6603753B280D3518AB8E24C32A7DE1CC1E7559E16598 SLOAD PUSH2 0x7A2 JUMPI PUSH1 0x10 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x78E JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x10 SSTORE DUP2 LT ISZERO PUSH2 0x77A JUMPI PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD DUP3 SWAP1 SSTORE PUSH1 0x10 SLOAD SWAP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12A33AA EQ PUSH2 0x35D5 JUMPI DUP1 PUSH4 0x6497CB9 EQ PUSH2 0x3589 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x34C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x343E JUMPI DUP1 PUSH4 0x12F399CF EQ PUSH2 0x313B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x311D JUMPI DUP1 PUSH4 0x185FCFFE EQ PUSH2 0xCDA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x302A JUMPI DUP1 PUSH4 0x27D54A92 EQ PUSH2 0x2EC2 JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x2EA7 JUMPI DUP1 PUSH4 0x2BE01190 EQ PUSH2 0x2369 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x2235 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x1FEC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FD0 JUMPI DUP1 PUSH4 0x34A1CA89 EQ PUSH2 0x1FA4 JUMPI DUP1 PUSH4 0x34DECFC9 EQ PUSH2 0x1F87 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1DB5 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1CB6 JUMPI DUP1 PUSH4 0x50B1B34A EQ PUSH2 0x17EE JUMPI DUP1 PUSH4 0x5E7F8B76 EQ PUSH2 0x172F JUMPI DUP1 PUSH4 0x65534D52 EQ PUSH2 0x1711 JUMPI DUP1 PUSH4 0x70259077 EQ PUSH2 0x16D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x169D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1644 JUMPI DUP1 PUSH4 0x71DDCFB8 EQ PUSH2 0x160D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x15C9 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x1585 JUMPI DUP1 PUSH4 0x7811A785 EQ PUSH2 0x154A JUMPI DUP1 PUSH4 0x7B848914 EQ PUSH2 0x14FE JUMPI DUP1 PUSH4 0x7D9FC717 EQ PUSH2 0x1218 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x11D4 JUMPI DUP1 PUSH4 0x833D557F EQ PUSH2 0x119A JUMPI DUP1 PUSH4 0x85377188 EQ PUSH2 0x117C JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1153 JUMPI DUP1 PUSH4 0x8B086764 EQ PUSH2 0x1107 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH2 0x10C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x109C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF88 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xE71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE40 JUMPI DUP1 PUSH4 0xAB86C69E EQ PUSH2 0xCF8 JUMPI DUP1 PUSH4 0xB9F5E617 EQ PUSH2 0xCDA JUMPI DUP1 PUSH4 0xBF9C89BB EQ PUSH2 0xCA0 JUMPI DUP1 PUSH4 0xCDE53358 EQ PUSH2 0x9CA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x978 JUMPI DUP1 PUSH4 0xEEDC3C50 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF377E7CF EQ PUSH2 0x280 JUMPI PUSH4 0xF7C618C1 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x2B7 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH2 0x333 CALLDATASIZE PUSH2 0x36B2 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x33D PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER PUSH1 0x60 SHL DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x358 DUP2 PUSH2 0x3736 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x869 JUMPI JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x39B DUP5 PUSH2 0x38CF JUMP JUMPDEST SWAP5 PUSH2 0x3A9 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x376E JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH2 0x3B5 DUP6 PUSH2 0x38CF JUMP JUMPDEST PUSH1 0x1F NOT ADD CALLDATASIZE PUSH1 0x20 DUP9 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x82F JUMPI POP DUP2 EXTCODESIZE ISZERO PUSH2 0x27B JUMPI SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xEEDC3C5 PUSH1 0xE4 SHL DUP4 MSTORE DUP2 PUSH1 0x44 DUP5 ADD PUSH1 0x40 PUSH1 0x4 DUP7 ADD MSTORE MSTORE PUSH1 0x64 DUP4 ADD PUSH1 0x64 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 DUP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x77D JUMPI POP POP POP POP POP DUP2 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x751 JUMPI POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 DUP2 SWAP6 SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x723 JUMPI JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x455 JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH2 0x468 PUSH2 0x463 DUP3 DUP6 DUP6 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0x38AE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x704 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x64 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x6CA JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x6B7 JUMPI JUMPDEST POP PUSH2 0x588 DUP3 DUP8 PUSH2 0x394D JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x6B0 JUMPI JUMPDEST PUSH2 0x698 JUMPI JUMPDEST ISZERO PUSH2 0x5A6 JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x662 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP4 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x627 JUMPI JUMPDEST POP PUSH2 0x59C JUMP JUMPDEST PUSH2 0x648 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x64F JUMPI JUMPDEST PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3970 JUMP JUMPDEST POP DUP6 PUSH2 0x621 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x690 JUMPI JUMPDEST DUP2 PUSH2 0x67D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI SWAP2 MLOAD SWAP2 PUSH2 0x60D PUSH2 0x5DB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x670 JUMP JUMPDEST PUSH2 0x6AA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x49C1 JUMP JUMPDEST POP PUSH2 0x596 JUMP JUMPDEST POP DUP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND ISZERO ISZERO DUP7 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP3 POP PUSH2 0x6F6 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FD JUMPI JUMPDEST PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3988 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x569 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x71D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP7 PUSH2 0x4E8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE DUP4 PUSH2 0x443 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP2 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x76C PUSH1 0x1 SWAP6 PUSH2 0x366D JUMP JUMPDEST AND DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0x424 JUMP JUMPDEST SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x63 NOT DUP9 DUP3 SUB ADD DUP6 MSTORE DUP6 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x27B JUMPI DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7AF DUP3 PUSH2 0x366D JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x27B JUMPI ADD SWAP1 PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x27B JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0x27B JUMPI PUSH1 0x1 SWAP3 DUP3 PUSH1 0x20 SWAP4 SWAP3 PUSH1 0x60 PUSH1 0x40 DUP7 SWAP6 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MSTORE DUP1 PUSH1 0x80 SWAP4 DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP8 ADD SWAP6 ADD SWAP3 ADD DUP8 SWAP6 SWAP5 SWAP4 SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x848 PUSH2 0x463 PUSH1 0x1 SWAP5 DUP11 DUP11 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x862 DUP3 DUP11 PUSH2 0x394D JUMP JUMPDEST MSTORE ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x834 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x73B JUMPI DUP3 SWAP2 PUSH2 0x8A0 SWAP2 PUSH2 0x4B27 DUP5 CODECOPY CALLER DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE2 DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFFFFFFF DUP2 EXTCODESIZE AND ISZERO PUSH2 0x925 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8C6E353968E7FFD60DBA22FF7D2A4354AF301F9D41858A35668E7292EC1301B6 SWAP2 SWAP1 LOG1 DUP5 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206372656174696F6E206661696C65642C206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x991 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x999 PUSH2 0x3657 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x9E8 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x9F3 DUP3 ISZERO ISZERO PUSH2 0x3B42 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH32 0x0 AND SWAP4 DUP2 PUSH32 0x0 AND SWAP1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0xC4F JUMPI DUP1 PUSH2 0xA5C DUP5 SWAP3 PUSH2 0x498A JUMP JUMPDEST SWAP3 SWAP1 SLOAD PUSH1 0x3 SWAP4 DUP5 SHL SHR AND SWAP2 SLOAD SWAP2 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP4 DUP9 DUP3 DUP7 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xC20 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0xC14 JUMPI ADDRESS DUP4 EQ PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP10 DUP4 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0xFF DUP11 SWAP3 PUSH2 0xAD8 SWAP6 PUSH1 0x0 SWAP2 PUSH2 0xBE7 JUMPI JUMPDEST POP AND SWAP3 PUSH2 0x479B JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 DUP2 DUP4 EQ PUSH2 0xB8A JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP5 DUP6 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP6 ADD MSTORE DUP8 DUP5 PUSH1 0x64 DUP2 DUP13 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP5 DUP8 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB6D JUMPI JUMPDEST POP PUSH2 0xB39 DUP5 DUP9 DUP6 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0xB52 JUMPI PUSH2 0xB4A SWAP2 CALLER SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST POP JUMPDEST ADD PUSH2 0xA47 JUMP JUMPDEST PUSH2 0xB61 SWAP1 PUSH2 0xB68 SWAP3 CALLER SWAP2 PUSH2 0x4581 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x39A7 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xB84 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP12 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP5 POP DUP5 SWAP2 POP PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xBCA JUMPI JUMPDEST POP PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xBE0 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP8 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0xC07 SWAP2 POP DUP14 DUP1 RETURNDATASIZE LT PUSH2 0xC0D JUMPI JUMPDEST PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3919 JUMP JUMPDEST DUP15 PUSH2 0xAD0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBF5 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP2 POP PUSH2 0xB4C JUMP JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xC48 JUMPI JUMPDEST PUSH2 0xC38 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP1 DUP11 PUSH2 0xA95 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC2E JUMP JUMPDEST PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0xC96 DUP6 PUSH2 0xC7E DUP2 CALLER PUSH2 0x482F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC1 PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x9 SLOAD ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP1 DUP4 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH2 0xD86 SWAP4 PUSH2 0xD88 JUMPI JUMPDEST POP POP PUSH2 0x48D3 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH2 0xD9E SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP3 DUP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B696E6720737570706C7920746F206469737472696275746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x72657761726473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0xE66 PUSH2 0xE5C PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x41EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xE8F PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0xE98 CALLER PUSH2 0x46F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xEB0 DUP4 DUP3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xEBE DUP3 PUSH1 0x9 SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP1 DUP3 DUP1 PUSH1 0x64 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP3 PUSH2 0xF6B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH2 0xF81 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP4 PUSH2 0xF5A JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP2 DUP3 ISZERO PUSH2 0x1092 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP5 EQ PUSH2 0x107C JUMPI DUP6 DUP8 SWAP5 DUP7 DUP7 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x105C JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xFFF JUMPI JUMPDEST POP PUSH2 0xFE7 SWAP3 POP SUB DUP4 PUSH2 0x376E JUMP JUMPDEST PUSH2 0xFFB PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x361C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SWAP2 POP PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1044 JUMPI POP POP PUSH2 0xFE7 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xFDA JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x102D JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0xFE7 SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0xFDA SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xFB5 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH2 0x1125 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xC DUP4 MSTORE PUSH2 0x1145 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH2 0x4914 JUMP JUMPDEST SWAP1 PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11BB PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1235 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x1254 PUSH2 0x1243 PUSH2 0x42CF JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 DUP4 SWAP2 DUP6 PUSH2 0x37A8 JUMP JUMPDEST PUSH2 0x3868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP6 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x14CD JUMPI JUMPDEST POP PUSH2 0x12A2 PUSH5 0xE8D4A51000 SWAP3 SWAP4 ISZERO ISZERO PUSH2 0x3B81 JUMP JUMPDEST DIV DUP1 SWAP2 LT PUSH2 0x1488 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1457 JUMPI JUMPDEST PUSH2 0x12E7 SWAP3 POP LT ISZERO PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP3 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x1F NOT SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0x1325 PUSH1 0x84 DUP3 PUSH2 0x376E JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP7 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x144A JUMPI RETURNDATASIZE SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x73B JUMPI PUSH2 0x1369 SWAP3 PUSH2 0x135B DUP8 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x376E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 DUP8 DUP5 ADD RETURNDATACOPY PUSH2 0x4A5E JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1431 JUMPI JUMPDEST POP POP POP PUSH2 0x1419 JUMPI POP PUSH2 0x13A4 PUSH2 0x139D PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x1397 PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST DUP6 PUSH2 0x37A8 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x3932 JUMP JUMPDEST SWAP1 PUSH2 0x13AF DUP3 ADDRESS PUSH2 0x473C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP3 PUSH2 0x13FB SWAP3 SWAP1 SWAP2 DUP5 SWAP2 SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0x140B JUMPI JUMPDEST PUSH2 0xC7E DUP2 CALLER PUSH2 0x473C JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1414 DUP5 PUSH2 0x48D3 JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1441 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x3970 JUMP JUMPDEST ISZERO DUP5 DUP5 DUP2 PUSH2 0x1377 JUMP JUMPDEST POP PUSH2 0x1369 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST POP POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1481 JUMPI JUMPDEST PUSH2 0x146E DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI DUP2 PUSH2 0x12E7 SWAP2 MLOAD PUSH2 0x12DB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344432062616C616E636520697320696E73756666696369656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP DUP6 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x14F7 JUMPI JUMPDEST PUSH2 0x14E4 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x12A2 PUSH2 0x128F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x14DA JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH32 0x120DE5C966483867382DCE1EB95F0D016A917F91B2188B2F4C1413333A9FFB0F PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x153D PUSH2 0x3C95 JUMP JUMPDEST DUP1 PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x156E PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH1 0x3 SLOAD PUSH2 0x1631 DUP2 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x163C PUSH2 0x42CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x37A8 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x165D PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16BE PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16F8 PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x10 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x17DA JUMPI DUP7 DUP7 PUSH2 0x1791 DUP3 DUP9 SUB DUP4 PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x17BA JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x17AB JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x177B JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x180A PUSH2 0x3657 JUMP JUMPDEST SWAP1 PUSH2 0x1813 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x1836 PUSH2 0x181E PUSH2 0x42CF JUMP JUMPDEST PUSH2 0x124F PUSH1 0x3 SLOAD SWAP2 PUSH2 0x1830 DUP4 ISZERO ISZERO PUSH2 0x3B81 JUMP JUMPDEST DUP5 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP5 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1C99 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND SWAP4 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP8 DUP4 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1C7A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH4 0x802431FB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP8 DUP5 PUSH1 0x64 DUP2 PUSH1 0x24 SWAP10 DUP10 DUP12 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x1C4B JUMPI JUMPDEST POP PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND GT PUSH1 0x0 EQ PUSH2 0x1BFF JUMPI PUSH2 0x1922 DUP4 SWAP5 PUSH2 0x1922 PUSH2 0x191D DUP6 PUSH2 0x1928 SWAP7 SWAP8 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0x3BEC JUMP JUMPDEST SWAP1 PUSH2 0x3868 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BEA JUMPI PUSH2 0x191D PUSH2 0x1954 SWAP4 SWAP3 PUSH2 0x1922 SWAP3 PUSH2 0x3BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP2 DUP6 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1BB9 JUMPI JUMPDEST POP LT PUSH2 0x1B75 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1B44 JUMPI JUMPDEST PUSH2 0x19C1 SWAP3 POP LT ISZERO PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP8 DUP3 ADD SWAP1 DUP2 MSTORE CALLER DUP7 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP2 DUP3 ADD DUP2 MSTORE PUSH1 0x1F NOT SWAP3 PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 PUSH2 0x1A07 SWAP1 PUSH1 0x60 ADD DUP3 PUSH2 0x376E JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x1B37 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B22 JUMPI SWAP1 PUSH2 0x1A4D SWAP3 SWAP2 PUSH2 0x1A3D DUP9 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x376E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 DUP9 DUP5 ADD RETURNDATACOPY JUMPDEST DUP4 PUSH2 0x4AD5 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP6 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1B09 JUMPI JUMPDEST POP POP POP PUSH2 0x1AF4 JUMPI POP POP PUSH2 0x1A7C PUSH2 0x139D PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x1397 PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST PUSH2 0x1A86 DUP2 ADDRESS PUSH2 0x473C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP3 SWAP2 DUP4 SWAP2 LOG1 PUSH1 0x9 SLOAD PUSH2 0x1AE5 JUMPI JUMPDEST POP PUSH2 0x1ACD DUP3 CALLER PUSH2 0x473C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 SWAP1 DUP2 ADD PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x1AEE SWAP1 PUSH2 0x48D3 JUMP JUMPDEST DUP4 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1B19 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x3970 JUMP JUMPDEST ISZERO DUP6 DUP6 DUP2 PUSH2 0x1A5B JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A4D SWAP2 POP PUSH1 0x60 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST POP POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B6E JUMPI JUMPDEST PUSH2 0x1B5B DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI DUP2 PUSH2 0x19C1 SWAP2 MLOAD PUSH2 0x19B5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP6 ADD MSTORE PUSH32 0x42616C616E636520697320696E73756666696369656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1BE3 JUMPI JUMPDEST PUSH2 0x1BD2 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI DUP2 SWAP1 MLOAD DUP8 PUSH2 0x197E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BC8 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1922 DUP3 SWAP5 PUSH2 0x1C14 PUSH2 0x191D DUP7 PUSH2 0x1C1A SWAP7 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BEA JUMPI PUSH2 0x191D PUSH2 0x1C46 SWAP4 SWAP3 PUSH2 0x1922 SWAP3 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0x1954 JUMP JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C73 JUMPI JUMPDEST PUSH2 0x1C63 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP3 DUP9 PUSH2 0x18F6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x1C92 SWAP2 SWAP4 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1CB0 SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP8 PUSH2 0x1871 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x1CCF PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x1CD8 CALLER PUSH2 0x46F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CF3 DUP2 ISZERO ISZERO PUSH2 0x3AF6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x1D98 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP4 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1DAE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP3 PUSH2 0x1D5F JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1DD3 PUSH2 0x3CC1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x1 DUP2 MSTORE PUSH2 0x1DEF DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3B42 JUMP JUMPDEST PUSH1 0x0 DUP3 JUMPDEST PUSH2 0x1E26 JUMPI PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0xC96 DUP6 PUSH2 0xC7E DUP2 CALLER PUSH2 0x482F JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x1F82 JUMPI SWAP1 DUP2 PUSH2 0x1E43 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x498A JUMP JUMPDEST SWAP4 SWAP1 SLOAD PUSH1 0x3 SWAP5 DUP6 SHL SHR AND SWAP3 SLOAD SWAP3 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F55 JUMPI JUMPDEST POP DUP6 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F4C JUMPI JUMPDEST PUSH2 0x1F41 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP5 DUP4 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP7 DUP10 PUSH2 0x1EEF SWAP5 PUSH1 0xFF DUP10 SWAP8 PUSH2 0x1EC5 SWAP6 DUP13 SWAP2 PUSH2 0x1F2A JUMPI POP AND SWAP3 PUSH2 0x479B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI DUP5 SWAP4 DUP5 SWAP3 PUSH2 0x1F0D JUMPI JUMPDEST POP JUMPDEST ADD SWAP1 SWAP2 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x1F23 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0xC07 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP5 POP POP POP DUP3 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST POP ADDRESS DUP4 EQ PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1F7B JUMPI JUMPDEST PUSH2 0x1F6C DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP8 PUSH2 0x1E7A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x1F4 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH2 0x1FC2 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x1FCA PUSH2 0x3657 JUMP JUMPDEST SWAP1 PUSH2 0x39F3 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH2 0x2006 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x200E PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND DUP5 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x2206 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x64 DUP2 DUP6 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21E9 JUMPI JUMPDEST POP PUSH2 0x20DA DUP4 DUP4 PUSH32 0x0 AND DUP7 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0x21D5 JUMPI PUSH2 0x20EF SWAP2 PUSH2 0xB61 SWAP2 ADDRESS SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 PUSH2 0x211A CALLER ADDRESS PUSH2 0x39F3 JUMP JUMPDEST SWAP2 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 PUSH2 0x21B4 PUSH2 0x2710 PUSH2 0x2151 PUSH1 0x3 SLOAD PUSH1 0xF SLOAD SWAP1 PUSH2 0x37A8 JUMP JUMPDEST DIV PUSH2 0x215C DUP2 ADDRESS PUSH2 0x473C JUMP JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2174 DUP3 DUP3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2182 DUP2 PUSH1 0x9 SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x8 DUP5 MSTORE TIMESTAMP PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x9 SLOAD PUSH2 0x21C7 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH2 0x21D0 DUP2 PUSH2 0x48D3 JUMP JUMPDEST PUSH2 0x219C JUMP JUMPDEST PUSH2 0x21E4 SWAP2 PUSH2 0xB61 SWAP2 ADDRESS SWAP2 PUSH2 0x4581 JUMP JUMPDEST PUSH2 0x20EF JUMP JUMPDEST PUSH2 0x2200 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP6 PUSH2 0x20AC JUMP JUMPDEST SWAP1 SWAP3 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x222E JUMPI JUMPDEST PUSH2 0x221E DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP2 DUP6 PUSH2 0x2043 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2214 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x2253 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x225C CALLER PUSH2 0x46F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2324 JUMPI DUP3 PUSH2 0x227B SWAP2 PUSH2 0x3932 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x2295 DUP3 PUSH1 0x9 SLOAD PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP1 DUP3 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP3 PUSH2 0xF6B JUMPI POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F20756E7374616B6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH2 0x2377 CALLDATASIZE PUSH2 0x36B2 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP4 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2E0C JUMPI POP PUSH2 0x2392 DUP6 PUSH2 0x38E7 JUMP JUMPDEST SWAP1 PUSH2 0x239C DUP7 PUSH2 0x38E7 JUMP JUMPDEST SWAP4 PUSH2 0x23A6 DUP8 PUSH2 0x38E7 JUMP JUMPDEST SWAP4 PUSH2 0x23B0 DUP9 PUSH2 0x38E7 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP10 PUSH1 0x0 SWAP3 JUMPDEST DUP13 DUP9 DUP2 DUP7 LT PUSH2 0x2BE7 JUMPI POP POP POP POP POP POP DUP3 PUSH2 0x23E9 DUP4 PUSH2 0x23E3 PUSH2 0x23F5 SWAP7 SWAP6 PUSH2 0x23EF SWAP6 PUSH2 0x4545 JUMP JUMPDEST SWAP10 PUSH2 0x4545 JUMP JUMPDEST SWAP7 PUSH2 0x4545 JUMP JUMPDEST SWAP4 PUSH2 0x4545 JUMP JUMPDEST SWAP5 PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x263C JUMPI PUSH2 0x240C DUP2 DUP7 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x241A JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23F9 JUMP JUMPDEST PUSH2 0x2484 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x243F PUSH2 0x463 PUSH2 0x2437 DUP6 DUP13 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP14 DUP10 PUSH2 0x3888 JUMP JUMPDEST AND PUSH2 0x244A DUP4 DUP10 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 SWAP5 SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x261F JUMPI JUMPDEST POP PUSH2 0x24AC PUSH2 0x463 PUSH2 0x24A4 DUP5 DUP12 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP13 DUP9 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE SWAP3 DUP1 DUP5 PUSH1 0x64 DUP2 PUSH32 0x0 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI DUP4 DUP11 PUSH1 0x1 SWAP7 DUP15 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x25EA JUMPI JUMPDEST POP POP PUSH2 0x2571 SWAP3 PUSH2 0x2534 PUSH2 0x253C SWAP4 PUSH2 0x463 SWAP4 PUSH2 0x394D JUMP JUMPDEST MLOAD SWAP1 DUP11 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0x2546 DUP6 DUP12 PUSH2 0x394D JUMP JUMPDEST MLOAD SWAP1 DUP5 PUSH32 0x0 AND SWAP1 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0x25B2 JUMPI PUSH2 0x25A2 PUSH2 0x258A PUSH2 0x463 PUSH2 0x24A4 DUP5 DUP12 PUSH2 0x394D JUMP JUMPDEST PUSH2 0x2594 DUP4 DUP10 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP8 MLOAD PUSH2 0x25AB JUMPI CALLER SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST POP JUMPDEST SWAP1 POP PUSH2 0x2412 JUMP JUMPDEST ADDRESS SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x25DD PUSH2 0x25C5 PUSH2 0x463 PUSH2 0x24A4 DUP5 DUP12 PUSH2 0x394D JUMP JUMPDEST PUSH2 0x25CF DUP4 DUP10 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP8 MLOAD PUSH2 0x25E3 JUMPI CALLER SWAP2 PUSH2 0x4581 JUMP JUMPDEST POP PUSH2 0x25A4 JUMP JUMPDEST ADDRESS SWAP2 PUSH2 0x4581 JUMP JUMPDEST PUSH2 0x463 SWAP3 SWAP6 POP PUSH2 0x253C SWAP4 PUSH2 0x2612 PUSH2 0x2571 SWAP7 SWAP4 DUP4 PUSH2 0x2534 SWAP5 SWAP1 RETURNDATASIZE LT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP7 SWAP4 POP SWAP4 POP DUP2 SWAP5 POP PUSH2 0x251E JUMP JUMPDEST PUSH2 0x2635 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP11 PUSH2 0x2493 JUMP JUMPDEST POP DUP6 DUP3 DUP9 DUP6 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE66 JUMPI PUSH2 0x2657 DUP2 DUP7 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x2665 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x266F DUP2 DUP7 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP8 PUSH2 0x268F SWAP2 PUSH2 0x3868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP2 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2BB1 JUMPI JUMPDEST PUSH2 0x26D5 SWAP3 POP PUSH2 0x37A8 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH5 0xE8D4A51000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DIV SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x2B0D JUMPI JUMPDEST POP POP ISZERO PUSH2 0x265D JUMPI PUSH2 0x271B PUSH2 0x463 PUSH2 0x2713 DUP4 DUP6 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP6 DUP8 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2AEE JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x27B5 PUSH2 0x463 PUSH2 0x27AD DUP6 DUP8 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP8 DUP10 PUSH2 0x3888 JUMP JUMPDEST SWAP2 PUSH2 0x27F6 DUP3 PUSH32 0x0 AND SWAP4 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x27EE DUP9 DUP14 PUSH2 0x394D JUMP JUMPDEST MLOAD DIV SWAP2 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0x28C1 JUMPI POP DUP1 PUSH2 0x282D PUSH2 0x2814 PUSH2 0x463 PUSH2 0x27AD PUSH2 0x286B SWAP6 DUP8 PUSH2 0x394D JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x2824 DUP5 DUP11 PUSH2 0x394D JUMP JUMPDEST MLOAD DIV ADDRESS SWAP2 PUSH2 0x40FA JUMP JUMPDEST PUSH1 0x20 PUSH2 0x2844 PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x1397 PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x289B SWAP3 PUSH2 0x28A2 JUMPI JUMPDEST POP ISZERO ISZERO PUSH2 0x39A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x265D JUMP JUMPDEST PUSH2 0x28BA SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP10 PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x28E3 PUSH2 0x463 PUSH2 0x28DB DUP7 DUP9 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP9 DUP11 PUSH2 0x3888 JUMP JUMPDEST SWAP3 PUSH2 0x29C7 PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x28F9 DUP9 DUP14 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH20 0x9E46F287CB791987B6228C32669EA5126AA105D PUSH1 0x62 SHL DUP9 DUP3 ADD MSTORE PUSH2 0x177 PUSH1 0xEB SHL PUSH1 0x34 DUP3 ADD DUP2 SWAP1 MSTORE PUSH19 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF127 PUSH1 0x64 SHL PUSH1 0x37 DUP4 ADD MSTORE PUSH1 0x4B DUP3 ADD MSTORE PUSH1 0x60 SWAP9 DUP10 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x4E DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE SWAP2 SWAP1 DIV PUSH2 0x2970 DUP3 PUSH2 0x3752 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x297D DUP4 PUSH2 0x371A JUMP JUMPDEST DUP3 MSTORE DUP7 DUP3 ADD SWAP1 ADDRESS DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP9 TIMESTAMP DUP11 MSTORE DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP1 DUP5 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP9 MSTORE DUP13 PUSH1 0x4 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH2 0x361C JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE MLOAD PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2ABC JUMPI JUMPDEST POP PUSH2 0x2A3C PUSH1 0x20 PUSH2 0x2A15 PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x2A0F PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST DUP7 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x2A9D JUMPI JUMPDEST POP ISZERO PUSH2 0x2A6A JUMPI PUSH1 0x1 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2AB5 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP8 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AE6 JUMPI JUMPDEST DUP2 PUSH2 0x2AD7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP8 PUSH2 0x29F4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2ACA JUMP JUMPDEST PUSH2 0x2B07 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP8 PUSH2 0x2794 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2B7D JUMPI JUMPDEST POP PUSH5 0xE8D4A51000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH5 0xE8D4A51000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI GT ISZERO DUP8 DUP1 PUSH2 0x26FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BA9 JUMPI JUMPDEST DUP2 PUSH2 0x2B99 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP1 DUP9 PUSH2 0x2B42 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2B8C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BDF JUMPI JUMPDEST DUP2 PUSH2 0x2BCC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI PUSH2 0x26D5 SWAP2 MLOAD SWAP1 PUSH2 0x26CB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C06 PUSH2 0x463 DUP9 PUSH1 0x24 SWAP7 SWAP8 SWAP9 SWAP10 SWAP12 SWAP6 PUSH1 0x20 SWAP6 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP15 DUP11 DUP10 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x2DCF JUMPI JUMPDEST POP PUSH2 0x2C4D PUSH2 0x463 PUSH1 0x4 SWAP7 PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI DUP16 SWAP4 DUP12 DUP9 SWAP6 DUP8 DUP10 SWAP6 DUP14 SWAP6 PUSH1 0x0 SWAP6 PUSH2 0x2D90 JUMPI JUMPDEST POP SWAP5 DUP3 PUSH2 0x2CDD PUSH1 0xFF PUSH2 0x2CC0 PUSH2 0x2CB3 DUP6 PUSH2 0x463 SWAP8 PUSH2 0x2CAD PUSH2 0x2CE3 SWAP13 SWAP14 PUSH2 0x2CA7 PUSH2 0x463 DUP6 DUP16 SWAP15 PUSH2 0x2CA7 SWAP16 PUSH2 0x3888 JUMP JUMPDEST SWAP1 PUSH2 0x4378 JUMP JUMPDEST SWAP14 PUSH2 0x3888 JUMP JUMPDEST CALLDATALOAD SWAP13 PUSH2 0x2710 DUP1 SWAP13 DIV PUSH2 0x3868 JUMP JUMPDEST DUP13 DUP2 GT SWAP13 SWAP1 DUP14 ISZERO PUSH2 0x2D81 JUMPI SWAP1 PUSH2 0x2CD5 SWAP2 PUSH2 0x3932 JUMP JUMPDEST SWAP9 JUMPDEST AND PUSH2 0x393F JUMP JUMPDEST SWAP5 PUSH2 0x3888 JUMP JUMPDEST SWAP4 ISZERO PUSH2 0x2D46 JUMPI DUP7 PUSH2 0x2CF3 SWAP2 PUSH2 0x37A8 JUMP JUMPDEST DIV SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP13 PUSH2 0x2D35 DUP3 PUSH2 0x2D23 PUSH1 0x1 SWAP7 PUSH2 0x2D3B SWAP7 PUSH2 0x3868 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x2D2F DUP4 DUP14 PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x3961 JUMP JUMPDEST SWAP6 JUMPDEST ADD SWAP3 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP14 PUSH2 0x2D57 SWAP3 SWAP9 SWAP10 SWAP4 POP DUP15 SWAP2 POP PUSH2 0x38C2 JUMP JUMPDEST SWAP12 DUP8 PUSH2 0x2D63 DUP4 DUP14 PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x2D6E DUP3 DUP12 PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x2D78 SWAP1 PUSH2 0x3961 JUMP JUMPDEST SWAP6 PUSH1 0x1 SWAP1 PUSH2 0x2D3D JUMP JUMPDEST PUSH2 0x2D8A SWAP2 PUSH2 0x3932 JUMP JUMPDEST SWAP9 PUSH2 0x2CD7 JUMP JUMPDEST DUP7 DUP1 SWAP7 POP DUP5 DUP7 SWAP9 SWAP4 SWAP5 SWAP6 SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2DC8 JUMPI JUMPDEST PUSH2 0x2DB0 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD PUSH2 0x2DBB SWAP2 PUSH2 0x3919 JUMP JUMPDEST SWAP8 POP SWAP5 SWAP4 SWAP3 POP SWAP7 POP PUSH2 0x2C7A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2DA6 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2E04 JUMPI JUMPDEST DUP2 PUSH2 0x2DED PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI SWAP1 MLOAD DUP7 SWAP2 SWAP1 DUP15 DUP11 PUSH2 0x2C4D PUSH2 0x2C32 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2DE0 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2E25 PUSH2 0x463 DUP6 DUP10 DUP7 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2E77 JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP2 PUSH2 0x1145 PUSH2 0x2E6E SWAP3 PUSH2 0x2CA7 PUSH2 0x463 DUP9 DUP13 DUP10 PUSH2 0x3888 JUMP JUMPDEST SWAP4 SWAP5 SWAP3 ADD PUSH2 0x2381 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2EA0 JUMPI JUMPDEST PUSH2 0x2E8E DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP2 PUSH2 0x1145 PUSH2 0x2E54 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2E84 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH2 0x42CF JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH2 0x2EDC PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x2F0E DUP2 PUSH2 0x3736 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP3 DUP2 AND ISZERO PUSH2 0x2FE5 JUMPI PUSH2 0x2F9B PUSH2 0x2FA7 DUP6 PUSH2 0x834 SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2F35 DUP4 DUP8 ADD DUP4 PUSH2 0x376E JUMP JUMPDEST DUP6 DUP3 MSTORE DUP3 DUP3 ADD SWAP6 PUSH2 0x4B27 DUP8 CODECOPY PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP5 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH2 0x2F74 SWAP1 DUP3 SWAP1 DUP5 ADD SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH2 0x2F8C DUP7 DUP7 ADD SWAP10 DUP11 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x35F9 JUMP JUMPDEST DUP5 ADD SWAP2 MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x35F9 JUMP JUMPDEST ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x376E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 PUSH1 0xFF PUSH1 0xF8 SHL DUP5 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x21 DUP5 ADD MSTORE PUSH1 0x35 DUP4 ADD MSTORE PUSH1 0x55 DUP3 ADD MSTORE PUSH1 0x55 DUP2 MSTORE PUSH2 0x2FD9 DUP2 PUSH2 0x3752 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265207A65726F2E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x3043 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x304B PUSH2 0x3657 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 PUSH1 0x0 NOT DUP6 SUB PUSH2 0x308B JUMPI JUMPDEST POP PUSH2 0xE66 SWAP4 POP PUSH2 0x41EF JUMP JUMPDEST DUP4 DUP6 LT PUSH2 0x30F7 JUMPI DUP1 ISZERO PUSH2 0x30DE JUMPI CALLER ISZERO PUSH2 0x30C5 JUMPI PUSH2 0xE66 SWAP5 DUP5 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP5 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x3154 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x3175 PUSH1 0x3 SLOAD PUSH2 0x3165 DUP2 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x3170 PUSH2 0x42CF JUMP JUMPDEST PUSH2 0x3790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x802431FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 PUSH1 0x64 DUP2 PUSH32 0x0 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3411 JUMPI JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP2 DUP3 DUP7 MSTORE ADDRESS PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 DUP6 DUP8 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x33E2 JUMPI JUMPDEST POP PUSH5 0xE8D4A51000 SWAP1 DUP2 DUP4 MUL SWAP3 DUP1 DUP5 DIV DUP4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP1 DUP4 LT ISZERO PUSH2 0x334F JUMPI POP DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP6 SWAP5 PUSH2 0x32E1 SWAP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3286 PUSH2 0x32D3 SWAP6 PUSH2 0x32D9 SWAP6 PUSH2 0x3868 JUMP JUMPDEST DIV SWAP2 DUP1 DUP4 GT PUSH2 0x3347 JUMPI JUMPDEST POP PUSH32 0x0 AND PUSH2 0x32BD DUP10 DUP3 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x32C8 ADDRESS DUP11 ADDRESS PUSH2 0x40FA JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 LT ISZERO PUSH2 0x37BB JUMP JUMPDEST ADDRESS PUSH2 0x3E68 JUMP JUMPDEST ADDRESS SWAP1 ADDRESS PUSH2 0x3FC7 JUMP JUMPDEST POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3317 JUMPI JUMPDEST POP PUSH2 0x3310 SWAP3 POP GT PUSH2 0x381C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3340 JUMPI JUMPDEST PUSH2 0x332D DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI PUSH2 0x3310 SWAP2 MLOAD DUP4 PUSH2 0x3304 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3323 JUMP JUMPDEST SWAP2 POP DUP11 PUSH2 0x3290 JUMP JUMPDEST SWAP4 POP POP SWAP1 SWAP6 POP SWAP4 SWAP3 SWAP2 SWAP4 GT PUSH2 0x3368 JUMPI JUMPDEST POP POP POP POP PUSH2 0x3310 JUMP JUMPDEST PUSH2 0x33C7 PUSH2 0x33BA PUSH2 0x33BF PUSH1 0x1 SWAP5 PUSH2 0x33D9 SWAP8 PUSH32 0x0 AND PUSH2 0x33A5 DUP9 DUP3 ADDRESS PUSH2 0x3E68 JUMP JUMPDEST PUSH2 0x33B0 ADDRESS DUP10 ADDRESS PUSH2 0x3FC7 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 GT PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x3CE4 JUMP JUMPDEST ADDRESS SWAP1 ADDRESS PUSH2 0x40FA JUMP JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x381C JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0x335F JUMP JUMPDEST SWAP1 SWAP7 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x340A JUMPI JUMPDEST PUSH2 0x33FA DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP6 DUP9 PUSH2 0x3235 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x33F0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3437 JUMPI JUMPDEST PUSH2 0x3428 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP5 PUSH2 0x31E8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x341E JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x3457 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x30DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x30C5 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP2 DUP3 ISZERO PUSH2 0x357F JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP5 EQ PUSH2 0x107C JUMPI DUP6 DUP8 SWAP5 DUP7 DUP7 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x105C JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x3522 JUMPI POP PUSH2 0xFE7 SWAP3 POP SUB DUP4 PUSH2 0x376E JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x3567 JUMPI POP POP PUSH2 0xFE7 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xFDA JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x3550 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x34F1 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH32 0xBEA1B31142AE4B1F4EFAD240349036D718B7950D246C127768097CCF602FC7E0 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x35C8 PUSH2 0x3C95 JUMP JUMPDEST DUP1 PUSH1 0xD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH1 0x3 SLOAD PUSH2 0x3165 DUP2 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x360C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35FC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3635 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x35F9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x27B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x27B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x27B JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x27B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x27B JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x27B JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x27B JUMPI DUP3 PUSH2 0x36DF SWAP2 PUSH1 0x4 ADD PUSH2 0x3681 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x27B JUMPI PUSH2 0x36F9 SWAP2 PUSH1 0x4 ADD PUSH2 0x3681 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x2B67 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2B67 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x37C2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417262697472616765206661696C65643A20696E73756666696369656E74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D5D1C1D5D08185B5BDD5B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3823 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41726269747261676520646964206E6F742070726F6669740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3872 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2B67 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x73B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x38F1 DUP3 PUSH2 0x38CF JUMP JUMPDEST PUSH2 0x38FE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x376E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x390F PUSH1 0x1F NOT SWAP2 PUSH2 0x38CF JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x27B JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2B67 JUMPI JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x2B67 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2B67 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x27B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x27B JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x39AE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170204661696C65642C20547279204275726E2829000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x39FD PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x3A06 DUP4 PUSH2 0x46F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 PUSH1 0x0 SWAP4 DUP3 DUP6 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xC DUP3 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD SWAP4 PUSH2 0x3A30 DUP6 ISZERO ISZERO PUSH2 0x3AF6 JUMP JUMPDEST DUP7 MSTORE PUSH1 0xC DUP3 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 DUP8 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 DUP2 PUSH1 0x44 DUP2 DUP11 PUSH32 0x0 DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x3AEB JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH2 0x3ACE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 DUP6 DUP6 MSTORE AND SWAP3 LOG2 SWAP1 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3AE4 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE PUSH2 0x3ABB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3AFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3B49 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9CDD59999A58DA595B9D08109053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3B88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2042414C554E4920737570706C792063616E6E6F74206265207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2B67 JUMPI JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x2B67 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3C04 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x3CA9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x3CD2 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP4 PUSH1 0x44 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3E5D JUMPI PUSH1 0x0 SWAP4 PUSH2 0x3E2E JUMPI JUMPDEST POP DUP2 DUP4 SUB PUSH2 0x3D41 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP6 SWAP3 PUSH2 0x3DB9 JUMPI JUMPDEST DUP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3DAF JUMPI POP PUSH2 0x3D91 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0x3D39 JUMP JUMPDEST DUP2 PUSH2 0x3DA7 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x3D88 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 SWAP3 DUP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x3E23 JUMPI SWAP2 DUP7 SWAP4 SWAP2 PUSH2 0x3D77 SWAP7 SWAP6 SWAP4 PUSH2 0x3E06 JUMPI JUMPDEST POP SWAP5 POP PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x3E1C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE PUSH2 0x3DFE JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E56 JUMPI JUMPDEST PUSH2 0x3E46 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x3D30 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3E3C JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP6 AND SWAP1 DUP7 DUP5 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3E23 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x3F98 JUMPI JUMPDEST POP DUP3 DUP5 SUB PUSH2 0x3EC3 JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP7 SWAP4 PUSH2 0x3F35 JUMPI JUMPDEST DUP5 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 POP DUP4 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3DAF JUMPI POP PUSH2 0x3F17 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3EBA JUMP JUMPDEST DUP2 PUSH2 0x3F2D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x3F0D JUMP JUMPDEST SWAP2 SWAP4 DUP1 SWAP6 SWAP2 SWAP4 POP MLOAD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x3E23 JUMPI SWAP2 DUP7 SWAP4 SWAP2 PUSH2 0x3EFC SWAP7 SWAP6 SWAP4 PUSH2 0x3F7B JUMPI JUMPDEST POP PUSH2 0x3ECA JUMP JUMPDEST PUSH2 0x3F91 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE PUSH2 0x3F75 JUMP JUMPDEST SWAP1 SWAP4 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3FC0 JUMPI JUMPDEST PUSH2 0x3FB0 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP3 CODESIZE PUSH2 0x3EB1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA6 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x3FD4 DUP2 PUSH2 0x36FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE DUP3 DUP1 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH2 0xBB8 DUP7 MSTORE DUP3 PUSH1 0x60 DUP7 ADD SWAP9 AND DUP9 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP5 PUSH1 0x0 SWAP11 DUP12 SWAP10 DUP11 DUP7 MSTORE DUP3 PUSH1 0xE0 DUP12 ADD SWAP8 DUP13 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP13 DUP14 PUSH4 0x414BF389 PUSH1 0xE0 SHL SWAP1 MSTORE MLOAD AND PUSH1 0x4 DUP14 ADD MSTORE MLOAD AND PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD PUSH1 0x84 DUP8 ADD MSTORE MLOAD PUSH1 0xA4 DUP7 ADD MSTORE MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP4 ADD MSTORE PUSH32 0x0 AND DUP2 GAS SWAP4 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP2 DUP3 ISZERO PUSH2 0x40EE JUMPI DUP1 SWAP3 PUSH2 0x40BA JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40E6 JUMPI JUMPDEST DUP2 PUSH2 0x40D6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x4107 DUP2 PUSH2 0x36FD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 DUP2 DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH2 0xBB8 DUP7 MSTORE DUP3 PUSH1 0x60 DUP7 ADD SWAP9 AND DUP9 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP5 PUSH1 0x0 SWAP11 DUP12 SWAP10 DUP11 DUP7 MSTORE DUP3 PUSH1 0xE0 DUP12 ADD SWAP8 DUP13 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP13 DUP14 PUSH4 0x414BF389 PUSH1 0xE0 SHL SWAP1 MSTORE MLOAD AND PUSH1 0x4 DUP14 ADD MSTORE MLOAD AND PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD PUSH1 0x84 DUP8 ADD MSTORE MLOAD PUSH1 0xA4 DUP7 ADD MSTORE MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP4 ADD MSTORE PUSH32 0x0 AND DUP2 GAS SWAP4 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP2 DUP3 ISZERO PUSH2 0x40EE JUMPI DUP1 SWAP3 PUSH2 0x40BA JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x42B6 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x429D JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x426B JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x1 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x42E2 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x42F5 DUP5 PUSH2 0x498A JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3DAF JUMPI POP PUSH1 0x0 SWAP3 PUSH2 0x4345 JUMPI JUMPDEST POP POP SWAP2 PUSH2 0x1145 PUSH2 0x433D SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x4378 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x42D6 JUMP JUMPDEST DUP2 DUP2 SWAP4 SWAP3 SWAP4 RETURNDATASIZE DUP4 GT PUSH2 0x4371 JUMPI JUMPDEST PUSH2 0x435C DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD PUSH2 0x1145 PUSH2 0x433D PUSH2 0x432B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP2 SWAP3 PUSH1 0x0 SWAP3 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 DUP6 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x453A JUMPI DUP7 SWAP6 PUSH2 0x451B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP6 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x3AEB JUMPI DUP8 SWAP6 PUSH2 0x44FC JUMPI JUMPDEST POP DUP3 EQ PUSH2 0x44C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x802431FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP6 SWAP1 DUP4 PUSH2 0x4495 JUMPI JUMPDEST POP POP POP PUSH2 0x4463 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 PUSH2 0x448B PUSH2 0x4484 PUSH2 0x191D PUSH2 0x1C14 SWAP5 PUSH2 0x4491 SWAP8 SWAP7 PUSH2 0x3BD8 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x37A8 JUMP JUMPDEST SWAP3 PUSH2 0x37A8 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 SWAP4 SWAP7 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x44C1 JUMPI JUMPDEST PUSH2 0x44AE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD SWAP3 CODESIZE DUP1 DUP1 PUSH2 0x4453 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x44A4 JUMP JUMPDEST POP POP POP POP POP PUSH5 0xE8D4A51000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x44E8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x4514 SWAP2 SWAP6 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0x43DD JUMP JUMPDEST PUSH2 0x4533 SWAP2 SWAP6 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0x43B1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x4550 DUP2 PUSH2 0x38E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4562 JUMPI POP SWAP1 SWAP3 POP POP JUMP JUMPDEST DUP1 PUSH2 0x456F PUSH1 0x1 SWAP3 DUP8 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x457A DUP3 DUP7 PUSH2 0x394D JUMP JUMPDEST MSTORE ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP4 DUP5 SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND DUP3 DUP6 ADD MSTORE PUSH2 0x177 PUSH1 0xEB SHL DUP1 PUSH1 0x34 DUP7 ADD MSTORE PUSH19 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF127 PUSH1 0x64 SHL PUSH1 0x37 DUP7 ADD MSTORE PUSH1 0x4B DUP6 ADD MSTORE PUSH20 0x9E46F287CB791987B6228C32669EA5126AA105D PUSH1 0x62 SHL PUSH1 0x4E DUP6 ADD MSTORE PUSH1 0x42 DUP5 MSTORE PUSH2 0x45FA DUP5 PUSH2 0x3752 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x4607 DUP6 PUSH2 0x371A JUMP JUMPDEST DUP5 MSTORE DUP2 DUP5 ADD SWAP3 PUSH2 0x4667 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP1 SWAP4 AND DUP7 MSTORE PUSH1 0x40 DUP8 ADD SWAP7 TIMESTAMP DUP9 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP7 PUSH1 0x0 SWAP8 DUP9 SWAP4 DUP5 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP9 MSTORE DUP13 PUSH1 0x4 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH2 0x361C JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE MLOAD PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x46EC JUMPI DUP2 SWAP4 PUSH2 0x46BB JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x46E5 JUMPI JUMPDEST PUSH2 0x46D3 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD CODESIZE DUP1 DUP1 PUSH2 0x46B5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x46C9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x470A DUP3 PUSH2 0x4914 JUMP JUMPDEST SWAP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x4726 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x429D JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x477E PUSH1 0x0 SWAP5 PUSH1 0x3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP5 DUP5 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x47A8 DUP3 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH1 0x12 DUP2 GT PUSH2 0x47EA JUMPI PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x47DB JUMPI PUSH1 0x12 SUB SWAP3 PUSH1 0x12 DUP5 GT PUSH2 0x2B67 JUMPI PUSH2 0x448B PUSH2 0x124F SWAP3 PUSH2 0x1C14 PUSH2 0x47D8 SWAP7 PUSH2 0x393F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x47D8 SWAP3 PUSH2 0x124F SWAP2 SWAP3 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646563696D616C732073686F756C64206265203C3D2031380000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x42B6 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 DUP2 DUP6 LT PUSH2 0x48A1 JUMPI POP PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 SWAP7 DUP6 DUP8 MSTORE PUSH1 0x1 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x3 SLOAD SUB PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 DUP2 PUSH2 0x48E0 JUMPI POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI PUSH2 0x490F SWAP2 PUSH2 0x4907 SWAP2 PUSH2 0x3868 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x497F PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x497A PUSH2 0x4944 PUSH1 0x40 DUP4 KECCAK256 SLOAD TIMESTAMP PUSH2 0x3932 JUMP JUMPDEST PUSH4 0x1E13380 SWAP6 SWAP1 DUP7 DUP2 GT ISZERO PUSH2 0x4984 JUMPI POP DUP6 SWAP1 JUMPDEST DUP4 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x448B PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP4 PUSH1 0x40 PUSH1 0xA SLOAD SWAP2 PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH2 0x37A8 JUMP JUMPDEST DIV DIV SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4957 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4A59 JUMPI PUSH1 0x10 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x4A45 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x10 SSTORE DUP2 LT ISZERO PUSH2 0x4A31 JUMPI SWAP1 DUP3 PUSH1 0x40 SWAP3 PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD SSTORE PUSH1 0x10 SLOAD SWAP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH2 0x4A87 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x4A75 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP1 MLOAD ISZERO DUP1 PUSH2 0x4ABE JUMPI JUMPDEST PUSH2 0x4A98 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EXTCODESIZE ISZERO PUSH2 0x4A91 JUMP JUMPDEST SWAP1 PUSH2 0x4AEA JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x4A75 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x4B1D JUMPI JUMPDEST PUSH2 0x4AFB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x4AF3 JUMP INVALID PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x834 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xD7 JUMP JUMPDEST SWAP3 ADD PUSH1 0xD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 CALLER DUP4 SWAP1 SUB PUSH1 0x89 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP2 AND DUP2 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x749 SWAP1 DUP2 PUSH2 0xEB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x27B7363C902937BABA32B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xBC JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI POP DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x42B JUMPI PUSH4 0xEEDC3C50 EQ PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x3DC JUMPI PUSH2 0x75 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x476 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x24 DUP1 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x423 JUMPI PUSH2 0x90 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x476 JUMP JUMPDEST SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH1 0x1 SWAP9 DUP8 DUP11 SLOAD AND CALLER SUB PUSH2 0x3E0 JUMPI DUP11 JUMPDEST DUP3 DUP2 LT PUSH2 0x31C JUMPI POP POP POP POP DUP5 DUP8 SLOAD AND SWAP1 DUP5 MLOAD DUP1 SWAP3 PUSH4 0xC2FE7FF PUSH1 0xE1 SHL DUP3 MSTORE DUP2 DUP7 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x312 JUMPI DUP11 SWAP2 PUSH2 0x2E1 JUMPI JUMPDEST POP DUP9 DUP11 JUMPDEST DUP9 DUP11 DUP6 DUP1 DUP5 LT PUSH2 0x1FB JUMPI SWAP5 POP POP POP POP POP PUSH2 0xFB JUMPI DUP9 DUP1 RETURN JUMPDEST DUP9 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x10B JUMPI POP POP DUP9 DUP1 RETURN JUMPDEST DUP10 SWAP2 DUP9 PUSH2 0x121 PUSH2 0x11C DUP5 DUP8 DUP15 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x160 JUMPI POP POP SELFBALANCE PUSH2 0x14D JUMPI JUMPDEST ADD DUP10 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x15B DUP9 DUP13 SLOAD AND SELFBALANCE SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP1 DUP6 DUP3 DUP9 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1F1 JUMPI SWAP1 DUP4 SWAP3 SWAP2 DUP14 SWAP6 SWAP5 SWAP3 PUSH2 0x1BB JUMPI JUMPDEST POP DUP11 PUSH1 0xA DUP4 GT PUSH2 0x1A6 JUMPI JUMPDEST POP POP POP POP PUSH2 0x145 JUMP JUMPDEST PUSH2 0x1B2 SWAP4 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST DUP11 CODESIZE DUP1 DUP11 PUSH2 0x19D JUMP JUMPDEST SWAP5 POP SWAP1 POP DUP6 DUP5 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x1EA JUMPI JUMPDEST PUSH2 0x1D4 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI DUP12 SWAP4 MLOAD SWAP1 CODESIZE PUSH2 0x192 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x11C SWAP2 PUSH2 0x209 SWAP4 PUSH2 0x570 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x248 JUMPI POP PUSH2 0x240 PUSH2 0x2710 PUSH2 0x236 DUP6 SELFBALANCE PUSH2 0x580 JUMP JUMPDEST DIV DUP11 DUP5 SLOAD AND PUSH2 0x66F JUMP JUMPDEST ADD DUP10 SWAP1 PUSH2 0xE3 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP6 DUP2 DUP9 DUP2 DUP6 GAS STATICCALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0x2D6 JUMPI DUP14 SWAP5 SWAP4 SWAP3 DUP7 SWAP3 SWAP1 PUSH2 0x29B JUMPI JUMPDEST POP PUSH2 0x28A PUSH2 0x296 SWAP4 SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0x580 JUMP JUMPDEST DIV SWAP1 DUP12 DUP6 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2CF JUMPI JUMPDEST PUSH2 0x2B5 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2CB JUMPI MLOAD DUP12 SWAP3 SWAP1 DUP5 SWAP1 PUSH2 0x28A PUSH2 0x278 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2AB JUMP JUMPDEST DUP11 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x30B JUMPI JUMPDEST PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x307 JUMPI MLOAD CODESIZE PUSH2 0xDF JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2EE JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32A PUSH2 0x11C DUP3 DUP6 DUP6 PUSH2 0x4AC JUMP JUMPDEST DUP13 PUSH1 0x20 SWAP2 DUP3 PUSH2 0x33A DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST ADD CALLDATALOAD SWAP1 PUSH2 0x348 DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3DC JUMPI ADD DUP1 CALLDATALOAD SWAP1 DUP10 DUP3 GT PUSH2 0x3DC JUMPI DUP6 ADD SWAP3 DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0x3DC JUMPI DUP5 SWAP4 DUP3 DUP16 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0x38D PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x39B JUMPI POP DUP11 ADD PUSH2 0xAA JUMP JUMPDEST DUP8 PUSH1 0x11 DUP9 PUSH1 0x64 SWAP4 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42617463682063616C6C206661696C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C61626C65206F6E6C792062792074686520726F757465720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP3 SLOAD AND DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4A7 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x4A7 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x4A7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x5E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x4A7 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4A7 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x51A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x55F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x4F8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x593 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x44 DUP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP2 DUP5 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x51A JUMPI PUSH2 0x614 SWAP3 PUSH1 0x40 MSTORE AND SWAP3 PUSH1 0x0 DUP1 SWAP4 DUP2 SWAP3 MLOAD SWAP1 DUP3 DUP8 GAS CALL PUSH2 0x60D PUSH2 0x530 JUMP JUMPDEST SWAP1 DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x644 JUMPI JUMPDEST POP POP POP PUSH2 0x62C JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x66C JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x622 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x690 PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x698 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6D7 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x698 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x70A JUMPI JUMPDEST PUSH2 0x6E8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x6E0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE ADDRESS PUSH24 0x1BDAC7A28577E83853179585C14D2D1DE60202BEE4D616BC 0x29 0x25 0xC9 SWAP4 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x27 SWAP2 0xBC LOG1 CALLCODE 0xDE CHAINID PUSH2 0xED88 LOG3 0xC SWAP10 0xA7 0xA9 DIFFICULTY SWAP11 0xA8 COINBASE PUSH21 0xA2646970667358221220E671A31319BAF4EFCDFD37 DUP5 0xF9 0xEA COINBASE AND 0xCB 0xBE SWAP7 0xDD 0x25 SHL 0x24 BASEFEE SWAP1 SELFDESTRUCT 0xD4 0xB6 SWAP6 DUP14 SWAP1 0xAA PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"2126:22032:19:-:0;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;:::i;:::-;-1:-1:-1;;;2126:22032:19;;;;3731:10;1273:26:1;1269:95;;-1:-1:-1;2126:22032:19;;3731:10;-1:-1:-1;;;;;;2126:22032:19;;;;;;-1:-1:-1;;;3731:10:19;-1:-1:-1;;;;;2126:22032:19;3052:40:1;-1:-1:-1;;3052:40:1;2126:22032:19;;;-1:-1:-1;;;;;2126:22032:19;;;;;1962:13:4;2126:22032:19;;;;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;-1:-1:-1;;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;1985:17:4;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2126:22032:19;;;;;;;;;;;;;;;;;3795:4;930:27:20;;;;:57;;;2126:22032:19;;;;3795:4;1026:36:20;;3795:4:19;1067:34:20;;2289:2:19;;2126:22032;2331:5;;2126:22032;2289:2;2376;2126:22032;2732:42;2724:51;;2864:42;2852:55;;2966:61;;2984:42;2966:61;;7787:91:4;;2126:22032:19;;;;6496:21:4;;2126:22032:19;6496:21:4;:::i;:::-;;2126:22032:19;3795:4;2126:22032;;;;;;;3845:7;;2126:22032;;;;;;;;;;;;3795:4;7346:25:4;3795:4:19;;7346:25:4;;3795:4:19;2126:22032;;4059:15;2126:22032;;;;;4059:31;2126:22032;;4059:31;:::i;:::-;2126:22032;;4095:24;;2126:22032;4095:24;:::i;:::-;;2126:22032;3731:10;2126:22032;;4124:14;2126:22032;;4153:15;2126:22032;;;;4095:24;2126:22032;4179:17;;;;;4175:61;;;2126:22032;3795:4;;;;;2126:22032;;4124:14;2126:22032;;1650:41:20;2126:22032:19;;;;4153:15;1650:41:20;:::i;:::-;668:8;;;1709:27;;;668:8;;;1709:57;1892:33;1709:57;;3795:4:19;2126:22032;;4059:15;2126:22032;;1892:19:20;2126:22032:19;;;;;1839:36:20;:11;2126:22032:19;1853:13:20;2126:22032:19;;;;;;1839:36:20;;:::i;:::-;1892:19;;:::i;:::-;:33;:::i;:::-;486:4;;3795::19;2126:22032;;2224:6:20;2126:22032:19;;2224:26:20;2126:22032:19;;;;;;2224:26:20;:::i;:::-;2126:22032:19;;1853:13:20;1839:11;2126:22032:19;3795:4;;2126:22032;;;;;8409:50:12;;:::i;:::-;;2126:22032:19;;;;;;;1026:36:20;2126:22032:19;;;;;;;;;;;;;;;1067:34:20;2126:22032:19;;;;;;;;;;;;;;;;;;;;2724:51;2126:22032;;;;;;;;;;;;;;;;;;;;2852:55;2126:22032;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:57:20;1892:33;1709:57;;;4175:61:19;1168:87:20;;4175:61:19;;;;1168:87:20;486:4;;;;;;;;;;1197:52;486:4;;;;;1197:52;2126:22032:19;1197:52:20;:::i;:::-;;2126:22032:19;1168:87:20;;;;;486:4;-1:-1:-1;;;486:4:20;;;;;;2126:22032:19;486:4:20;7787:91:4;2126:22032:19;;;;;7835:32:4;;;;;;;;2126:22032:19;7835:32:4;2126:22032:19;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;930:57:20;;;2126:22032:19;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;-1:-1:-1;;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;-1:-1:-1;;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;1962:13:4;2126:22032:19;;;;1269:95:1;2126:22032:19;;-1:-1:-1;;;1322:31:1;;-1:-1:-1;1322:31:1;;;2126:22032:19;;;1322:31:1;2126:22032:19;;;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2126:22032:19;;;;;-1:-1:-1;2126:22032:19;;;3845:7;2126:22032;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;486:4:20:-;;;;;;;;;;;;;;;;:::o;2126:22032:19:-;;;;;;;;;;:::o;2241:406:12:-;2126:22032:19;-1:-1:-1;2126:22032:19;;;4360:14:12;2126:22032:19;;;;;;3957:6;2126:22032;;;;;;;4360:14:12;2126:22032:19;;;3957:6;2126:22032;;;;;;;;;;;3957:6;2126:22032;;;;4360:14:12;2126:22032:19;;;;;;4360:14:12;;2576:11::o;2126:22032:19:-;-1:-1:-1;;;2126:22032:19;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;2320:321:12;2618:12;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":13933,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_42434":{"entryPoint":13889,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_42445":{"entryPoint":13911,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":14728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":13953,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_calldatat_array_uint256_dyn_calldata":{"entryPoint":14002,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_bool_fromMemory":{"entryPoint":14704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":14617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_contract_IERC20_contract_IERC20_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":13852,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":14567,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":14543,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":14472,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":14530,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":14440,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint256":{"entryPoint":14655,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_rational_by_uint8":{"entryPoint":15340,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":14248,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256_42433":{"entryPoint":14224,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":14642,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint8":{"entryPoint":15320,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":13817,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":14190,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_42600":{"entryPoint":14077,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_42604":{"entryPoint":14106,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_71100":{"entryPoint":14134,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_71101":{"entryPoint":14162,"id":null,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":18881,"id":1684,"parameterSlots":1,"returnSlots":1},"fun_burn":{"entryPoint":18479,"id":722,"parameterSlots":2,"returnSlots":0},"fun_calculateRewards":{"entryPoint":18708,"id":7633,"parameterSlots":1,"returnSlots":1},"fun_calculateTokenShare":{"entryPoint":18331,"id":6145,"parameterSlots":4,"returnSlots":1},"fun_calculateTokenValuation":{"entryPoint":17272,"id":6241,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":15509,"id":130,"parameterSlots":0,"returnSlots":0},"fun_mint":{"entryPoint":18236,"id":689,"parameterSlots":2,"returnSlots":0},"fun_multiHopSwap":{"entryPoint":17793,"id":6656,"parameterSlots":3,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":15553,"id":1611,"parameterSlots":0,"returnSlots":0},"fun_resize":{"entryPoint":17733,"id":7432,"parameterSlots":2,"returnSlots":1},"fun_secureApproval":{"entryPoint":15976,"id":6708,"parameterSlots":3,"returnSlots":0},"fun_secureApproval_42439":{"entryPoint":15588,"id":6708,"parameterSlots":2,"returnSlots":0},"fun_singleSwap":{"entryPoint":16327,"id":6604,"parameterSlots":3,"returnSlots":1},"fun_singleSwap_42440":{"entryPoint":16634,"id":6604,"parameterSlots":3,"returnSlots":1},"fun_totalValuation":{"entryPoint":17103,"id":6304,"parameterSlots":0,"returnSlots":1},"fun_transfer":{"entryPoint":16879,"id":579,"parameterSlots":3,"returnSlots":0},"fun_updateRewardIndex":{"entryPoint":18643,"id":7546,"parameterSlots":1,"returnSlots":0},"fun_updateRewards":{"entryPoint":18169,"id":7673,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":19157,"id":1491,"parameterSlots":3,"returnSlots":1},"fun_verifyCallResultFromTarget_71103":{"entryPoint":19038,"id":1491,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":14689,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":14669,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":14835,"id":1595,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":14510,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":15433,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1c9a":{"entryPoint":14364,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1ddc":{"entryPoint":15233,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3802":{"entryPoint":15170,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4dfc":{"entryPoint":14267,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_584c":{"entryPoint":15094,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6c9f":{"entryPoint":14759,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_727f":{"entryPoint":15357,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":18826,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"4632":[{"length":32,"start":4596},{"length":32,"start":6341},{"length":32,"start":12726},{"length":32,"start":17448}],"4638":[{"length":32,"start":2597},{"length":32,"start":5541},{"length":32,"start":8372},{"length":32,"start":9547},{"length":32,"start":10172},{"length":32,"start":12947},{"length":32,"start":13178},{"length":32,"start":16509},{"length":32,"start":16818},{"length":32,"start":18053}],"4644":[{"length":32,"start":1207},{"length":32,"start":1336},{"length":32,"start":2561},{"length":32,"start":4323},{"length":32,"start":8315},{"length":32,"start":9445},{"length":32,"start":10083}],"7442":[{"length":32,"start":3850},{"length":32,"start":5609},{"length":32,"start":8892}],"7445":[{"length":32,"start":599},{"length":32,"start":3397},{"length":32,"start":7466},{"length":32,"start":14951}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063012a33aa146135d557806306497cb91461358957806306fdde03146134c4578063095ea7b31461343e57806312f399cf1461313b57806318160ddd1461311d578063185fcffe14610cda57806323b872dd1461302a57806327d54a9214612ec2578063295b930014612ea75780632be01190146123695780632e17de78146122355780632f86556814611fec578063313ce56714611fd057806334a1ca8914611fa457806334decfc914611f8757806342966c6814611db55780634e71d92d14611cb657806350b1b34a146117ee5780635e7f8b761461172f57806365534d521461171157806370259077146116d757806370a082311461169d578063715018a61461164457806371ddcfb81461160d57806372f702f3146115c9578063735de9f7146115855780637811a7851461154a5780637b848914146114fe5780637d9fc717146112185780637dc0d1d0146111d4578063833d557f1461119a578063853771881461117c57806389a30271146111535780638b086764146111075780638bdb2afa146110c35780638da5cb5b1461109c57806395d89b4114610f88578063a694fc3a14610e71578063a9059cbb14610e40578063ab86c69e14610cf8578063b9f5e61714610cda578063bf9c89bb14610ca0578063cde53358146109ca578063dd62ed3e14610978578063eedc3c5014610325578063f2fde38b1461029e578063f377e7cf146102805763f7c618c11461023757600080fd5b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b600080fd5b3461027b57600036600319011261027b576020600954604051908152f35b3461027b57602036600319011261027b576102b7613641565b6102bf613c95565b6001600160a01b0380911690811561030c57600054826001600160a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461027b57610333366136b2565b919261033d613cc1565b60405160208101903360601b82526014815261035881613736565b5190203360005260126020526001600160a01b036040600020541615610869575b503360005260126020526001600160a01b036040600020541661039b846138cf565b946103a9604051968761376e565b8486526103b5856138cf565b601f190136602088013760005b85811061082f5750813b1561027b5791604051928391630eedc3c560e41b8352816044840160406004860152526064830160648360051b85010192826000905b82821061077d5750505050508181036003190160248301528581526020018460005b8781106107515750509181600081819503925af1801561065657610723575b5060005b828110610455576001600655005b610468610463828585613888565b6138ae565b90604051630b4c774160e11b81526001600160a01b0383166004820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12706024820152610bb860448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561065657600091610704575b5060405190630b4c774160e11b82526001600160a01b0384166004830152730d500b1d8e8ef31e21c99d1db9a6444d3adf127060248301526101f460448301526020826064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610656576000926106ca575b506001600160a01b031615908115916106b7575b50610588828761394d565b511515806106b0575b610698575b156105a6575b6001915001610447565b6040516370a0823160e01b8152306004820152916020836024816001600160a01b0385165afa92831561065657600093610662575b5060405163a9059cbb60e01b8152336004820152602481019390935260209083908160006001600160a01b0382604481015b0393165af191821561065657600192610627575b5061059c565b6106489060203d60201161064f575b610640818361376e565b810190613970565b5085610621565b503d610636565b6040513d6000823e3d90fd5b92506020833d602011610690575b8161067d6020938361376e565b8101031261027b5791519161060d6105db565b3d9150610670565b6106aa6001600160a01b0384166149c1565b50610596565b5080610591565b6001600160a01b0391501615158661057d565b6001600160a01b039192506106f69060203d6020116106fd575b6106ee818361376e565b810190613988565b9190610569565b503d6106e4565b61071d915060203d6020116106fd576106ee818361376e565b866104e8565b67ffffffffffffffff811161073b5760405283610443565b634e487b7160e01b600052604160045260246000fd5b91819350602080916001600160a01b0361076c60019561366d565b168152019301910190849291610424565b9193955091936063198882030185528535605e198336030181121561027b5782016001600160a01b036107af8261366d565b168252602081013560208301526040810135601e198236030181121561027b5701906020823592019167ffffffffffffffff811161027b57803603831361027b576001928260209392606060408695015280606083015280608093848401376000838284010152601f801991011601019701950192018795949391610402565b806001600160a01b036108486104636001948a8a613888565b16600052601160205260406000205415610862828a61394d565b52016103c2565b6040516108348082019082821067ffffffffffffffff83111761073b5782916108a091614b27843933815230602082015260400190565b03906000f58015610656576001600160a01b031663ffffffff813b1615610925573360008181526012602090815260409182902080546001600160a01b0319168517905581519283526001600160a01b03909316928201929092527f8c6e353968e7ffd60dba22ff7d2a4354af301f9d41858a35668e7292ec1301b69190a184610379565b60405162461bcd60e51b815260206004820152602560248201527f4167656e74206372656174696f6e206661696c65642c206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b3461027b57604036600319011261027b57610991613641565b610999613657565b906001600160a01b038091166000526002602052604060002091166000526020526020604060002054604051908152f35b3461027b5760208060031936011261027b57600435906109e8613cc1565b6109f3821515613b42565b6000916001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001693817f000000000000000000000000000000000000000000000000000000000000000016905b601054811015610c4f5780610a5c849261498a565b929054600393841b1c169154916040516370a0823160e01b815230600482015260249388828681865afa91821561065657600092610c20575b508115610c1457308314610c145760405163313ce56760e01b8152918983600481875afa9081156106565760ff8a92610ad895600091610be7575b50169261479b565b9060008051602061535b83398151915288818314610b8a5750604051630b4c774160e11b81526004810183905294850152610bb8604485015287846064818c5afa938415610656576001948791600091610b6d575b50610b39848885613e68565b1615610b5257610b4a913391613fc7565b505b01610a47565b610b6190610b68923391614581565b15156139a7565b610b4c565b610b8491508a3d8c116106fd576106ee818361376e565b8b610b2d565b60405163a9059cbb60e01b8152336004820152602481019490945292945084915060449082906000905af191821561065657600192610bca575b50610b4c565b610be090873d891161064f57610640818361376e565b5087610bc4565b610c0791508d803d10610c0d575b610bff818361376e565b810190613919565b8e610ad0565b503d610bf5565b50505060019150610b4c565b9091508881813d8311610c48575b610c38818361376e565b8101031261027b5751908a610a95565b503d610c2e565b7fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5610c9685610c7e813361482f565b60408051338152602081019290925290918291820190565b0390a16001600655005b3461027b57602036600319011261027b576001600160a01b03610cc1613641565b1660005260076020526020604060002054604051908152f35b3461027b57600036600319011261027b576020600d54604051908152f35b3461027b5760208060031936011261027b576004358015610dfb5760095415610da6576040516323b872dd60e01b81523360048201523060248201526044810182905291808360648160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af192831561065657610d8693610d88575b50506148d3565b005b81610d9e92903d1061064f57610640818361376e565b508280610d7f565b60405162461bcd60e51b815260048101839052602760248201527f4e6f207374616b696e6720737570706c7920746f2064697374726962757465206044820152667265776172647360c81b6064820152608490fd5b60405162461bcd60e51b815260048101839052601760248201527f526577617264206d75737420626520706f7369746976650000000000000000006044820152606490fd5b3461027b57604036600319011261027b57610e66610e5c613641565b60243590336141ef565b602060405160018152f35b3461027b5760208060031936011261027b5760043590610e8f613cc1565b610e98336146f9565b33600052600781526040600020610eb08382546138c2565b9055610ebe826009546138c2565b60095533600081815260088352604090819020429055516323b872dd60e01b81526004810191909152306024820152604481018390529080828060648101038160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215610656577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d92610f6b575b506040519283523392a26001600655005b610f8190823d841161064f57610640818361376e565b5083610f5a565b3461027b57600036600319011261027b5760405160006005549060018260011c9160018416918215611092575b602094858510841461107c57858794868652918260001461105c575050600114610fff575b50610fe79250038361376e565b610ffb60405192828493845283019061361c565b0390f35b84915060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906000915b858310611044575050610fe7935082010185610fda565b8054838901850152879450869390920191810161102d565b60ff191685820152610fe795151560051b8501019250879150610fda9050565b634e487b7160e01b600052602260045260246000fd5b92607f1692610fb5565b3461027b57600036600319011261027b5760206001600160a01b0360005416604051908152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b57602036600319011261027b57602061114b611125613641565b6001600160a01b038116600052600c835261114560406000205491614914565b906138c2565b604051908152f35b3461027b57600036600319011261027b57602060405160008051602061535b8339815191528152f35b3461027b57600036600319011261027b576020600e54604051908152f35b3461027b57602036600319011261027b576001600160a01b036111bb613641565b1660005260136020526020604060002054604051908152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b5760208060031936011261027b57600435611235613cc1565b61124f6112546112436142cf565b600354928391856137a8565b613868565b6040516370a0823160e01b815233600482015260008051602061535b83398151915292918582602481875afa918215610656576000926114cd575b506112a264e8d4a5100092931515613b81565b0480911061148857604051636eb1769f60e11b81523360048201523060248201528481604481865afa8015610656578290600090611457575b6112e792501015613bfd565b6040516323b872dd60e01b858201908152336024830152306044830152606480830193909352918152601f199160009182919061132560848261376e565b519082865af1903d1561144a573d9167ffffffffffffffff831161073b576113699261135b8760405194601f840116018461376e565b82523d60008784013e614a5e565b805190848215159283611431575b50505061141957506113a461139d600e5461124f611397600d5483613932565b856137a8565b8092613932565b906113af823061473c565b60408051308152602081018490527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885926113fb929091849190a160095461140b575b610c7e813361473c565b0390a16001600655604051908152f35b611414846148d3565b6113f1565b60249060405190635274afe760e01b82526004820152fd5b6114419350820181019101613970565b15848481611377565b5061136990606090614a5e565b50508481813d8311611481575b61146e818361376e565b8101031261027b57816112e791516112db565b503d611464565b60405162461bcd60e51b815260048101859052601c60248201527f555344432062616c616e636520697320696e73756666696369656e74000000006044820152606490fd5b91508582813d83116114f7575b6114e4818361376e565b8101031261027b579051906112a261128f565b503d6114da565b3461027b57602036600319011261027b577f120de5c966483867382dce1eb95f0d016a917f91b2188b2f4c1413333a9ffb0f602060043561153d613c95565b80600f55604051908152a1005b3461027b57602036600319011261027b5760206001600160a01b038061156e613641565b166000526012825260406000205416604051908152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b57600036600319011261027b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461027b57602036600319011261027b57602061114b600354611631811515613c49565b61124f61163c6142cf565b6004356137a8565b3461027b57600036600319011261027b5761165d613c95565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461027b57602036600319011261027b576001600160a01b036116be613641565b1660005260016020526020604060002054604051908152f35b3461027b57602036600319011261027b576001600160a01b036116f8613641565b1660005260086020526020604060002054604051908152f35b3461027b57600036600319011261027b576020600f54604051908152f35b3461027b57600036600319011261027b57604051806010548083526020809301809160106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6729060005b868282106117da5786866117918288038361376e565b604051928392818401908285525180915260408401929160005b8281106117ba57505050500390f35b83516001600160a01b0316855286955093810193928101926001016117ab565b83548552909301926001928301920161177b565b3461027b57604036600319011261027b5760043561180a613657565b90611813613cc1565b61183661181e6142cf565b61124f60035491611830831515613b81565b846137a8565b60405163313ce56760e01b808252602094929160008051602061535b83398151915291908681600481865afa90811561065657600091611c99575b506001600160a01b03809516936040519283528783600481885afa92831561065657600093611c7a575b506040519363802431fb60e01b855260048501528784606481602499898b830152600060448301527f0000000000000000000000000000000000000000000000000000000000000000165afa93841561065657600094611c4b575b5060ff821660ff841611600014611bff57611922839461192261191d856119289697613bd8565b613bec565b90613868565b91670de0b6b3a764000092838102938185041490151715611bea5761191d611954939261192292613bd8565b6040516370a0823160e01b815233600482015285818581865afa8015610656578291600091611bb9575b5010611b7557604051636eb1769f60e11b81523360048201523060248201528581604481865afa8015610656578290600090611b44575b6119c192501015613bfd565b604080516323b872dd60e01b8782019081523386830190815230602082015280840194909452928190039182018152601f1992600092839290611a07906060018261376e565b519082865af13d15611b37573d67ffffffffffffffff8111611b225790611a4d9291611a3d8860405194601f840116018461376e565b82523d60008884013e5b83614ad5565b805190858215159283611b09575b505050611af4575050611a7c61139d600e5461124f611397600d5483613932565b611a86813061473c565b60408051308152602081018390527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918391a1600954611ae5575b50611acd823361473c565b604080513381526020810184905290819081016113fb565b611aee906148d3565b83611ac2565b60405190635274afe760e01b82526004820152fd5b611b199350820181019101613970565b15858581611a5b565b84634e487b7160e01b60005260416004526000fd5b611a4d9150606090611a47565b50508581813d8311611b6e575b611b5b818361376e565b8101031261027b57816119c191516119b5565b503d611b51565b60405162461bcd60e51b8152600481018690526017818501527f42616c616e636520697320696e73756666696369656e740000000000000000006044820152606490fd5b809250878092503d8311611be3575b611bd2818361376e565b8101031261027b578190518761197e565b503d611bc8565b84634e487b7160e01b60005260116004526000fd5b6119228294611c1461191d86611c1a96613bd8565b906137a8565b91670de0b6b3a764000092838102938185041490151715611bea5761191d611c46939261192292613bd8565b611954565b9093508781813d8311611c73575b611c63818361376e565b8101031261027b575192886118f6565b503d611c59565b611c92919350883d8a11610c0d57610bff818361376e565b918861189b565b611cb09150873d8911610c0d57610bff818361376e565b87611871565b3461027b57600036600319011261027b57611ccf613cc1565b611cd8336146f9565b336000526020600c8152604060002054611cf3811515613af6565b336000818152600c845260408082208290555163a9059cbb60e01b81526004810192909252602482018390528390829060449082907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561065657611d98575b506040518181527f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241833392a26001600655604051908152f35b611dae90833d851161064f57610640818361376e565b5082611d5f565b3461027b5760208060031936011261027b5760043590611dd3613cc1565b3360005260019060018152611def836040600020541015613b42565b6000825b611e26577fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5610c9685610c7e813361482f565b601054811015611f82579081611e436001600160a01b039361498a565b939054600394851b1c169254926040516370a0823160e01b81523060048201528381602481855afa90811561065657600091611f55575b508581158015611f4c575b611f41575060405163313ce56760e01b8152918483600481845afa9283156106565760009689611eef9460ff8997611ec5958c91611f2a5750169261479b565b60405163a9059cbb60e01b8152336004820152602481019190915295869283919082906044820190565b03925af19081156106565784938492611f0d575b505b019091611df3565b611f2390843d861161064f57610640818361376e565b5086611f03565b610c079150893d8b11610c0d57610bff818361376e565b945050508290611f05565b50308314611e85565b90508381813d8311611f7b575b611f6c818361376e565b8101031261027b575187611e7a565b503d611f62565b610c4f565b3461027b57600036600319011261027b5760206040516101f48152f35b3461027b57604036600319011261027b57602061114b611fc2613641565b611fca613657565b906139f3565b3461027b57600036600319011261027b57602060405160128152f35b3461027b5760208060031936011261027b57612006613641565b61200e613cc1565b6040516370a0823160e01b81523060048201526001600160a01b038281168483602481845afa92831561065657600093612206575b5060405190630b4c774160e11b8252600482015260008051602061535b8339815191526024820152610bb860448201528481606481857f0000000000000000000000000000000000000000000000000000000000000000165afa908115610656576000916121e9575b506120da83837f00000000000000000000000000000000000000000000000000000000000000001686613e68565b16156121d5576120ef91610b61913091613fc7565b7f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724161211a33306139f3565b917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856121b4612710612151600354600f54906137a8565b0461215c813061473c565b306000526007845260406000206121748282546138c2565b9055612182816009546138c2565b6009553360005260088452426040600020556009546121c7575b60408051308152602081019290925290918291820190565b0390a16040519283523392a26001600655005b6121d0816148d3565b61219c565b6121e491610b61913091614581565b6120ef565b6122009150853d87116106fd576106ee818361376e565b856120ac565b9092508481813d831161222e575b61221e818361376e565b8101031261027b57519185612043565b503d612214565b3461027b5760208060031936011261027b5760043590612253613cc1565b61225c336146f9565b3360005260078152604060002054828110612324578261227b91613932565b336000526007825260406000205561229582600954613932565b60095560405163a9059cbb60e01b81523360048201526024810183905290808260448160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1918215610656577f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7592610f6b57506040519283523392a26001600655005b60405162461bcd60e51b815260048101839052601f60248201527f496e73756666696369656e742062616c616e636520746f20756e7374616b65006044820152606490fd5b3461027b57612377366136b2565b6000939192939160005b858110612e0c5750612392856138e7565b9061239c866138e7565b936123a6876138e7565b936123b0886138e7565b936000916000936000996000925b8c88818610612be757505050505050826123e9836123e36123f596956123ef95614545565b99614545565b96614545565b93614545565b9460005b855181101561263c5761240c818661394d565b5161241a575b6001016123f9565b612484906001600160a01b038061243f610463612437858c61394d565b518d89613888565b1661244a838961394d565b516040516323b872dd60e01b8152336004820152306024820152604481019190915260209490918591839190829060009082906064820190565b03925af180156106565761261f575b506124ac6104636124a4848b61394d565b518c88613888565b604051630b4c774160e11b8152908216600482015260008051602061535b8339815191526024820152610bb860448201529280846064817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561065657838a6001968e936000956125ea575b50506125719261253461253c936104639361394d565b51908a613888565b612546858b61394d565b5190847f00000000000000000000000000000000000000000000000000000000000000001690613e68565b16156125b2576125a261258a6104636124a4848b61394d565b612594838961394d565b5187516125ab573391613fc7565b505b9050612412565b3091613fc7565b6125dd6125c56104636124a4848b61394d565b6125cf838961394d565b5187516125e3573391614581565b506125a4565b3091614581565b61046392955061253c9361261261257196938361253494903d106106fd576106ee818361376e565b969350935081945061251e565b61263590843d861161064f57610640818361376e565b508a612493565b508582888560005b8151811015610e6657612657818661394d565b51612665575b600101612644565b61266f818661394d565b516127109081810290808204831490151715612b67578761268f91613868565b6040516370a0823160e01b808252336004830152929160208260248160008051602061535b8339815191525afa90811561065657600091612bb1575b6126d592506137a8565b64e8d4a5100081029080820464e8d4a510001490151715612b675704908115159182612b0d575b50501561265d5761271b610463612713838561394d565b518587613888565b6001600160a01b0360405191630b4c774160e11b835216600482015260008051602061535b8339815191526024820152610bb860448201526020816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561065657600091612aee575b506001600160a01b036127b56104636127ad858761394d565b518789613888565b916127f6827f000000000000000000000000000000000000000000000000000000000000000016938464e8d4a510006127ee888d61394d565b510491613e68565b16156128c157508061282d6128146104636127ad61286b958761394d565b64e8d4a51000612824848a61394d565b510430916140fa565b6020612844600e5461124f611397600d5483613932565b60405163a9059cbb60e01b8152336004820152602481019190915293849081906044820190565b0381600060008051602061535b8339815191525af19081156106565760019361289b926128a2575b5015156139a7565b905061265d565b6128ba9060203d60201161064f57610640818361376e565b5089612893565b60206001600160a01b036128e36104636128db868861394d565b51888a613888565b926129c7600064e8d4a510006128f9888d61394d565b516040517309e46f287cb791987b6228c32669ea5126aa105d60621b8882015261017760eb1b6034820181905272d500b1d8e8ef31e21c99d1db9a6444d3adf12760641b6037830152604b820152606098891b6bffffffffffffffffffffffff1916604e8201526042815291900461297082613752565b6040519161297d8361371a565b8252868201903082526040830198428a5283019081526080830190848252604051998a988997889663c04b8d5960e01b88528c60048901525160a0602489015260c488019061361c565b94511660448601525160648501525160848401525160a483015203925af190811561065657600091612abc575b50612a3c6020612a15600e5461124f612a0f600d5483613932565b866137a8565b60405163a9059cbb60e01b8152336004820152602481019190915291829081906044820190565b0381600060008051602061535b8339815191525af1801561065657612a9d575b5015612a6a5760019061289b565b60405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606490fd5b612ab59060203d60201161064f57610640818361376e565b5087612a5c565b90506020813d602011612ae6575b81612ad76020938361376e565b8101031261027b5751876129f4565b3d9150612aca565b612b07915060203d6020116106fd576106ee818361376e565b87612794565b90915060405191825233600483015260208260248160008051602061535b8339815191525afa91821561065657600092612b7d575b5064e8d4a5100082029180830464e8d4a510001490151715612b6757111587806126fc565b634e487b7160e01b600052601160045260246000fd5b9091506020813d602011612ba9575b81612b996020938361376e565b8101031261027b57519088612b42565b3d9150612b8c565b90506020823d602011612bdf575b81612bcc6020938361376e565b8101031261027b576126d59151906126cb565b3d9150612bbf565b6001600160a01b03612c06610463886024969798999b95602095613888565b16604051938480926370a0823160e01b82523360048301525afa8015610656578e8a8994600093612dcf575b50612c4d6104636004966020946001600160a01b0394613888565b166040519485809263313ce56760e01b82525afa928315610656578f938b88958789958d95600095612d90575b509482612cdd60ff612cc0612cb38561046397612cad612ce39c9d612ca7610463858f9e612ca79f613888565b90614378565b9d613888565b359c612710809c04613868565b8c81119c908d15612d815790612cd591613932565b985b1661393f565b94613888565b9315612d465786612cf3916137a8565b0490670de0b6b3a764000091828102928184041490151715612b67578c612d3582612d23600196612d3b96613868565b928b612d2f838d61394d565b5261394d565b52613961565b955b019291906123be565b9d612d5792989993508e91506138c2565b9b87612d63838d61394d565b52612d6e828b61394d565b52612d7890613961565b95600190612d3d565b612d8a91613932565b98612cd7565b868096508486989394959260203d602011612dc8575b612db0818361376e565b8101612dbb91613919565b9750949392509650612c7a565b503d612da6565b94505050506020823d602011612e04575b81612ded6020938361376e565b8101031261027b5790518691908e8a612c4d612c32565b3d9150612de0565b9193926001600160a01b03612e25610463858986613888565b1660405180916370a0823160e01b825233600483015281602460209485935afa91821561065657600092612e77575b5050600191611145612e6e92612ca7610463888c89613888565b93949201612381565b90809250813d8311612ea0575b612e8e818361376e565b8101031261027b575181611145612e54565b503d612e84565b3461027b57600036600319011261027b57602061114b6142cf565b3461027b5760208060031936011261027b57612edc613641565b604051908282016001600160a01b03926bffffffffffffffffffffffff198360601b16825260148152612f0e81613736565b5190209082811615612fe557612f9b612fa7856108349360405190612f358387018361376e565b85825282820195614b278739604080516001600160a01b039092168483019081523060208201529190612f74908290840103601f19810183528261376e565b604051958693612f8c868601998a92519283916135f9565b840191518093868401906135f9565b0103808452018261376e565b519020604051908482019260ff60f81b84523060601b60218401526035830152605582015260558152612fd981613752565b51902016604051908152f35b60405162461bcd60e51b815260048101859052601d60248201527f4f776e657220616464726573732063616e6e6f74206265207a65726f2e0000006044820152606490fd5b3461027b57606036600319011261027b57613043613641565b61304b613657565b604435906001600160a01b0383169283600052600260205260406000203360005260205260406000205493600019850361308b575b50610e6693506141ef565b8385106130f75780156130de5733156130c557610e6694849160005260026020526040600020336000526020520360406000205584613080565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810186905260448101859052606490fd5b3461027b57600036600319011261027b576020600354604051908152f35b3461027b57600036600319011261027b57613154613cc1565b613175600354613165811515613c49565b61124f6131706142cf565b613790565b60405163802431fb60e01b815230600482015260008051602061535b8339815191526024820152600060448201526001600160a01b039060209081816064817f000000000000000000000000000000000000000000000000000000000000000087165afa90811561065657600091613411575b50306000526001825260406000205490604051936370a0823160e01b9182865230600487015260008051602061535b8339815191529685876024818b5afa968715610656576000976133e2575b5064e8d4a510009081830292808404831490151715612b67578083101561334f5750808702908782041487151715612b675785946132e193670de0b6b3a76400006132866132d3956132d995613868565b0491808311613347575b507f0000000000000000000000000000000000000000000000000000000000000000166132bd8982613ce4565b6132c8308a306140fa565b9384928310156137bb565b30613e68565b309030613fc7565b5060246040518096819382523060048301525afa90811561065657600091613317575b5061331092501161381c565b6001600655005b905082813d8311613340575b61332d818361376e565b8101031261027b57613310915183613304565b503d613323565b91508a613290565b9350509095509392919311613368575b50505050613310565b6133c76133ba6133bf6001946133d9977f0000000000000000000000000000000000000000000000000000000000000000166133a5888230613e68565b6133b0308930613fc7565b93849283116137bb565b613ce4565b3090306140fa565b5030600052526040600020541161381c565b8080808061335f565b9096508581813d831161340a575b6133fa818361376e565b8101031261027b57519588613235565b503d6133f0565b90508181813d8311613437575b613428818361376e565b8101031261027b5751846131e8565b503d61341e565b3461027b57604036600319011261027b57613457613641565b6024359033156130de576001600160a01b03169081156130c557336000526002602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b3461027b57600036600319011261027b5760405160006004549060018260011c916001841691821561357f575b602094858510841461107c57858794868652918260001461105c5750506001146135225750610fe79250038361376e565b84915060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906000915b858310613567575050610fe7935082010185610fda565b80548389018501528794508693909201918101613550565b92607f16926134f1565b3461027b57602036600319011261027b577fbea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e060206004356135c8613c95565b80600d55604051908152a1005b3461027b57600036600319011261027b57602061114b600354613165811515613c49565b60005b83811061360c5750506000910152565b81810151838201526020016135fc565b90602091613635815180928185528580860191016135f9565b601f01601f1916010190565b600435906001600160a01b038216820361027b57565b602435906001600160a01b038216820361027b57565b35906001600160a01b038216820361027b57565b9181601f8401121561027b5782359167ffffffffffffffff831161027b576020808501948460051b01011161027b57565b604060031982011261027b5767ffffffffffffffff9160043583811161027b57826136df91600401613681565b9390939260243591821161027b576136f991600401613681565b9091565b610100810190811067ffffffffffffffff82111761073b57604052565b60a0810190811067ffffffffffffffff82111761073b57604052565b6040810190811067ffffffffffffffff82111761073b57604052565b6080810190811067ffffffffffffffff82111761073b57604052565b90601f8019910116810190811067ffffffffffffffff82111761073b57604052565b90670de0b6b3a76400009180830292830403612b6757565b81810292918115918404141715612b6757565b156137c257565b60405162461bcd60e51b815260206004820152602c60248201527f417262697472616765206661696c65643a20696e73756666696369656e74206f60448201526b1d5d1c1d5d08185b5bdd5b9d60a21b6064820152608490fd5b1561382357565b60405162461bcd60e51b815260206004820152601860248201527f41726269747261676520646964206e6f742070726f66697400000000000000006044820152606490fd5b8115613872570490565b634e487b7160e01b600052601260045260246000fd5b91908110156138985760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b038116810361027b5790565b91908201809211612b6757565b67ffffffffffffffff811161073b5760051b60200190565b906138f1826138cf565b6138fe604051918261376e565b828152809261390f601f19916138cf565b0190602036910137565b9081602091031261027b575160ff8116810361027b5790565b91908203918211612b6757565b604d8111612b6757600a0a90565b80518210156138985760209160051b010190565b6000198114612b675760010190565b9081602091031261027b5751801515810361027b5790565b9081602091031261027b57516001600160a01b038116810361027b5790565b156139ae57565b60405162461bcd60e51b815260206004820152601760248201527f53776170204661696c65642c20547279204275726e28290000000000000000006044820152606490fd5b91906139fd613cc1565b613a06836146f9565b6001600160a01b0380931690600093828552602090600c8252604086205493613a30851515613af6565b8652600c825260408087208790555163a9059cbb60e01b81526001600160a01b03841660048201526024810185905282816044818a7f000000000000000000000000000000000000000000000000000000000000000087165af18015613aeb577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419495969750613ace575b50604051938585521692a2906001600655565b613ae490833d851161064f57610640818361376e565b5038613abb565b6040513d89823e3d90fd5b15613afd57565b60405162461bcd60e51b815260206004820152601360248201527f4e6f207265776172647320746f20636c61696d000000000000000000000000006044820152606490fd5b15613b4957565b60405162461bcd60e51b815260206004820152601060248201526f125b9cdd59999a58da595b9d0810905360821b6044820152606490fd5b15613b8857565b60405162461bcd60e51b815260206004820152602260248201527f546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65604482015261726f60f01b6064820152608490fd5b9060ff8091169116039060ff8211612b6757565b60ff16604d8111612b6757600a0a90565b15613c0457565b60405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152606490fd5b15613c5057565b60405162461bcd60e51b815260206004820152601b60248201527f546f74616c20737570706c792063616e6e6f74206265207a65726f00000000006044820152606490fd5b6001600160a01b03600054163303613ca957565b60405163118cdaa760e01b8152336004820152602490fd5b600260065414613cd2576002600655565b604051633ee5aeb560e01b8152600490fd5b60408051636eb1769f60e11b81523060048201526001600160a01b038316602482015260209360008051602061535b8339815191528583604481845afa928315613e5d57600093613e2e575b50818303613d41575b505050505050565b8592613db9575b835163095ea7b360e01b81526001600160a01b0390951660048601526024850191909152839081600081604481015b03925af1908115613daf5750613d91575b80808080613d39565b81613da792903d1061064f57610640818361376e565b503880613d88565b513d6000823e3d90fd5b91509192835163095ea7b360e01b81526001600160a01b03821660048201526000602482015285816044816000875af18015613e235791869391613d77969593613e06575b509450613d48565b613e1c90853d871161064f57610640818361376e565b5038613dfe565b85513d6000823e3d90fd5b9092508581813d8311613e56575b613e46818361376e565b8101031261027b57519138613d30565b503d613e3c565b84513d6000823e3d90fd5b60408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015260209590949293919290918516908684604481855afa938415613e2357600094613f98575b50828403613ec3575b50505050505050565b8693613f35575b845163095ea7b360e01b81526001600160a01b0390911660048201526024810192909252909350839081600081604481015b03925af1908115613daf5750613f17575b8080808080613eba565b81613f2d92903d1061064f57610640818361376e565b503880613f0d565b91938095919350519063095ea7b360e01b8252821660048201526000602482015285816044816000875af18015613e235791869391613efc969593613f7b575b50613eca565b613f9190853d871161064f57610640818361376e565b5038613f75565b9093508681813d8311613fc0575b613fb0818361376e565b8101031261027b57519238613eb1565b503d613fa6565b90604051613fd4816136fd565b6001600160a01b03809316815282806020830160008051602061535b83398151915281526040840194610bb88652826060860198168852608085019042825260a0860190815260c08601918460009a8b998a86528260e08b01978c89526040519d8e9c8d63414bf38960e01b9052511660048d0152511660248b01525162ffffff1660448a0152511660648801525160848701525160a48601525160c4850152511660e48301527f000000000000000000000000000000000000000000000000000000000000000016815a9361010492602095f19182156140ee5780926140ba57505090565b9091506020823d6020116140e6575b816140d66020938361376e565b810103126140e357505190565b80fd5b3d91506140c9565b604051903d90823e3d90fd5b90604051614107816136fd565b60008051602061535b833981519152815260208101926001600160a01b0380948180931681526040840194610bb88652826060860198168852608085019042825260a0860190815260c08601918460009a8b998a86528260e08b01978c89526040519d8e9c8d63414bf38960e01b9052511660048d0152511660248b01525162ffffff1660448a0152511660648801525160848701525160a48601525160c4850152511660e48301527f000000000000000000000000000000000000000000000000000000000000000016815a9361010492602095f19182156140ee5780926140ba57505090565b916001600160a01b038084169283156142b6571692831561429d57600090838252600160205260408220549083821061426b575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6000806010545b8082106142e257505090565b90916001600160a01b036142f58461498a565b90549060031b1c16604080516370a0823160e01b815230600482015260208082602481875afa928315613daf5750600092614345575b50509161114561433d92600194614378565b9201906142d6565b81819392933d8311614371575b61435c818361376e565b810103126140e357505161114561433d61432b565b503d614352565b60405163313ce56760e01b8082529192600092906020906001600160a01b03908116908285600481855afa94851561453a57869561451b575b5060405193845260008051602061535b8339815191528385600481845afa948515613aeb5787956144fc575b5082146144c85760405163802431fb60e01b81526001600160a01b0392909216600483015260008051602061535b8339815191526024830152600060448301528290829060649082907f0000000000000000000000000000000000000000000000000000000000000000165afa91859083614495575b5050506144635750505050600090565b670de0b6b3a76400009361448b61448461191d611c14946144919796613bd8565b80926137a8565b926137a8565b0490565b909180939650813d83116144c1575b6144ae818361376e565b810103126140e357505192388080614453565b503d6144a4565b505050505064e8d4a51000918281029281840414901517156144e8575090565b634e487b7160e01b81526011600452602490fd5b614514919550843d8611610c0d57610bff818361376e565b93386143dd565b614533919550833d8511610c0d57610bff818361376e565b93386143b1565b6040513d88823e3d90fd5b9190614550816138e7565b9060005b818110614562575090925050565b8061456f6001928761394d565b5161457a828661394d565b5201614554565b90916040519160209384916bffffffffffffffffffffffff199060601b168285015261017760eb1b80603486015272d500b1d8e8ef31e21c99d1db9a6444d3adf12760641b6037860152604b8501527309e46f287cb791987b6228c32669ea5126aa105d60621b604e850152604284526145fa84613752565b604051936146078561371a565b8452818401926146676001600160a01b0392838093168652604087019642885260608101918252608081019660009788938482526040519a8b988997889663c04b8d5960e01b88528c60048901525160a0602489015260c488019061361c565b94511660448601525160648501525160848401525160a483015203927f0000000000000000000000000000000000000000000000000000000000000000165af19283156146ec5781936146bb575b50505090565b9091809350813d83116146e5575b6146d3818361376e565b810103126140e35750513880806146b5565b503d6146c9565b50604051903d90823e3d90fd5b6001600160a01b0361470a82614914565b91169081600052600c60205261472660406000209182546138c2565b9055600a5490600052600b602052604060002055565b6001600160a01b031690811561429d577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261477e6000946003546138c2565b6003558484526001825260408420818154019055604051908152a3565b90926147a8821515613c49565b601281116147ea5760128110156147db576012039260128411612b675761448b61124f92611c146147d89661393f565b90565b506147d89261124f91926137a8565b60405162461bcd60e51b815260206004820152601e60248201527f546f6b656e20646563696d616c732073686f756c64206265203c3d20313800006044820152606490fd5b91906001600160a01b0383169081156142b657816000526001602052604060002054938185106148a157506020817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260009596858752600184520360408620558060035403600355604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481018590526044810191909152606490fd5b60095490816148e0575050565b670de0b6b3a764000090818102918183041490151715612b675761490f9161490791613868565b600a546138c2565b600a55565b6001600160a01b0316670de0b6b3a764000061497f6000838152600860205261497a614944604083205442613932565b6301e13380959086811115614984575085905b8352600760205261448b6040842054936040600a5491600b602052205490613932565b6137a8565b040490565b90614957565b6010548110156138985760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720190600090565b600081815260116020526040812054614a595760105468010000000000000000811015614a45576001810180601055811015614a315790826040927f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672015560105492815260116020522055600190565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b905090565b909190614a875750805115614a7557805190602001fd5b604051630a12f52160e11b8152600490fd5b9080511580614abe575b614a985790565b604051639996b31560e01b815260008051602061535b8339815191526004820152602490fd5b5060008051602061535b8339815191523b15614a91565b90614aea5750805115614a7557805190602001fd5b81511580614b1d575b614afb575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15614af356fe60803460bc57601f61083438819003918201601f19168301916001600160401b0383118484101760c157808492604094855283398101031260bc57604b602060458360d7565b920160d7565b6001600160a01b0390811691903383900360895760018060a01b03199116816000541617600055600154161760015560405161074990816100eb8239f35b60405162461bcd60e51b815260206004820152600b60248201526a27b7363c902937baba32b960a91b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360bc5756fe608060408181526004908136101561001657600080fd5b600092833560e01c9081638da5cb5b1461045357508063b0f479a11461042b5763eedc3c501461004557600080fd5b3461042757806003193601126104275767ffffffffffffffff9082358281116103dc576100759036908501610476565b91909360248035858111610423576100909036908401610476565b90956001600160a01b0395600198878a541633036103e0578a5b82811061031c5750505050848754169084518092630c2fe7ff60e11b8252818660209586935afa908115610312578a916102e1575b50888a5b888a858084106101fb579450505050506100fb578880f35b88805b82811061010b5750508880f35b89918861012161011c84878e610570565b6104e4565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036101605750504761014d575b0189906100fe565b61015b888c5416479061066f565b610145565b88516370a0823160e01b8152308982015292935090919085828881845afa9182156101f157908392918d9594926101bb575b508a600a83116101a6575b50505050610145565b6101b2935416906105a9565b8a38808a61019d565b945090508584813d81116101ea575b6101d481836104f8565b810103126101e6578b93519038610192565b5080fd5b503d6101ca565b89513d85823e3d90fd5b8361011c9161020993610570565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee810361024857506102406127106102368547610580565b048a84541661066f565b0189906100e3565b88516370a0823160e01b815230898201529192509085818881855afa908d82156102d6578d94939286929061029b575b5061028a610296939261271092610580565b04908b855416906105a9565b610240565b92945050508581813d83116102cf575b6102b581836104f8565b810103126102cb57518b9290849061028a610278565b8c80fd5b503d6102ab565b8a51903d90823e3d90fd5b90508281813d831161030b575b6102f881836104f8565b810103126103075751386100df565b8980fd5b503d6102ee565b86513d8c823e3d90fd5b61032a61011c8285856104ac565b8c6020918261033a8588886104ac565b0135906103488588886104ac565b8c81013590601e19813603018212156103dc57018035908982116103dc5785019281360384136103dc578493828f519384928337810185815203925af161038d610530565b501561039b57508a016100aa565b876011886064938c519362461bcd60e51b85528401528201527f42617463682063616c6c206661696c65640000000000000000000000000000006044820152fd5b8480fd5b865162461bcd60e51b8152602081880152601b60248201527f43616c6c61626c65206f6e6c792062792074686520726f7574657200000000006044820152606490fd5b8780fd5b8280fd5b8382346101e657816003193601126101e6576020906001600160a01b03600154169051908152f35b8490346101e657816003193601126101e6576001600160a01b0360209254168152f35b9181601f840112156104a75782359167ffffffffffffffff83116104a7576020808501948460051b0101116104a757565b600080fd5b91908110156104ce5760051b81013590605e19813603018212156104a7570190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036104a75790565b90601f8019910116810190811067ffffffffffffffff82111761051a57604052565b634e487b7160e01b600052604160045260246000fd5b3d1561056b573d9067ffffffffffffffff821161051a576040519161055f601f8201601f1916602001846104f8565b82523d6000602084013e565b606090565b91908110156104ce5760051b0190565b8181029291811591840414171561059357565b634e487b7160e01b600052601160045260246000fd5b91909160405192602084019263a9059cbb60e01b84526001600160a01b038092166024860152604485015260448452608084019184831067ffffffffffffffff84111761051a57610614926040521692600080938192519082875af161060d610530565b90846106c2565b908151918215159283610644575b50505061062c5750565b60249060405190635274afe760e01b82526004820152fd5b8192935090602091810103126101e657602001519081159182150361066c5750388080610622565b80fd5b8147106106aa5760008080936001600160a01b038294165af1610690610530565b501561069857565b604051630a12f52160e11b8152600490fd5b60405163cd78605960e01b8152306004820152602490fd5b906106d7575080511561069857805190602001fd5b8151158061070a575b6106e8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156106e056fea26469706673582212205930771bdac7a28577e83853179585c14d2d1de60202bee4d616bc2925c9934164736f6c634300081900330000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174a2646970667358221220e671a31319baf4efcdfd3784f9ea4116cbbe96dd251b244890ffd4b6958d90aa64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12A33AA EQ PUSH2 0x35D5 JUMPI DUP1 PUSH4 0x6497CB9 EQ PUSH2 0x3589 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x34C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x343E JUMPI DUP1 PUSH4 0x12F399CF EQ PUSH2 0x313B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x311D JUMPI DUP1 PUSH4 0x185FCFFE EQ PUSH2 0xCDA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x302A JUMPI DUP1 PUSH4 0x27D54A92 EQ PUSH2 0x2EC2 JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x2EA7 JUMPI DUP1 PUSH4 0x2BE01190 EQ PUSH2 0x2369 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x2235 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x1FEC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FD0 JUMPI DUP1 PUSH4 0x34A1CA89 EQ PUSH2 0x1FA4 JUMPI DUP1 PUSH4 0x34DECFC9 EQ PUSH2 0x1F87 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1DB5 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1CB6 JUMPI DUP1 PUSH4 0x50B1B34A EQ PUSH2 0x17EE JUMPI DUP1 PUSH4 0x5E7F8B76 EQ PUSH2 0x172F JUMPI DUP1 PUSH4 0x65534D52 EQ PUSH2 0x1711 JUMPI DUP1 PUSH4 0x70259077 EQ PUSH2 0x16D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x169D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1644 JUMPI DUP1 PUSH4 0x71DDCFB8 EQ PUSH2 0x160D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x15C9 JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x1585 JUMPI DUP1 PUSH4 0x7811A785 EQ PUSH2 0x154A JUMPI DUP1 PUSH4 0x7B848914 EQ PUSH2 0x14FE JUMPI DUP1 PUSH4 0x7D9FC717 EQ PUSH2 0x1218 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x11D4 JUMPI DUP1 PUSH4 0x833D557F EQ PUSH2 0x119A JUMPI DUP1 PUSH4 0x85377188 EQ PUSH2 0x117C JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1153 JUMPI DUP1 PUSH4 0x8B086764 EQ PUSH2 0x1107 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH2 0x10C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x109C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF88 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xE71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE40 JUMPI DUP1 PUSH4 0xAB86C69E EQ PUSH2 0xCF8 JUMPI DUP1 PUSH4 0xB9F5E617 EQ PUSH2 0xCDA JUMPI DUP1 PUSH4 0xBF9C89BB EQ PUSH2 0xCA0 JUMPI DUP1 PUSH4 0xCDE53358 EQ PUSH2 0x9CA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x978 JUMPI DUP1 PUSH4 0xEEDC3C50 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF377E7CF EQ PUSH2 0x280 JUMPI PUSH4 0xF7C618C1 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x2B7 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH2 0x333 CALLDATASIZE PUSH2 0x36B2 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x33D PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER PUSH1 0x60 SHL DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x358 DUP2 PUSH2 0x3736 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x869 JUMPI JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x39B DUP5 PUSH2 0x38CF JUMP JUMPDEST SWAP5 PUSH2 0x3A9 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x376E JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH2 0x3B5 DUP6 PUSH2 0x38CF JUMP JUMPDEST PUSH1 0x1F NOT ADD CALLDATASIZE PUSH1 0x20 DUP9 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x82F JUMPI POP DUP2 EXTCODESIZE ISZERO PUSH2 0x27B JUMPI SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xEEDC3C5 PUSH1 0xE4 SHL DUP4 MSTORE DUP2 PUSH1 0x44 DUP5 ADD PUSH1 0x40 PUSH1 0x4 DUP7 ADD MSTORE MSTORE PUSH1 0x64 DUP4 ADD PUSH1 0x64 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 DUP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x77D JUMPI POP POP POP POP POP DUP2 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x751 JUMPI POP POP SWAP2 DUP2 PUSH1 0x0 DUP2 DUP2 SWAP6 SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x723 JUMPI JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x455 JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH2 0x468 PUSH2 0x463 DUP3 DUP6 DUP6 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0x38AE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x704 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH20 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF1270 PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x64 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x6CA JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x6B7 JUMPI JUMPDEST POP PUSH2 0x588 DUP3 DUP8 PUSH2 0x394D JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x6B0 JUMPI JUMPDEST PUSH2 0x698 JUMPI JUMPDEST ISZERO PUSH2 0x5A6 JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x662 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP4 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x627 JUMPI JUMPDEST POP PUSH2 0x59C JUMP JUMPDEST PUSH2 0x648 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x64F JUMPI JUMPDEST PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3970 JUMP JUMPDEST POP DUP6 PUSH2 0x621 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x690 JUMPI JUMPDEST DUP2 PUSH2 0x67D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI SWAP2 MLOAD SWAP2 PUSH2 0x60D PUSH2 0x5DB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x670 JUMP JUMPDEST PUSH2 0x6AA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x49C1 JUMP JUMPDEST POP PUSH2 0x596 JUMP JUMPDEST POP DUP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 POP AND ISZERO ISZERO DUP7 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP3 POP PUSH2 0x6F6 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FD JUMPI JUMPDEST PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3988 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x569 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x71D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP7 PUSH2 0x4E8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE DUP4 PUSH2 0x443 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP2 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x76C PUSH1 0x1 SWAP6 PUSH2 0x366D JUMP JUMPDEST AND DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0x424 JUMP JUMPDEST SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x63 NOT DUP9 DUP3 SUB ADD DUP6 MSTORE DUP6 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x27B JUMPI DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7AF DUP3 PUSH2 0x366D JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x27B JUMPI ADD SWAP1 PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x27B JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0x27B JUMPI PUSH1 0x1 SWAP3 DUP3 PUSH1 0x20 SWAP4 SWAP3 PUSH1 0x60 PUSH1 0x40 DUP7 SWAP6 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MSTORE DUP1 PUSH1 0x80 SWAP4 DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP8 ADD SWAP6 ADD SWAP3 ADD DUP8 SWAP6 SWAP5 SWAP4 SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x848 PUSH2 0x463 PUSH1 0x1 SWAP5 DUP11 DUP11 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x862 DUP3 DUP11 PUSH2 0x394D JUMP JUMPDEST MSTORE ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x834 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x73B JUMPI DUP3 SWAP2 PUSH2 0x8A0 SWAP2 PUSH2 0x4B27 DUP5 CODECOPY CALLER DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE2 DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFFFFFFF DUP2 EXTCODESIZE AND ISZERO PUSH2 0x925 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8C6E353968E7FFD60DBA22FF7D2A4354AF301F9D41858A35668E7292EC1301B6 SWAP2 SWAP1 LOG1 DUP5 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206372656174696F6E206661696C65642C206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x991 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x999 PUSH2 0x3657 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x9E8 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x9F3 DUP3 ISZERO ISZERO PUSH2 0x3B42 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH32 0x0 AND SWAP4 DUP2 PUSH32 0x0 AND SWAP1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0xC4F JUMPI DUP1 PUSH2 0xA5C DUP5 SWAP3 PUSH2 0x498A JUMP JUMPDEST SWAP3 SWAP1 SLOAD PUSH1 0x3 SWAP4 DUP5 SHL SHR AND SWAP2 SLOAD SWAP2 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP4 DUP9 DUP3 DUP7 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xC20 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0xC14 JUMPI ADDRESS DUP4 EQ PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP10 DUP4 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0xFF DUP11 SWAP3 PUSH2 0xAD8 SWAP6 PUSH1 0x0 SWAP2 PUSH2 0xBE7 JUMPI JUMPDEST POP AND SWAP3 PUSH2 0x479B JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 DUP2 DUP4 EQ PUSH2 0xB8A JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP5 DUP6 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP6 ADD MSTORE DUP8 DUP5 PUSH1 0x64 DUP2 DUP13 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP5 DUP8 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB6D JUMPI JUMPDEST POP PUSH2 0xB39 DUP5 DUP9 DUP6 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0xB52 JUMPI PUSH2 0xB4A SWAP2 CALLER SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST POP JUMPDEST ADD PUSH2 0xA47 JUMP JUMPDEST PUSH2 0xB61 SWAP1 PUSH2 0xB68 SWAP3 CALLER SWAP2 PUSH2 0x4581 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x39A7 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xB84 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP12 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP5 POP DUP5 SWAP2 POP PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xBCA JUMPI JUMPDEST POP PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xBE0 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP8 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0xC07 SWAP2 POP DUP14 DUP1 RETURNDATASIZE LT PUSH2 0xC0D JUMPI JUMPDEST PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3919 JUMP JUMPDEST DUP15 PUSH2 0xAD0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBF5 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP2 POP PUSH2 0xB4C JUMP JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xC48 JUMPI JUMPDEST PUSH2 0xC38 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP1 DUP11 PUSH2 0xA95 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC2E JUMP JUMPDEST PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0xC96 DUP6 PUSH2 0xC7E DUP2 CALLER PUSH2 0x482F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC1 PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x9 SLOAD ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP1 DUP4 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH2 0xD86 SWAP4 PUSH2 0xD88 JUMPI JUMPDEST POP POP PUSH2 0x48D3 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH2 0xD9E SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP3 DUP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B696E6720737570706C7920746F206469737472696275746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x72657761726473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0xE66 PUSH2 0xE5C PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x41EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xE8F PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0xE98 CALLER PUSH2 0x46F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xEB0 DUP4 DUP3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xEBE DUP3 PUSH1 0x9 SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP1 DUP3 DUP1 PUSH1 0x64 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP3 PUSH2 0xF6B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH2 0xF81 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP4 PUSH2 0xF5A JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP2 DUP3 ISZERO PUSH2 0x1092 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP5 EQ PUSH2 0x107C JUMPI DUP6 DUP8 SWAP5 DUP7 DUP7 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x105C JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xFFF JUMPI JUMPDEST POP PUSH2 0xFE7 SWAP3 POP SUB DUP4 PUSH2 0x376E JUMP JUMPDEST PUSH2 0xFFB PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x361C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SWAP2 POP PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1044 JUMPI POP POP PUSH2 0xFE7 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xFDA JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x102D JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0xFE7 SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0xFDA SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xFB5 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH2 0x1125 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xC DUP4 MSTORE PUSH2 0x1145 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH2 0x4914 JUMP JUMPDEST SWAP1 PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11BB PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1235 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x1254 PUSH2 0x1243 PUSH2 0x42CF JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP3 DUP4 SWAP2 DUP6 PUSH2 0x37A8 JUMP JUMPDEST PUSH2 0x3868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP6 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x14CD JUMPI JUMPDEST POP PUSH2 0x12A2 PUSH5 0xE8D4A51000 SWAP3 SWAP4 ISZERO ISZERO PUSH2 0x3B81 JUMP JUMPDEST DIV DUP1 SWAP2 LT PUSH2 0x1488 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1457 JUMPI JUMPDEST PUSH2 0x12E7 SWAP3 POP LT ISZERO PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP3 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x1F NOT SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0x1325 PUSH1 0x84 DUP3 PUSH2 0x376E JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP7 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x144A JUMPI RETURNDATASIZE SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x73B JUMPI PUSH2 0x1369 SWAP3 PUSH2 0x135B DUP8 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x376E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 DUP8 DUP5 ADD RETURNDATACOPY PUSH2 0x4A5E JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1431 JUMPI JUMPDEST POP POP POP PUSH2 0x1419 JUMPI POP PUSH2 0x13A4 PUSH2 0x139D PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x1397 PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST DUP6 PUSH2 0x37A8 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x3932 JUMP JUMPDEST SWAP1 PUSH2 0x13AF DUP3 ADDRESS PUSH2 0x473C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP3 PUSH2 0x13FB SWAP3 SWAP1 SWAP2 DUP5 SWAP2 SWAP1 LOG1 PUSH1 0x9 SLOAD PUSH2 0x140B JUMPI JUMPDEST PUSH2 0xC7E DUP2 CALLER PUSH2 0x473C JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1414 DUP5 PUSH2 0x48D3 JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1441 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x3970 JUMP JUMPDEST ISZERO DUP5 DUP5 DUP2 PUSH2 0x1377 JUMP JUMPDEST POP PUSH2 0x1369 SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST POP POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1481 JUMPI JUMPDEST PUSH2 0x146E DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI DUP2 PUSH2 0x12E7 SWAP2 MLOAD PUSH2 0x12DB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344432062616C616E636520697320696E73756666696369656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP DUP6 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x14F7 JUMPI JUMPDEST PUSH2 0x14E4 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x12A2 PUSH2 0x128F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x14DA JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH32 0x120DE5C966483867382DCE1EB95F0D016A917F91B2188B2F4C1413333A9FFB0F PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x153D PUSH2 0x3C95 JUMP JUMPDEST DUP1 PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x156E PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH1 0x3 SLOAD PUSH2 0x1631 DUP2 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x163C PUSH2 0x42CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x37A8 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x165D PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16BE PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16F8 PUSH2 0x3641 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x10 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x17DA JUMPI DUP7 DUP7 PUSH2 0x1791 DUP3 DUP9 SUB DUP4 PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x17BA JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x17AB JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x177B JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x180A PUSH2 0x3657 JUMP JUMPDEST SWAP1 PUSH2 0x1813 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x1836 PUSH2 0x181E PUSH2 0x42CF JUMP JUMPDEST PUSH2 0x124F PUSH1 0x3 SLOAD SWAP2 PUSH2 0x1830 DUP4 ISZERO ISZERO PUSH2 0x3B81 JUMP JUMPDEST DUP5 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP5 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1C99 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND SWAP4 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP8 DUP4 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1C7A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH4 0x802431FB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP8 DUP5 PUSH1 0x64 DUP2 PUSH1 0x24 SWAP10 DUP10 DUP12 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x1C4B JUMPI JUMPDEST POP PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND GT PUSH1 0x0 EQ PUSH2 0x1BFF JUMPI PUSH2 0x1922 DUP4 SWAP5 PUSH2 0x1922 PUSH2 0x191D DUP6 PUSH2 0x1928 SWAP7 SWAP8 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0x3BEC JUMP JUMPDEST SWAP1 PUSH2 0x3868 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BEA JUMPI PUSH2 0x191D PUSH2 0x1954 SWAP4 SWAP3 PUSH2 0x1922 SWAP3 PUSH2 0x3BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP2 DUP6 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1BB9 JUMPI JUMPDEST POP LT PUSH2 0x1B75 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1B44 JUMPI JUMPDEST PUSH2 0x19C1 SWAP3 POP LT ISZERO PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP8 DUP3 ADD SWAP1 DUP2 MSTORE CALLER DUP7 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP2 DUP3 ADD DUP2 MSTORE PUSH1 0x1F NOT SWAP3 PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 PUSH2 0x1A07 SWAP1 PUSH1 0x60 ADD DUP3 PUSH2 0x376E JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x1B37 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B22 JUMPI SWAP1 PUSH2 0x1A4D SWAP3 SWAP2 PUSH2 0x1A3D DUP9 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x376E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 DUP9 DUP5 ADD RETURNDATACOPY JUMPDEST DUP4 PUSH2 0x4AD5 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP6 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1B09 JUMPI JUMPDEST POP POP POP PUSH2 0x1AF4 JUMPI POP POP PUSH2 0x1A7C PUSH2 0x139D PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x1397 PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST PUSH2 0x1A86 DUP2 ADDRESS PUSH2 0x473C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP3 SWAP2 DUP4 SWAP2 LOG1 PUSH1 0x9 SLOAD PUSH2 0x1AE5 JUMPI JUMPDEST POP PUSH2 0x1ACD DUP3 CALLER PUSH2 0x473C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 SWAP1 DUP2 ADD PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x1AEE SWAP1 PUSH2 0x48D3 JUMP JUMPDEST DUP4 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1B19 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x3970 JUMP JUMPDEST ISZERO DUP6 DUP6 DUP2 PUSH2 0x1A5B JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A4D SWAP2 POP PUSH1 0x60 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST POP POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B6E JUMPI JUMPDEST PUSH2 0x1B5B DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI DUP2 PUSH2 0x19C1 SWAP2 MLOAD PUSH2 0x19B5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP6 ADD MSTORE PUSH32 0x42616C616E636520697320696E73756666696369656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1BE3 JUMPI JUMPDEST PUSH2 0x1BD2 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI DUP2 SWAP1 MLOAD DUP8 PUSH2 0x197E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BC8 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1922 DUP3 SWAP5 PUSH2 0x1C14 PUSH2 0x191D DUP7 PUSH2 0x1C1A SWAP7 PUSH2 0x3BD8 JUMP JUMPDEST SWAP1 PUSH2 0x37A8 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BEA JUMPI PUSH2 0x191D PUSH2 0x1C46 SWAP4 SWAP3 PUSH2 0x1922 SWAP3 PUSH2 0x3BD8 JUMP JUMPDEST PUSH2 0x1954 JUMP JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C73 JUMPI JUMPDEST PUSH2 0x1C63 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP3 DUP9 PUSH2 0x18F6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x1C92 SWAP2 SWAP4 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1CB0 SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP8 PUSH2 0x1871 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x1CCF PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x1CD8 CALLER PUSH2 0x46F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xC DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CF3 DUP2 ISZERO ISZERO PUSH2 0x3AF6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x1D98 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP4 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1DAE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP3 PUSH2 0x1D5F JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1DD3 PUSH2 0x3CC1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x1 DUP2 MSTORE PUSH2 0x1DEF DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3B42 JUMP JUMPDEST PUSH1 0x0 DUP3 JUMPDEST PUSH2 0x1E26 JUMPI PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0xC96 DUP6 PUSH2 0xC7E DUP2 CALLER PUSH2 0x482F JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x1F82 JUMPI SWAP1 DUP2 PUSH2 0x1E43 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x498A JUMP JUMPDEST SWAP4 SWAP1 SLOAD PUSH1 0x3 SWAP5 DUP6 SHL SHR AND SWAP3 SLOAD SWAP3 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F55 JUMPI JUMPDEST POP DUP6 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F4C JUMPI JUMPDEST PUSH2 0x1F41 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP5 DUP4 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP7 DUP10 PUSH2 0x1EEF SWAP5 PUSH1 0xFF DUP10 SWAP8 PUSH2 0x1EC5 SWAP6 DUP13 SWAP2 PUSH2 0x1F2A JUMPI POP AND SWAP3 PUSH2 0x479B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI DUP5 SWAP4 DUP5 SWAP3 PUSH2 0x1F0D JUMPI JUMPDEST POP JUMPDEST ADD SWAP1 SWAP2 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x1F23 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0xC07 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP5 POP POP POP DUP3 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST POP ADDRESS DUP4 EQ PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1F7B JUMPI JUMPDEST PUSH2 0x1F6C DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP8 PUSH2 0x1E7A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x1F4 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH2 0x1FC2 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x1FCA PUSH2 0x3657 JUMP JUMPDEST SWAP1 PUSH2 0x39F3 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH2 0x2006 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x200E PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND DUP5 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x2206 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x64 DUP2 DUP6 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21E9 JUMPI JUMPDEST POP PUSH2 0x20DA DUP4 DUP4 PUSH32 0x0 AND DUP7 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0x21D5 JUMPI PUSH2 0x20EF SWAP2 PUSH2 0xB61 SWAP2 ADDRESS SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 PUSH2 0x211A CALLER ADDRESS PUSH2 0x39F3 JUMP JUMPDEST SWAP2 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 PUSH2 0x21B4 PUSH2 0x2710 PUSH2 0x2151 PUSH1 0x3 SLOAD PUSH1 0xF SLOAD SWAP1 PUSH2 0x37A8 JUMP JUMPDEST DIV PUSH2 0x215C DUP2 ADDRESS PUSH2 0x473C JUMP JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2174 DUP3 DUP3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2182 DUP2 PUSH1 0x9 SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x8 DUP5 MSTORE TIMESTAMP PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x9 SLOAD PUSH2 0x21C7 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH2 0x21D0 DUP2 PUSH2 0x48D3 JUMP JUMPDEST PUSH2 0x219C JUMP JUMPDEST PUSH2 0x21E4 SWAP2 PUSH2 0xB61 SWAP2 ADDRESS SWAP2 PUSH2 0x4581 JUMP JUMPDEST PUSH2 0x20EF JUMP JUMPDEST PUSH2 0x2200 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP6 PUSH2 0x20AC JUMP JUMPDEST SWAP1 SWAP3 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x222E JUMPI JUMPDEST PUSH2 0x221E DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP2 DUP6 PUSH2 0x2043 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2214 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x2253 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x225C CALLER PUSH2 0x46F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x2324 JUMPI DUP3 PUSH2 0x227B SWAP2 PUSH2 0x3932 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x2295 DUP3 PUSH1 0x9 SLOAD PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP1 DUP3 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP3 PUSH2 0xF6B JUMPI POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F20756E7374616B6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH2 0x2377 CALLDATASIZE PUSH2 0x36B2 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP4 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2E0C JUMPI POP PUSH2 0x2392 DUP6 PUSH2 0x38E7 JUMP JUMPDEST SWAP1 PUSH2 0x239C DUP7 PUSH2 0x38E7 JUMP JUMPDEST SWAP4 PUSH2 0x23A6 DUP8 PUSH2 0x38E7 JUMP JUMPDEST SWAP4 PUSH2 0x23B0 DUP9 PUSH2 0x38E7 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x0 SWAP10 PUSH1 0x0 SWAP3 JUMPDEST DUP13 DUP9 DUP2 DUP7 LT PUSH2 0x2BE7 JUMPI POP POP POP POP POP POP DUP3 PUSH2 0x23E9 DUP4 PUSH2 0x23E3 PUSH2 0x23F5 SWAP7 SWAP6 PUSH2 0x23EF SWAP6 PUSH2 0x4545 JUMP JUMPDEST SWAP10 PUSH2 0x4545 JUMP JUMPDEST SWAP7 PUSH2 0x4545 JUMP JUMPDEST SWAP4 PUSH2 0x4545 JUMP JUMPDEST SWAP5 PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x263C JUMPI PUSH2 0x240C DUP2 DUP7 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x241A JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23F9 JUMP JUMPDEST PUSH2 0x2484 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x243F PUSH2 0x463 PUSH2 0x2437 DUP6 DUP13 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP14 DUP10 PUSH2 0x3888 JUMP JUMPDEST AND PUSH2 0x244A DUP4 DUP10 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 SWAP5 SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x261F JUMPI JUMPDEST POP PUSH2 0x24AC PUSH2 0x463 PUSH2 0x24A4 DUP5 DUP12 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP13 DUP9 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE SWAP3 DUP1 DUP5 PUSH1 0x64 DUP2 PUSH32 0x0 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI DUP4 DUP11 PUSH1 0x1 SWAP7 DUP15 SWAP4 PUSH1 0x0 SWAP6 PUSH2 0x25EA JUMPI JUMPDEST POP POP PUSH2 0x2571 SWAP3 PUSH2 0x2534 PUSH2 0x253C SWAP4 PUSH2 0x463 SWAP4 PUSH2 0x394D JUMP JUMPDEST MLOAD SWAP1 DUP11 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0x2546 DUP6 DUP12 PUSH2 0x394D JUMP JUMPDEST MLOAD SWAP1 DUP5 PUSH32 0x0 AND SWAP1 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0x25B2 JUMPI PUSH2 0x25A2 PUSH2 0x258A PUSH2 0x463 PUSH2 0x24A4 DUP5 DUP12 PUSH2 0x394D JUMP JUMPDEST PUSH2 0x2594 DUP4 DUP10 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP8 MLOAD PUSH2 0x25AB JUMPI CALLER SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST POP JUMPDEST SWAP1 POP PUSH2 0x2412 JUMP JUMPDEST ADDRESS SWAP2 PUSH2 0x3FC7 JUMP JUMPDEST PUSH2 0x25DD PUSH2 0x25C5 PUSH2 0x463 PUSH2 0x24A4 DUP5 DUP12 PUSH2 0x394D JUMP JUMPDEST PUSH2 0x25CF DUP4 DUP10 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP8 MLOAD PUSH2 0x25E3 JUMPI CALLER SWAP2 PUSH2 0x4581 JUMP JUMPDEST POP PUSH2 0x25A4 JUMP JUMPDEST ADDRESS SWAP2 PUSH2 0x4581 JUMP JUMPDEST PUSH2 0x463 SWAP3 SWAP6 POP PUSH2 0x253C SWAP4 PUSH2 0x2612 PUSH2 0x2571 SWAP7 SWAP4 DUP4 PUSH2 0x2534 SWAP5 SWAP1 RETURNDATASIZE LT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP7 SWAP4 POP SWAP4 POP DUP2 SWAP5 POP PUSH2 0x251E JUMP JUMPDEST PUSH2 0x2635 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP11 PUSH2 0x2493 JUMP JUMPDEST POP DUP6 DUP3 DUP9 DUP6 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE66 JUMPI PUSH2 0x2657 DUP2 DUP7 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x2665 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x266F DUP2 DUP7 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP8 PUSH2 0x268F SWAP2 PUSH2 0x3868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP2 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2BB1 JUMPI JUMPDEST PUSH2 0x26D5 SWAP3 POP PUSH2 0x37A8 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH5 0xE8D4A51000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DIV SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x2B0D JUMPI JUMPDEST POP POP ISZERO PUSH2 0x265D JUMPI PUSH2 0x271B PUSH2 0x463 PUSH2 0x2713 DUP4 DUP6 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP6 DUP8 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2AEE JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x27B5 PUSH2 0x463 PUSH2 0x27AD DUP6 DUP8 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP8 DUP10 PUSH2 0x3888 JUMP JUMPDEST SWAP2 PUSH2 0x27F6 DUP3 PUSH32 0x0 AND SWAP4 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x27EE DUP9 DUP14 PUSH2 0x394D JUMP JUMPDEST MLOAD DIV SWAP2 PUSH2 0x3E68 JUMP JUMPDEST AND ISZERO PUSH2 0x28C1 JUMPI POP DUP1 PUSH2 0x282D PUSH2 0x2814 PUSH2 0x463 PUSH2 0x27AD PUSH2 0x286B SWAP6 DUP8 PUSH2 0x394D JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x2824 DUP5 DUP11 PUSH2 0x394D JUMP JUMPDEST MLOAD DIV ADDRESS SWAP2 PUSH2 0x40FA JUMP JUMPDEST PUSH1 0x20 PUSH2 0x2844 PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x1397 PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x289B SWAP3 PUSH2 0x28A2 JUMPI JUMPDEST POP ISZERO ISZERO PUSH2 0x39A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x265D JUMP JUMPDEST PUSH2 0x28BA SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP10 PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x28E3 PUSH2 0x463 PUSH2 0x28DB DUP7 DUP9 PUSH2 0x394D JUMP JUMPDEST MLOAD DUP9 DUP11 PUSH2 0x3888 JUMP JUMPDEST SWAP3 PUSH2 0x29C7 PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x28F9 DUP9 DUP14 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH20 0x9E46F287CB791987B6228C32669EA5126AA105D PUSH1 0x62 SHL DUP9 DUP3 ADD MSTORE PUSH2 0x177 PUSH1 0xEB SHL PUSH1 0x34 DUP3 ADD DUP2 SWAP1 MSTORE PUSH19 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF127 PUSH1 0x64 SHL PUSH1 0x37 DUP4 ADD MSTORE PUSH1 0x4B DUP3 ADD MSTORE PUSH1 0x60 SWAP9 DUP10 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x4E DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE SWAP2 SWAP1 DIV PUSH2 0x2970 DUP3 PUSH2 0x3752 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x297D DUP4 PUSH2 0x371A JUMP JUMPDEST DUP3 MSTORE DUP7 DUP3 ADD SWAP1 ADDRESS DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP9 TIMESTAMP DUP11 MSTORE DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP1 DUP5 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP9 MSTORE DUP13 PUSH1 0x4 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH2 0x361C JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE MLOAD PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2ABC JUMPI JUMPDEST POP PUSH2 0x2A3C PUSH1 0x20 PUSH2 0x2A15 PUSH1 0xE SLOAD PUSH2 0x124F PUSH2 0x2A0F PUSH1 0xD SLOAD DUP4 PUSH2 0x3932 JUMP JUMPDEST DUP7 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x656 JUMPI PUSH2 0x2A9D JUMPI JUMPDEST POP ISZERO PUSH2 0x2A6A JUMPI PUSH1 0x1 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2AB5 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP DUP8 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AE6 JUMPI JUMPDEST DUP2 PUSH2 0x2AD7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP8 PUSH2 0x29F4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2ACA JUMP JUMPDEST PUSH2 0x2B07 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6FD JUMPI PUSH2 0x6EE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP8 PUSH2 0x2794 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2B7D JUMPI JUMPDEST POP PUSH5 0xE8D4A51000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH5 0xE8D4A51000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI GT ISZERO DUP8 DUP1 PUSH2 0x26FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BA9 JUMPI JUMPDEST DUP2 PUSH2 0x2B99 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP1 DUP9 PUSH2 0x2B42 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2B8C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BDF JUMPI JUMPDEST DUP2 PUSH2 0x2BCC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI PUSH2 0x26D5 SWAP2 MLOAD SWAP1 PUSH2 0x26CB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C06 PUSH2 0x463 DUP9 PUSH1 0x24 SWAP7 SWAP8 SWAP9 SWAP10 SWAP12 SWAP6 PUSH1 0x20 SWAP6 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x656 JUMPI DUP15 DUP11 DUP10 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x2DCF JUMPI JUMPDEST POP PUSH2 0x2C4D PUSH2 0x463 PUSH1 0x4 SWAP7 PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x656 JUMPI DUP16 SWAP4 DUP12 DUP9 SWAP6 DUP8 DUP10 SWAP6 DUP14 SWAP6 PUSH1 0x0 SWAP6 PUSH2 0x2D90 JUMPI JUMPDEST POP SWAP5 DUP3 PUSH2 0x2CDD PUSH1 0xFF PUSH2 0x2CC0 PUSH2 0x2CB3 DUP6 PUSH2 0x463 SWAP8 PUSH2 0x2CAD PUSH2 0x2CE3 SWAP13 SWAP14 PUSH2 0x2CA7 PUSH2 0x463 DUP6 DUP16 SWAP15 PUSH2 0x2CA7 SWAP16 PUSH2 0x3888 JUMP JUMPDEST SWAP1 PUSH2 0x4378 JUMP JUMPDEST SWAP14 PUSH2 0x3888 JUMP JUMPDEST CALLDATALOAD SWAP13 PUSH2 0x2710 DUP1 SWAP13 DIV PUSH2 0x3868 JUMP JUMPDEST DUP13 DUP2 GT SWAP13 SWAP1 DUP14 ISZERO PUSH2 0x2D81 JUMPI SWAP1 PUSH2 0x2CD5 SWAP2 PUSH2 0x3932 JUMP JUMPDEST SWAP9 JUMPDEST AND PUSH2 0x393F JUMP JUMPDEST SWAP5 PUSH2 0x3888 JUMP JUMPDEST SWAP4 ISZERO PUSH2 0x2D46 JUMPI DUP7 PUSH2 0x2CF3 SWAP2 PUSH2 0x37A8 JUMP JUMPDEST DIV SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP13 PUSH2 0x2D35 DUP3 PUSH2 0x2D23 PUSH1 0x1 SWAP7 PUSH2 0x2D3B SWAP7 PUSH2 0x3868 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x2D2F DUP4 DUP14 PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x3961 JUMP JUMPDEST SWAP6 JUMPDEST ADD SWAP3 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP14 PUSH2 0x2D57 SWAP3 SWAP9 SWAP10 SWAP4 POP DUP15 SWAP2 POP PUSH2 0x38C2 JUMP JUMPDEST SWAP12 DUP8 PUSH2 0x2D63 DUP4 DUP14 PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x2D6E DUP3 DUP12 PUSH2 0x394D JUMP JUMPDEST MSTORE PUSH2 0x2D78 SWAP1 PUSH2 0x3961 JUMP JUMPDEST SWAP6 PUSH1 0x1 SWAP1 PUSH2 0x2D3D JUMP JUMPDEST PUSH2 0x2D8A SWAP2 PUSH2 0x3932 JUMP JUMPDEST SWAP9 PUSH2 0x2CD7 JUMP JUMPDEST DUP7 DUP1 SWAP7 POP DUP5 DUP7 SWAP9 SWAP4 SWAP5 SWAP6 SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2DC8 JUMPI JUMPDEST PUSH2 0x2DB0 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD PUSH2 0x2DBB SWAP2 PUSH2 0x3919 JUMP JUMPDEST SWAP8 POP SWAP5 SWAP4 SWAP3 POP SWAP7 POP PUSH2 0x2C7A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2DA6 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2E04 JUMPI JUMPDEST DUP2 PUSH2 0x2DED PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI SWAP1 MLOAD DUP7 SWAP2 SWAP1 DUP15 DUP11 PUSH2 0x2C4D PUSH2 0x2C32 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2DE0 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2E25 PUSH2 0x463 DUP6 DUP10 DUP7 PUSH2 0x3888 JUMP JUMPDEST AND PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2E77 JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP2 PUSH2 0x1145 PUSH2 0x2E6E SWAP3 PUSH2 0x2CA7 PUSH2 0x463 DUP9 DUP13 DUP10 PUSH2 0x3888 JUMP JUMPDEST SWAP4 SWAP5 SWAP3 ADD PUSH2 0x2381 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2EA0 JUMPI JUMPDEST PUSH2 0x2E8E DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP2 PUSH2 0x1145 PUSH2 0x2E54 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2E84 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH2 0x42CF JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27B JUMPI PUSH2 0x2EDC PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x2F0E DUP2 PUSH2 0x3736 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP3 DUP2 AND ISZERO PUSH2 0x2FE5 JUMPI PUSH2 0x2F9B PUSH2 0x2FA7 DUP6 PUSH2 0x834 SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2F35 DUP4 DUP8 ADD DUP4 PUSH2 0x376E JUMP JUMPDEST DUP6 DUP3 MSTORE DUP3 DUP3 ADD SWAP6 PUSH2 0x4B27 DUP8 CODECOPY PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP5 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH2 0x2F74 SWAP1 DUP3 SWAP1 DUP5 ADD SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH2 0x2F8C DUP7 DUP7 ADD SWAP10 DUP11 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x35F9 JUMP JUMPDEST DUP5 ADD SWAP2 MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x35F9 JUMP JUMPDEST ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x376E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 PUSH1 0xFF PUSH1 0xF8 SHL DUP5 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x21 DUP5 ADD MSTORE PUSH1 0x35 DUP4 ADD MSTORE PUSH1 0x55 DUP3 ADD MSTORE PUSH1 0x55 DUP2 MSTORE PUSH2 0x2FD9 DUP2 PUSH2 0x3752 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265207A65726F2E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x3043 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x304B PUSH2 0x3657 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 PUSH1 0x0 NOT DUP6 SUB PUSH2 0x308B JUMPI JUMPDEST POP PUSH2 0xE66 SWAP4 POP PUSH2 0x41EF JUMP JUMPDEST DUP4 DUP6 LT PUSH2 0x30F7 JUMPI DUP1 ISZERO PUSH2 0x30DE JUMPI CALLER ISZERO PUSH2 0x30C5 JUMPI PUSH2 0xE66 SWAP5 DUP5 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP5 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x3154 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x3175 PUSH1 0x3 SLOAD PUSH2 0x3165 DUP2 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH2 0x124F PUSH2 0x3170 PUSH2 0x42CF JUMP JUMPDEST PUSH2 0x3790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x802431FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 PUSH1 0x64 DUP2 PUSH32 0x0 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3411 JUMPI JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP2 DUP3 DUP7 MSTORE ADDRESS PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 DUP6 DUP8 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x33E2 JUMPI JUMPDEST POP PUSH5 0xE8D4A51000 SWAP1 DUP2 DUP4 MUL SWAP3 DUP1 DUP5 DIV DUP4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP1 DUP4 LT ISZERO PUSH2 0x334F JUMPI POP DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI DUP6 SWAP5 PUSH2 0x32E1 SWAP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3286 PUSH2 0x32D3 SWAP6 PUSH2 0x32D9 SWAP6 PUSH2 0x3868 JUMP JUMPDEST DIV SWAP2 DUP1 DUP4 GT PUSH2 0x3347 JUMPI JUMPDEST POP PUSH32 0x0 AND PUSH2 0x32BD DUP10 DUP3 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x32C8 ADDRESS DUP11 ADDRESS PUSH2 0x40FA JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 LT ISZERO PUSH2 0x37BB JUMP JUMPDEST ADDRESS PUSH2 0x3E68 JUMP JUMPDEST ADDRESS SWAP1 ADDRESS PUSH2 0x3FC7 JUMP JUMPDEST POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3317 JUMPI JUMPDEST POP PUSH2 0x3310 SWAP3 POP GT PUSH2 0x381C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3340 JUMPI JUMPDEST PUSH2 0x332D DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI PUSH2 0x3310 SWAP2 MLOAD DUP4 PUSH2 0x3304 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3323 JUMP JUMPDEST SWAP2 POP DUP11 PUSH2 0x3290 JUMP JUMPDEST SWAP4 POP POP SWAP1 SWAP6 POP SWAP4 SWAP3 SWAP2 SWAP4 GT PUSH2 0x3368 JUMPI JUMPDEST POP POP POP POP PUSH2 0x3310 JUMP JUMPDEST PUSH2 0x33C7 PUSH2 0x33BA PUSH2 0x33BF PUSH1 0x1 SWAP5 PUSH2 0x33D9 SWAP8 PUSH32 0x0 AND PUSH2 0x33A5 DUP9 DUP3 ADDRESS PUSH2 0x3E68 JUMP JUMPDEST PUSH2 0x33B0 ADDRESS DUP10 ADDRESS PUSH2 0x3FC7 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 GT PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x3CE4 JUMP JUMPDEST ADDRESS SWAP1 ADDRESS PUSH2 0x40FA JUMP JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x381C JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0x335F JUMP JUMPDEST SWAP1 SWAP7 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x340A JUMPI JUMPDEST PUSH2 0x33FA DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP6 DUP9 PUSH2 0x3235 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x33F0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3437 JUMPI JUMPDEST PUSH2 0x3428 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD DUP5 PUSH2 0x31E8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x341E JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH2 0x3457 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x30DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x30C5 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP2 DUP3 ISZERO PUSH2 0x357F JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP5 EQ PUSH2 0x107C JUMPI DUP6 DUP8 SWAP5 DUP7 DUP7 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x105C JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x3522 JUMPI POP PUSH2 0xFE7 SWAP3 POP SUB DUP4 PUSH2 0x376E JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x3567 JUMPI POP POP PUSH2 0xFE7 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xFDA JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x3550 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x34F1 JUMP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH32 0xBEA1B31142AE4B1F4EFAD240349036D718B7950D246C127768097CCF602FC7E0 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x35C8 PUSH2 0x3C95 JUMP JUMPDEST DUP1 PUSH1 0xD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x27B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27B JUMPI PUSH1 0x20 PUSH2 0x114B PUSH1 0x3 SLOAD PUSH2 0x3165 DUP2 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x360C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35FC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3635 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x35F9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x27B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x27B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x27B JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x27B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x27B JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x27B JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x27B JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x27B JUMPI DUP3 PUSH2 0x36DF SWAP2 PUSH1 0x4 ADD PUSH2 0x3681 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x27B JUMPI PUSH2 0x36F9 SWAP2 PUSH1 0x4 ADD PUSH2 0x3681 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x73B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x2B67 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2B67 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x37C2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417262697472616765206661696C65643A20696E73756666696369656E74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D5D1C1D5D08185B5BDD5B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3823 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41726269747261676520646964206E6F742070726F6669740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3872 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2B67 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x73B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x38F1 DUP3 PUSH2 0x38CF JUMP JUMPDEST PUSH2 0x38FE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x376E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x390F PUSH1 0x1F NOT SWAP2 PUSH2 0x38CF JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x27B JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2B67 JUMPI JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x2B67 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2B67 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x27B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x27B JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x27B JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x39AE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170204661696C65642C20547279204275726E2829000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x39FD PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x3A06 DUP4 PUSH2 0x46F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 PUSH1 0x0 SWAP4 DUP3 DUP6 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xC DUP3 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD SWAP4 PUSH2 0x3A30 DUP6 ISZERO ISZERO PUSH2 0x3AF6 JUMP JUMPDEST DUP7 MSTORE PUSH1 0xC DUP3 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 DUP8 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 DUP2 PUSH1 0x44 DUP2 DUP11 PUSH32 0x0 DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x3AEB JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH2 0x3ACE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 DUP6 DUP6 MSTORE AND SWAP3 LOG2 SWAP1 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3AE4 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE PUSH2 0x3ABB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3AFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3B49 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9CDD59999A58DA595B9D08109053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3B88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2042414C554E4920737570706C792063616E6E6F74206265207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2B67 JUMPI JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x2B67 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3C04 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x3CA9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x3CD2 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP4 PUSH1 0x44 DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3E5D JUMPI PUSH1 0x0 SWAP4 PUSH2 0x3E2E JUMPI JUMPDEST POP DUP2 DUP4 SUB PUSH2 0x3D41 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP6 SWAP3 PUSH2 0x3DB9 JUMPI JUMPDEST DUP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3DAF JUMPI POP PUSH2 0x3D91 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0x3D39 JUMP JUMPDEST DUP2 PUSH2 0x3DA7 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x3D88 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 SWAP3 DUP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x3E23 JUMPI SWAP2 DUP7 SWAP4 SWAP2 PUSH2 0x3D77 SWAP7 SWAP6 SWAP4 PUSH2 0x3E06 JUMPI JUMPDEST POP SWAP5 POP PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x3E1C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE PUSH2 0x3DFE JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E56 JUMPI JUMPDEST PUSH2 0x3E46 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x3D30 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3E3C JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP6 AND SWAP1 DUP7 DUP5 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3E23 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x3F98 JUMPI JUMPDEST POP DUP3 DUP5 SUB PUSH2 0x3EC3 JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP7 SWAP4 PUSH2 0x3F35 JUMPI JUMPDEST DUP5 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 POP DUP4 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3DAF JUMPI POP PUSH2 0x3F17 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3EBA JUMP JUMPDEST DUP2 PUSH2 0x3F2D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x3F0D JUMP JUMPDEST SWAP2 SWAP4 DUP1 SWAP6 SWAP2 SWAP4 POP MLOAD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x3E23 JUMPI SWAP2 DUP7 SWAP4 SWAP2 PUSH2 0x3EFC SWAP7 SWAP6 SWAP4 PUSH2 0x3F7B JUMPI JUMPDEST POP PUSH2 0x3ECA JUMP JUMPDEST PUSH2 0x3F91 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x64F JUMPI PUSH2 0x640 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST POP CODESIZE PUSH2 0x3F75 JUMP JUMPDEST SWAP1 SWAP4 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3FC0 JUMPI JUMPDEST PUSH2 0x3FB0 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x27B JUMPI MLOAD SWAP3 CODESIZE PUSH2 0x3EB1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA6 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x3FD4 DUP2 PUSH2 0x36FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE DUP3 DUP1 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH2 0xBB8 DUP7 MSTORE DUP3 PUSH1 0x60 DUP7 ADD SWAP9 AND DUP9 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP5 PUSH1 0x0 SWAP11 DUP12 SWAP10 DUP11 DUP7 MSTORE DUP3 PUSH1 0xE0 DUP12 ADD SWAP8 DUP13 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP13 DUP14 PUSH4 0x414BF389 PUSH1 0xE0 SHL SWAP1 MSTORE MLOAD AND PUSH1 0x4 DUP14 ADD MSTORE MLOAD AND PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD PUSH1 0x84 DUP8 ADD MSTORE MLOAD PUSH1 0xA4 DUP7 ADD MSTORE MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP4 ADD MSTORE PUSH32 0x0 AND DUP2 GAS SWAP4 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP2 DUP3 ISZERO PUSH2 0x40EE JUMPI DUP1 SWAP3 PUSH2 0x40BA JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40E6 JUMPI JUMPDEST DUP2 PUSH2 0x40D6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x4107 DUP2 PUSH2 0x36FD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 DUP2 DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH2 0xBB8 DUP7 MSTORE DUP3 PUSH1 0x60 DUP7 ADD SWAP9 AND DUP9 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP5 PUSH1 0x0 SWAP11 DUP12 SWAP10 DUP11 DUP7 MSTORE DUP3 PUSH1 0xE0 DUP12 ADD SWAP8 DUP13 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP13 DUP14 PUSH4 0x414BF389 PUSH1 0xE0 SHL SWAP1 MSTORE MLOAD AND PUSH1 0x4 DUP14 ADD MSTORE MLOAD AND PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD PUSH1 0x84 DUP8 ADD MSTORE MLOAD PUSH1 0xA4 DUP7 ADD MSTORE MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP4 ADD MSTORE PUSH32 0x0 AND DUP2 GAS SWAP4 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP2 DUP3 ISZERO PUSH2 0x40EE JUMPI DUP1 SWAP3 PUSH2 0x40BA JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x42B6 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x429D JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x426B JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x1 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x42E2 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x42F5 DUP5 PUSH2 0x498A JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3DAF JUMPI POP PUSH1 0x0 SWAP3 PUSH2 0x4345 JUMPI JUMPDEST POP POP SWAP2 PUSH2 0x1145 PUSH2 0x433D SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x4378 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x42D6 JUMP JUMPDEST DUP2 DUP2 SWAP4 SWAP3 SWAP4 RETURNDATASIZE DUP4 GT PUSH2 0x4371 JUMPI JUMPDEST PUSH2 0x435C DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD PUSH2 0x1145 PUSH2 0x433D PUSH2 0x432B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP2 SWAP3 PUSH1 0x0 SWAP3 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 DUP6 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x453A JUMPI DUP7 SWAP6 PUSH2 0x451B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP6 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x3AEB JUMPI DUP8 SWAP6 PUSH2 0x44FC JUMPI JUMPDEST POP DUP3 EQ PUSH2 0x44C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x802431FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP6 SWAP1 DUP4 PUSH2 0x4495 JUMPI JUMPDEST POP POP POP PUSH2 0x4463 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 PUSH2 0x448B PUSH2 0x4484 PUSH2 0x191D PUSH2 0x1C14 SWAP5 PUSH2 0x4491 SWAP8 SWAP7 PUSH2 0x3BD8 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x37A8 JUMP JUMPDEST SWAP3 PUSH2 0x37A8 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 SWAP4 SWAP7 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x44C1 JUMPI JUMPDEST PUSH2 0x44AE DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD SWAP3 CODESIZE DUP1 DUP1 PUSH2 0x4453 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x44A4 JUMP JUMPDEST POP POP POP POP POP PUSH5 0xE8D4A51000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x44E8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x4514 SWAP2 SWAP6 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0x43DD JUMP JUMPDEST PUSH2 0x4533 SWAP2 SWAP6 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0xC0D JUMPI PUSH2 0xBFF DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0x43B1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x4550 DUP2 PUSH2 0x38E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4562 JUMPI POP SWAP1 SWAP3 POP POP JUMP JUMPDEST DUP1 PUSH2 0x456F PUSH1 0x1 SWAP3 DUP8 PUSH2 0x394D JUMP JUMPDEST MLOAD PUSH2 0x457A DUP3 DUP7 PUSH2 0x394D JUMP JUMPDEST MSTORE ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP4 DUP5 SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND DUP3 DUP6 ADD MSTORE PUSH2 0x177 PUSH1 0xEB SHL DUP1 PUSH1 0x34 DUP7 ADD MSTORE PUSH19 0xD500B1D8E8EF31E21C99D1DB9A6444D3ADF127 PUSH1 0x64 SHL PUSH1 0x37 DUP7 ADD MSTORE PUSH1 0x4B DUP6 ADD MSTORE PUSH20 0x9E46F287CB791987B6228C32669EA5126AA105D PUSH1 0x62 SHL PUSH1 0x4E DUP6 ADD MSTORE PUSH1 0x42 DUP5 MSTORE PUSH2 0x45FA DUP5 PUSH2 0x3752 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x4607 DUP6 PUSH2 0x371A JUMP JUMPDEST DUP5 MSTORE DUP2 DUP5 ADD SWAP3 PUSH2 0x4667 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP1 SWAP4 AND DUP7 MSTORE PUSH1 0x40 DUP8 ADD SWAP7 TIMESTAMP DUP9 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP7 PUSH1 0x0 SWAP8 DUP9 SWAP4 DUP5 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP9 MSTORE DUP13 PUSH1 0x4 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH2 0x361C JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE MLOAD PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x46EC JUMPI DUP2 SWAP4 PUSH2 0x46BB JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x46E5 JUMPI JUMPDEST PUSH2 0x46D3 DUP2 DUP4 PUSH2 0x376E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40E3 JUMPI POP MLOAD CODESIZE DUP1 DUP1 PUSH2 0x46B5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x46C9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x470A DUP3 PUSH2 0x4914 JUMP JUMPDEST SWAP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x4726 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xA SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x429D JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x477E PUSH1 0x0 SWAP5 PUSH1 0x3 SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP5 DUP5 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x47A8 DUP3 ISZERO ISZERO PUSH2 0x3C49 JUMP JUMPDEST PUSH1 0x12 DUP2 GT PUSH2 0x47EA JUMPI PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x47DB JUMPI PUSH1 0x12 SUB SWAP3 PUSH1 0x12 DUP5 GT PUSH2 0x2B67 JUMPI PUSH2 0x448B PUSH2 0x124F SWAP3 PUSH2 0x1C14 PUSH2 0x47D8 SWAP7 PUSH2 0x393F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x47D8 SWAP3 PUSH2 0x124F SWAP2 SWAP3 PUSH2 0x37A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646563696D616C732073686F756C64206265203C3D2031380000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x42B6 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 DUP2 DUP6 LT PUSH2 0x48A1 JUMPI POP PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 SWAP7 DUP6 DUP8 MSTORE PUSH1 0x1 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x3 SLOAD SUB PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD SWAP1 DUP2 PUSH2 0x48E0 JUMPI POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2B67 JUMPI PUSH2 0x490F SWAP2 PUSH2 0x4907 SWAP2 PUSH2 0x3868 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x38C2 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x497F PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x497A PUSH2 0x4944 PUSH1 0x40 DUP4 KECCAK256 SLOAD TIMESTAMP PUSH2 0x3932 JUMP JUMPDEST PUSH4 0x1E13380 SWAP6 SWAP1 DUP7 DUP2 GT ISZERO PUSH2 0x4984 JUMPI POP DUP6 SWAP1 JUMPDEST DUP4 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x448B PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP4 PUSH1 0x40 PUSH1 0xA SLOAD SWAP2 PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH2 0x37A8 JUMP JUMPDEST DIV DIV SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4957 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4A59 JUMPI PUSH1 0x10 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x4A45 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x10 SSTORE DUP2 LT ISZERO PUSH2 0x4A31 JUMPI SWAP1 DUP3 PUSH1 0x40 SWAP3 PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD SSTORE PUSH1 0x10 SLOAD SWAP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH2 0x4A87 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x4A75 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP1 MLOAD ISZERO DUP1 PUSH2 0x4ABE JUMPI JUMPDEST PUSH2 0x4A98 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x535B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EXTCODESIZE ISZERO PUSH2 0x4A91 JUMP JUMPDEST SWAP1 PUSH2 0x4AEA JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x4A75 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x4B1D JUMPI JUMPDEST PUSH2 0x4AFB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x4AF3 JUMP INVALID PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x834 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xD7 JUMP JUMPDEST SWAP3 ADD PUSH1 0xD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 CALLER DUP4 SWAP1 SUB PUSH1 0x89 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP2 AND DUP2 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x749 SWAP1 DUP2 PUSH2 0xEB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x27B7363C902937BABA32B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xBC JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI POP DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x42B JUMPI PUSH4 0xEEDC3C50 EQ PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x3DC JUMPI PUSH2 0x75 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x476 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x24 DUP1 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x423 JUMPI PUSH2 0x90 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x476 JUMP JUMPDEST SWAP1 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH1 0x1 SWAP9 DUP8 DUP11 SLOAD AND CALLER SUB PUSH2 0x3E0 JUMPI DUP11 JUMPDEST DUP3 DUP2 LT PUSH2 0x31C JUMPI POP POP POP POP DUP5 DUP8 SLOAD AND SWAP1 DUP5 MLOAD DUP1 SWAP3 PUSH4 0xC2FE7FF PUSH1 0xE1 SHL DUP3 MSTORE DUP2 DUP7 PUSH1 0x20 SWAP6 DUP7 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x312 JUMPI DUP11 SWAP2 PUSH2 0x2E1 JUMPI JUMPDEST POP DUP9 DUP11 JUMPDEST DUP9 DUP11 DUP6 DUP1 DUP5 LT PUSH2 0x1FB JUMPI SWAP5 POP POP POP POP POP PUSH2 0xFB JUMPI DUP9 DUP1 RETURN JUMPDEST DUP9 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x10B JUMPI POP POP DUP9 DUP1 RETURN JUMPDEST DUP10 SWAP2 DUP9 PUSH2 0x121 PUSH2 0x11C DUP5 DUP8 DUP15 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x160 JUMPI POP POP SELFBALANCE PUSH2 0x14D JUMPI JUMPDEST ADD DUP10 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x15B DUP9 DUP13 SLOAD AND SELFBALANCE SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP1 DUP6 DUP3 DUP9 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1F1 JUMPI SWAP1 DUP4 SWAP3 SWAP2 DUP14 SWAP6 SWAP5 SWAP3 PUSH2 0x1BB JUMPI JUMPDEST POP DUP11 PUSH1 0xA DUP4 GT PUSH2 0x1A6 JUMPI JUMPDEST POP POP POP POP PUSH2 0x145 JUMP JUMPDEST PUSH2 0x1B2 SWAP4 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST DUP11 CODESIZE DUP1 DUP11 PUSH2 0x19D JUMP JUMPDEST SWAP5 POP SWAP1 POP DUP6 DUP5 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x1EA JUMPI JUMPDEST PUSH2 0x1D4 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI DUP12 SWAP4 MLOAD SWAP1 CODESIZE PUSH2 0x192 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x11C SWAP2 PUSH2 0x209 SWAP4 PUSH2 0x570 JUMP JUMPDEST AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 SUB PUSH2 0x248 JUMPI POP PUSH2 0x240 PUSH2 0x2710 PUSH2 0x236 DUP6 SELFBALANCE PUSH2 0x580 JUMP JUMPDEST DIV DUP11 DUP5 SLOAD AND PUSH2 0x66F JUMP JUMPDEST ADD DUP10 SWAP1 PUSH2 0xE3 JUMP JUMPDEST DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP10 DUP3 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP6 DUP2 DUP9 DUP2 DUP6 GAS STATICCALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0x2D6 JUMPI DUP14 SWAP5 SWAP4 SWAP3 DUP7 SWAP3 SWAP1 PUSH2 0x29B JUMPI JUMPDEST POP PUSH2 0x28A PUSH2 0x296 SWAP4 SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0x580 JUMP JUMPDEST DIV SWAP1 DUP12 DUP6 SLOAD AND SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2CF JUMPI JUMPDEST PUSH2 0x2B5 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2CB JUMPI MLOAD DUP12 SWAP3 SWAP1 DUP5 SWAP1 PUSH2 0x28A PUSH2 0x278 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2AB JUMP JUMPDEST DUP11 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x30B JUMPI JUMPDEST PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x4F8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x307 JUMPI MLOAD CODESIZE PUSH2 0xDF JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2EE JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32A PUSH2 0x11C DUP3 DUP6 DUP6 PUSH2 0x4AC JUMP JUMPDEST DUP13 PUSH1 0x20 SWAP2 DUP3 PUSH2 0x33A DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST ADD CALLDATALOAD SWAP1 PUSH2 0x348 DUP6 DUP9 DUP9 PUSH2 0x4AC JUMP JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3DC JUMPI ADD DUP1 CALLDATALOAD SWAP1 DUP10 DUP3 GT PUSH2 0x3DC JUMPI DUP6 ADD SWAP3 DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0x3DC JUMPI DUP5 SWAP4 DUP3 DUP16 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0x38D PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x39B JUMPI POP DUP11 ADD PUSH2 0xAA JUMP JUMPDEST DUP8 PUSH1 0x11 DUP9 PUSH1 0x64 SWAP4 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x42617463682063616C6C206661696C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C61626C65206F6E6C792062792074686520726F757465720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1E6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP3 SLOAD AND DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4A7 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x4A7 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x4A7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x5E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x4A7 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4A7 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x51A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x55F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x4F8 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x593 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x44 DUP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP2 DUP5 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x51A JUMPI PUSH2 0x614 SWAP3 PUSH1 0x40 MSTORE AND SWAP3 PUSH1 0x0 DUP1 SWAP4 DUP2 SWAP3 MLOAD SWAP1 DUP3 DUP8 GAS CALL PUSH2 0x60D PUSH2 0x530 JUMP JUMPDEST SWAP1 DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x644 JUMPI JUMPDEST POP POP POP PUSH2 0x62C JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x1E6 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x66C JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x622 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x690 PUSH2 0x530 JUMP JUMPDEST POP ISZERO PUSH2 0x698 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6D7 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x698 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x70A JUMPI JUMPDEST PUSH2 0x6E8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x6E0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE ADDRESS PUSH24 0x1BDAC7A28577E83853179585C14D2D1DE60202BEE4D616BC 0x29 0x25 0xC9 SWAP4 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x27 SWAP2 0xBC LOG1 CALLCODE 0xDE CHAINID PUSH2 0xED88 LOG3 0xC SWAP10 0xA7 0xA9 DIFFICULTY SWAP11 0xA8 COINBASE PUSH21 0xA2646970667358221220E671A31319BAF4EFCDFD37 DUP5 0xF9 0xEA COINBASE AND 0xCB 0xBE SWAP7 0xDD 0x25 SHL 0x24 BASEFEE SWAP1 SELFDESTRUCT 0xD4 0xB6 SWAP6 DUP14 SWAP1 0xAA PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"2126:22032:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18806:39;2126:22032;18806:39;;;2126:22032;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;-1:-1:-1;;;;;266:35:20;2126:22032:19;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;414:28:20;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;:::i;:::-;1500:62:1;;:::i;:::-;-1:-1:-1;;;;;2126:22032:19;;;2627:22:1;;;2623:91;;2126:22032:19;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;3052:40:1;2126:22032:19;3052:40:1;;2126:22032:19;2623:91:1;2126:22032:19;;-1:-1:-1;;;2672:31:1;;2126:22032:19;;2672:31:1;;2126:22032:19;;;2672:31:1;2126:22032:19;;;;;;;:::i;:::-;2322:103:11;;;;:::i;:::-;2126:22032:19;;4812:22;;;6148:10;;2126:22032;;;;4812:22;;;;;;:::i;:::-;2126:22032;4802:33;;6148:10;2126:22032;;4854:10;4812:22;2126:22032;-1:-1:-1;;;;;2126:22032:19;;;;;4846:39;4842:316;;2126:22032;6148:10;;2126:22032;;4854:10;4812:22;2126:22032;-1:-1:-1;;;;;2126:22032:19;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;2126:22032:19;;4812:22;2126:22032;;;;6249:23;;;;;;6361:34;;;;;;2126:22032;;;;;;;;;6361:34;;2126:22032;;;;;;6361:34;;2126:22032;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;-1:-1:-1;;2126:22032:19;;;;;;;;4812:22;2126:22032;;;;;;;;;6361:34;;;;2126:22032;6361:34;;;;;;;;;;;;;2126:22032;6407:13;2126:22032;6422:23;;;;;;2126:22032;2924:21:11;2126:22032:19;;6447:3;6474:15;;;;;;:::i;:::-;;:::i;:::-;2126:22032;;;;;;6520:74;;-1:-1:-1;;;;;2126:22032:19;;;6520:74;;2126:22032;2640:42;2126:22032;;;;6584:4;2126:22032;;;;4812:22;6520:14;2126:22032;6520:14;-1:-1:-1;;;;;6520:14:19;2126:22032;6520:74;;;;;;;2126:22032;6520:74;;;6447:3;2126:22032;;;;;;;6624:73;;-1:-1:-1;;;;;2126:22032:19;;;6624:73;;2126:22032;2640:42;2126:22032;;;;6688:3;2126:22032;;;;4812:22;6520:14;2126:22032;6520:14;-1:-1:-1;;;;;6520:14:19;2126:22032;6624:73;;;;;;;2126:22032;6624:73;;;6447:3;2126:22032;-1:-1:-1;;;;;2126:22032:19;6720:28;;;;:64;;;6447:3;6796:13;;;;;:::i;:::-;2126:22032;;;6796:26;;;6447:3;6792:78;;6447:3;6881:10;6877:136;;6447:3;2126:22032;6447:3;;2126:22032;6407:13;;6877:136;2126:22032;;-1:-1:-1;;;6918:38:19;;6950:4;2126:22032;6918:38;;2126:22032;;4812:22;2126:22032;;;-1:-1:-1;;;;;2126:22032:19;;6918:38;;;;;;;2126:22032;6918:38;;;6877:136;-1:-1:-1;2126:22032:19;;-1:-1:-1;;;6963:43:19;;6148:10;2126:22032;6963:43;;2126:22032;2625:58;;;2126:22032;;;;4812:22;;2126:22032;;;;-1:-1:-1;;;;;2126:22032:19;2625:58;;;6963:43;;2126:22032;;6963:43;;;;;;;2126:22032;6963:43;;;6877:136;;;;6963:43;;;4812:22;6963:43;4812:22;6963:43;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;2126:22032;;;;;;;;;6918:38;;;4812:22;6918:38;;4812:22;6918:38;;;;;;4812:22;6918:38;;;:::i;:::-;;;2126:22032;;;;;;;6963:43;6918:38;;;;;-1:-1:-1;6918:38:19;;6792:78;8409:50:12;-1:-1:-1;;;;;2126:22032:19;;8409:50:12;:::i;:::-;;6792:78:19;;6796:26;;;;;6720:64;-1:-1:-1;;;;;2126:22032:19;;;6757:27;;6720:64;;;6624:73;-1:-1:-1;;;;;6624:73:19;;;;;4812:22;6624:73;4812:22;6624:73;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;6520:74;;;;4812:22;6520:74;4812:22;6520:74;;;;;;;:::i;:::-;;;;6361:34;2126:22032;;;;;;;6361:34;;;2126:22032;;;;;;;;;;;;;;;;;4812:22;2126:22032;;-1:-1:-1;;;;;2126:22032:19;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;:::i;:::-;;;;4812:22;2126:22032;;;4812:22;2126:22032;;;;;;;;;;;;;;;;;;;;4812:22;2126:22032;;;;;;;;;;;;;;;;;;;;4812:22;2126:22032;;;;;;;;;;;;;;;;;;;;;;;;;;;;4448:23;;2126:22032;;;;;;;;;;;;;;;;;;6274:3;6333:15;-1:-1:-1;;;;;6333:15:19;;2126:22032;6333:15;;;;:::i;:::-;2126:22032;;;4360:14:12;4812:22:19;2126:22032;;;;;4360:26:12;6285:64:19;;;;:::i;:::-;2126:22032;;6234:13;;4842:316;2126:22032;;4913:66;;;;;;;;;;;;;;;;;;;;;6148:10;2126:22032;;4968:4;2126:22032;;;;;;;;4913:66;;;2126:22032;4913:66;;;;;-1:-1:-1;;;;;2126:22032:19;;5279:46;;2126:22032;5336:8;2126:22032;;6148:10;2126:22032;;;;4854:10;4812:22;2126:22032;;;;;;;;;;-1:-1:-1;;;;;;2126:22032:19;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;;;;5118:34;;2126:22032;5118:34;4842:316;;;2126:22032;;;-1:-1:-1;;;2126:22032:19;;4812:22;2126:22032;;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;2126:22032:19;;;;;3952:11:4;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:103:11;;;:::i;:::-;8831:43:19;8839:14;;;8831:43;:::i;:::-;2126:22032;;-1:-1:-1;;;;;9492:14:19;;2126:22032;9578:13;;;2126:22032;8881:1061;8918:3;8901:6;2126:22032;8897:19;;;;;5016:18:12;;;;;:::i;:::-;2126:22032:19;;;;;;;;;;;;;;;;;9032:38;;9064:4;2126:22032;9032:38;;2126:22032;;9032:38;;;;;;;;;;;;;2126:22032;9032:38;;;8918:3;9082:21;;;9078:44;;9064:4;9132:22;;9128:36;;2126:22032;;-1:-1:-1;;;9191:32:19;;2126:22032;9191:32;2126:22032;;;9191:32;;;;;;;;2126:22032;9191:32;;9255:100;9191:32;2126:22032;9191:32;;;8918:3;2126:22032;;9255:100;;:::i;:::-;2532:42;-1:-1:-1;;;;;;;;;;;9367:22:19;;;;9363:107;;-1:-1:-1;2126:22032:19;;-1:-1:-1;;;9492:50:19;;2126:22032;9492:50;;2126:22032;;;;;;;9537:4;2126:22032;;;;9492:50;2126:22032;;;9492:50;;;;;;;;2126:22032;9492:50;;;2126:22032;9492:50;;;8918:3;9594:15;;;;;;:::i;:::-;2126:22032;9622:18;2126:22032;;9649:61;9699:10;;9649:61;;:::i;:::-;;9618:319;2126:22032;8886:9;;9618:319;9753:118;9854:10;9878:52;9854:10;;9753:118;;:::i;:::-;9886:16;;9878:52;:::i;:::-;9618:319;;9492:50;;;;;;;;;;;;;;:::i;:::-;;;;9363:107;2126:22032;;-1:-1:-1;;;9398:50:19;;9420:10;2126:22032;9398:50;;2126:22032;2625:58;;;2126:22032;;;;;;-1:-1:-1;2126:22032:19;;-1:-1:-1;2625:58:19;;2126:22032;;-1:-1:-1;;9398:50:19;;;;;;;2126:22032;9398:50;;;9363:107;9455:8;;;9398:50;;;;;;;;;;;;;:::i;:::-;;;;;9191:32;;;;;;;-1:-1:-1;9191:32:19;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;9128:36;9156:8;;;2126:22032;9156:8;;;;9032:38;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;9032:38;;;;;;;;;8897:19;9987:28;;8897:19;9964:10;9952;;9964;:::i;:::-;2126:22032;;;9952:10;2126:22032;;2625:58;;;2126:22032;;;;;;;;2625:58;;;;9987:28;;;;2126:22032;2924:21:11;2126:22032:19;;;;;;;;-1:-1:-1;;2126:22032:19;;;;-1:-1:-1;;;;;2126:22032:19;;:::i;:::-;;;;307:50:20;2126:22032:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;2263:28;2126:22032;;;;;;;;;;;;;;;;;;;;;;1333:10:20;;2126:22032:19;;1384:13:20;2126:22032:19;1384:17:20;2126:22032:19;;;;-1:-1:-1;;;1450:59:20;;1475:10;2126:22032:19;1450:59:20;;2126:22032:19;1495:4:20;2126:22032:19;;;;;;;;;;;;;;;-1:-1:-1;1450:11:20;-1:-1:-1;;;;;2126:22032:19;1450:59:20;;;;;;;1532:6;1450:59;;;2126:22032:19;1532:6:20;;;:::i;:::-;2126:22032:19;1450:59:20;;;;;;-1:-1:-1;1450:59:20;;;;;;:::i;:::-;;;;;;2126:22032:19;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;3754:5:4;2126:22032:19;;:::i;:::-;;;735:10:10;;3754:5:4;:::i;:::-;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;2322:103:11;;;:::i;:::-;2374:10:20;;;:::i;:::-;;2126:22032:19;;2390:15:20;2126:22032:19;;;;;2390:37:20;2126:22032:19;;;2390:37:20;:::i;:::-;2126:22032:19;;2432:23:20;2126:22032:19;2432:23:20;2126:22032:19;2432:23:20;:::i;:::-;;2126:22032:19;2374:10:20;2126:22032:19;;;;2460:14:20;2126:22032:19;;;;;;;2489:15:20;2126:22032:19;;;-1:-1:-1;;;2509:60:20;;2126:22032:19;2509:60:20;;2126:22032:19;;;;2555:4:20;2126:22032:19;;;;;;;;;;;;;;;;;2509:60:20;:12;2126:22032:19;-1:-1:-1;;;;;2509:12:20;2126:22032:19;2509:60:20;;;;;;;2579:26;2509:60;;;2126:22032:19;;;;;;;2374:10:20;2579:26;;2126:22032:19;2924:21:11;2126:22032:19;;2509:60:20;;;;;;;;;;;;;:::i;:::-;;;;;2126:22032:19;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;2355:7:4;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2355:7:4;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;;;2355:7:4;2126:22032:19;;;;;-1:-1:-1;2126:22032:19;;-1:-1:-1;2126:22032:19;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;-1:-1:-1;;;;;2911:116:19;2126:22032;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;2066:44:20;2126:22032:19;;:::i;:::-;-1:-1:-1;;;;;2126:22032:19;;;;2066:6:20;2126:22032:19;;2084:26:20;2126:22032:19;;;;2084:26:20;;:::i;:::-;2066:44;;:::i;:::-;2126:22032:19;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;2304:32;2126:22032;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;-1:-1:-1;;;;;2126:22032:19;;:::i;:::-;;;;3086:50;2126:22032;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;-1:-1:-1;;;;;2687:88:19;2126:22032;;;;;;;;;;;;;;;;;;;2322:103:11;;:::i;:::-;10551:35:19;10550:58;10462:17;;:::i;:::-;3222:12:4;2126:22032:19;10551:35;;;;;:::i;:::-;10550:58;:::i;:::-;2126:22032;;-1:-1:-1;;;10631:34:19;;10654:10;2126:22032;10631:34;;2126:22032;-1:-1:-1;;;;;;;;;;;2532:42:19;2126:22032;10631:34;2126:22032;;;2532:42;10631:34;;;;;;;2126:22032;10631:34;;;2126:22032;10678:18;10670:65;10774:4;10678:18;;;;10670:65;:::i;:::-;2126:22032;10748:30;;;2126:22032;;;;-1:-1:-1;;;10836:41:19;;10654:10;2126:22032;10836:41;;2126:22032;10871:4;2126:22032;;;;10871:4;2126:22032;;;10836:41;;;;;;;;;2126:22032;10836:41;;;2126:22032;10882:68;10890:30;;;;10882:68;:::i;:::-;2126:22032;;-1:-1:-1;;;1829:53:8;;;;;;10654:10:19;2126:22032;1829:53:8;;2126:22032:19;10871:4;2126:22032;;;;;;;;;;;;1829:53:8;;;-1:-1:-1;;;;;;;1829:53:8;;2126:22032:19;;1829:53:8;:::i;:::-;3462:31:9;;;;;;;2126:22032:19;;;;;;;;;;;3510:55:9;2126:22032:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3510:55:9;:::i;:::-;2126:22032:19;;4551:22:8;;;;;:57;;;;2126:22032:19;4547:135:8;;;;;2126:22032:19;11135:32;10148:52;10160:9;2126:22032;10149:34;10160:22;10173:8;2126:22032;10160:22;;:::i;:::-;10149:34;;:::i;10148:52::-;11135:32;;;:::i;:::-;10871:4;11195:18;10871:4;;11195:18;:::i;:::-;2126:22032;;;10871:4;2126:22032;;2625:58;;;2126:22032;;;11224:39;;11391:32;;11224:39;;;;2126:22032;11224:39;11274:13;2126:22032;11270:72;;2126:22032;11366:14;10654:10;;11366:14;:::i;11391:32::-;;;;2126:22032;2924:21:11;2126:22032:19;;;;;;;11270:72;11317:18;;;:::i;:::-;11270:72;;4547:135:8;2126:22032:19;;;;4631:40:8;;;;;;2126:22032:19;4631:40:8;;2126:22032:19;4631:40:8;4551:57;4578:30;;-1:-1:-1;4578:30:8;;;;;;;:::i;:::-;4577:31;4551:57;;;;;2126:22032:19;;3510:55:9;2126:22032:19;;;3510:55:9;:::i;10836:41:19:-;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;10882:68;2126:22032;;10836:41;;;;;;;2126:22032;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;10631:34;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;;;10670:65;10631:34;;;;;;;2126:22032;;;;;;-1:-1:-1;;2126:22032:19;;;;5952:27;2126:22032;;;1500:62:1;;:::i;:::-;2126:22032:19;5914:28;2126:22032;;;;;;5952:27;2126:22032;;;;;;;-1:-1:-1;;2126:22032:19;;;;;-1:-1:-1;;;;;2126:22032:19;;;:::i;:::-;;;;3033:49;2126:22032;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;-1:-1:-1;;;;;2804:103:19;2126:22032;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;-1:-1:-1;;;;;226:36:20;2126:22032:19;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;13434:34;3222:12:4;2126:22032:19;13320:55;13328:15;;;13320:55;:::i;:::-;13435:18;13400:17;;:::i;:::-;2126:22032;;13435:18;:::i;2126:22032::-;;;;;;-1:-1:-1;;2126:22032:19;;;;1500:62:1;;:::i;:::-;2126:22032:19;;;-1:-1:-1;;;;;;2126:22032:19;;;;-1:-1:-1;;;;;2126:22032:19;3052:40:1;2126:22032:19;;3052:40:1;2126:22032:19;;;;;;;-1:-1:-1;;2126:22032:19;;;;-1:-1:-1;;;;;2126:22032:19;;:::i;:::-;;;;3390:9:4;2126:22032:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;-1:-1:-1;;;;;2126:22032:19;;:::i;:::-;;;;361:49:20;2126:22032:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;2340:38;2126:22032;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;4323:6;2126:22032;;;;;;;;;;4323:6;2126:22032;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;;:::i;:::-;2322:103:11;;;:::i;:::-;11765:58:19;11605:17;;:::i;:::-;11766:35;3222:12:4;2126:22032:19;11678:18;11670:65;11678:18;;;11670:65;:::i;:::-;11766:35;;:::i;11765:58::-;2126:22032;;-1:-1:-1;;;11847:40:19;;;2126:22032;;;;-1:-1:-1;;;;;;;;;;;2532:42:19;2126:22032;;;;;2532:42;11847:40;;;;;;;2126:22032;11847:40;;;2126:22032;;-1:-1:-1;;;;;2126:22032:19;;;;;;11909:32;;;;;2126:22032;11909:32;;;;;;;;;2126:22032;11909:32;;;2126:22032;;;;;;;;11968:50;;2126:22032;11968:50;;2126:22032;;;;;;;;;;;;;;;;;11968:6;2126:22032;11968:50;;;;;;;2126:22032;11968:50;;;2126:22032;12023:16;2126:22032;;;;;;12050:19;12046:363;2126:22032;;;12092:39;12111:19;;12104:27;12111:19;;12149;12111;;;:::i;:::-;12104:27;:::i;:::-;12092:39;;:::i;12149:19::-;12172:4;;2126:22032;;;;;;;;;;;;;;;12211:19;12193:38;12211:19;;12204:27;12211:19;;:::i;12193:38::-;2126:22032;;-1:-1:-1;;;12433:35:19;;12457:10;2126:22032;12433:35;;2126:22032;12433:35;2126:22032;12433:35;2126:22032;12433:35;;;;;;;;;2126:22032;12433:35;;;12046:363;12483:19;;2126:22032;;;;-1:-1:-1;;;12555:50:19;;12457:10;2126:22032;12555:50;;2126:22032;12599:4;2126:22032;;;;12599:4;2126:22032;;;12555:50;;;;;;;;;2126:22032;12555:50;;;12046:363;12612:57;12620:19;;;;12612:57;:::i;:::-;2126:22032;;;-1:-1:-1;;;1829:53:8;;;;;;12457:10:19;1829:53:8;;;2126:22032:19;;;12599:4;2126:22032;;;;;;;;;;;1829:53:8;;;;;;;;;-1:-1:-1;;;;;;;2126:22032:19;1829:53:8;;2126:22032:19;1829:53:8;2126:22032:19;1829:53:8;:::i;:::-;3462:31:9;;;;;;2126:22032:19;;;;;;;;;;;3510:55:9;2126:22032:19;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3510:55:9;;:::i;:::-;2126:22032:19;;4551:22:8;;;;;:57;;;;2126:22032:19;4547:135:8;;;;;2126:22032:19;;12852:32;10148:52;10160:9;2126:22032;10149:34;10160:22;10173:8;2126:22032;10160:22;;:::i;12852:32::-;12912:18;12599:4;;12912:18;:::i;:::-;2126:22032;;;12599:4;2126:22032;;2625:58;;;2126:22032;;;12941:39;;2126:22032;12941:39;;;12991:13;2126:22032;12987:72;;2126:22032;12457:10;13083:14;12457:10;;13083:14;:::i;:::-;2126:22032;;;12457:10;2126:22032;;2625:58;;;2126:22032;;;;;;2625:58;;13108:32;2625:58;12987:72;13034:18;;;:::i;:::-;12987:72;;;4547:135:8;2126:22032:19;;4631:40:8;;;;;;2126:22032:19;4631:40:8;;2126:22032:19;4631:40:8;4551:57;4578:30;;-1:-1:-1;4578:30:8;;;;;;;:::i;:::-;4577:31;4551:57;;;;;2126:22032:19;;;;;;;;;;;;;3510:55:9;2126:22032:19;;;;;;12555:50;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;12612:57;2126:22032;;12555:50;;;;;;;2126:22032;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;12433:35;;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;;;12433:35;;;;;;;;2126:22032;;;;;;;;;;;;12046:363;12264:39;12283:19;;12276:27;12283:19;;12321;12283;;:::i;12276:27::-;12264:39;;:::i;12321:19::-;12344:4;;2126:22032;;;;;;;;;;;;;;;12383:19;12365:38;12383:19;;12376:27;12383:19;;:::i;12365:38::-;12046:363;;11968:50;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;11968:50;;;;;;;;;11909:32;;;;;;;;;;;;;;;:::i;:::-;;;;;11847:40;;;;;;;;;;;;;;:::i;:::-;;;;2126:22032;;;;;;-1:-1:-1;;2126:22032:19;;;;2322:103:11;;:::i;:::-;3088:10:20;;;:::i;:::-;;2126:22032:19;;;3121:6:20;2126:22032:19;;;;;;3144:42:20;3152:10;;;3144:42;:::i;:::-;3088:10;2126:22032:19;;;;3121:6:20;2126:22032:19;;;;;;;;;;-1:-1:-1;;;3218:40:20;;2126:22032:19;3218:40:20;;2126:22032:19;;;;2625:58;;;2126:22032;;;;;;;2625:58;;2126:22032;;3218:11:20;-1:-1:-1;;;;;2126:22032:19;3218:40:20;;;;;;;;2126:22032:19;;;;;;;3268:33:20;3088:10;;3268:33;;1713:1:11;2924:21;2126:22032:19;;;;;;;3218:40:20;;;;;;;;;;;;;:::i;:::-;;;;;2126:22032:19;;;;;;;;;;;;;;;2322:103:11;;;:::i;:::-;8122:10:19;2126:22032;;;;;;;8104:64;2126:22032;;;;;8112:35;;8104:64;:::i;:::-;2126:22032;8180:9;2126:22032;;;8713:28;;8122:10;8692;8122;;8692;:::i;8212:3::-;8195:6;2126:22032;8191:19;;;;;5016:18:12;;;-1:-1:-1;;;;;5016:18:12;;:::i;:::-;2126:22032:19;;;;;;;;;;;;;;;;;8326:38;;8358:4;2126:22032;8326:38;;2126:22032;8326:38;;2126:22032;8326:38;;;;;;;;;2126:22032;8326:38;;;8212:3;8376:22;;;;:48;;;;8212:3;8372:62;;-1:-1:-1;2126:22032:19;;-1:-1:-1;;;8461:32:19;;2126:22032;8461:32;2126:22032;;;;8461:32;;;;;;;2126:22032;8461:32;;8623:41;8461:32;2126:22032;8461:32;;8515:100;8461:32;;;;;2126:22032;;8515:100;;:::i;:::-;2126:22032;;-1:-1:-1;;;8623:41:19;;8122:10;2126:22032;8623:41;;2126:22032;2625:58;;;2126:22032;;;;;;;;;;;;2625:58;;;;;8623:41;;;;;;;;;;;;;;;;8212:3;;8180:9;2126:22032;8180:9;;;;8623:41;;;;;;;;;;;;;:::i;:::-;;;;;8461:32;;;;;;;;;;;;;;:::i;8372:62::-;8426:8;;;;;;;;8376:48;8358:4;;8402:22;;8376:48;;8326:38;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;8326:38;;;;;;;;8191:19;;;2126:22032;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;2254:3;2126:22032;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;3414:7:20;2126:22032:19;;:::i;:::-;;;:::i;:::-;3414:7:20;;:::i;2126:22032:19:-;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;3075:2:4;2126:22032:19;;;;;;;;;;;;;;;;;;:::i;:::-;2322:103:11;;:::i;:::-;2126:22032:19;;-1:-1:-1;;;7116:38:19;;7148:4;2126:22032;7116:38;;2126:22032;-1:-1:-1;;;;;2126:22032:19;;;7116:38;2126:22032;;;;7116:38;;;;;;;2126:22032;7116:38;;;2126:22032;;;;;;;;7174:50;;2126:22032;7174:50;;2126:22032;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;;7219:4;2126:22032;;;;7174:14;;2126:22032;7174:14;;;2126:22032;7174:50;;;;;;;2126:22032;7174:50;;;2126:22032;7259:13;7275:17;7259:13;;;2126:22032;7275:17;;:::i;:::-;2126:22032;7304:18;2126:22032;;7455:56;7148:4;7357:92;7148:4;;7357:92;;:::i;7455:56::-;8000:33;3414:7:20;7779:10:19;7148:4;3414:7:20;:::i;:::-;2126:22032:19;7959:31;;7855:5;7817:34;3222:12:4;2126:22032:19;7833:18;2126:22032;7817:34;;:::i;:::-;2126:22032;7888:10;7148:4;;7888:10;:::i;:::-;7148:4;2126:22032;;4059:15;2126:22032;;;;;4059:31;2126:22032;;;4059:31;:::i;:::-;2126:22032;;4095:24;2126:22032;4095:24;2126:22032;4095:24;:::i;:::-;;2126:22032;7779:10;2126:22032;;4124:14;2126:22032;;4153:15;2126:22032;;;;4095:24;2126:22032;4175:61;;7300:433;2126:22032;;;7148:4;2126:22032;;2625:58;;;2126:22032;;;;;;;;2625:58;;;;7959:31;;;;2126:22032;;;;;7779:10;8000:33;;1713:1:11;2924:21;2126:22032:19;;4175:61;4222:7;;;:::i;:::-;4175:61;;7300:433;7675:52;7148:4;7552:117;7148:4;;7552:117;;:::i;7675:52::-;7300:433;;7174:50;;;;;;;;;;;;;;:::i;:::-;;;;7116:38;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;7116:38;;;;;;;;;2126:22032;;;;;;;;;;;;;;;2322:103:11;;;:::i;:::-;2690:10:20;;;:::i;:::-;;2126:22032:19;;2731:15:20;2126:22032:19;;;;;;2771:24:20;;;2126:22032:19;;2866:23:20;;;;:::i;:::-;2690:10;2126:22032:19;;2731:15:20;2126:22032:19;;;;;;2894:23:20;2126:22032:19;2894:23:20;2126:22032:19;2894:23:20;:::i;:::-;;2126:22032:19;;;-1:-1:-1;;;2922:41:20;;2690:10;2126:22032:19;2922:41:20;;2126:22032:19;2625:58;;;2126:22032;;;;;;2625:58;2126:22032;-1:-1:-1;2922:12:20;-1:-1:-1;;;;;2126:22032:19;2922:41:20;;;;;;;2973:28;2922:41;;;2126:22032:19;;;;;;2690:10:20;2973:28;;2126:22032:19;2924:21:11;2126:22032:19;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18717:18;;;;18747:9;2126:22032;18758:17;;;;;;19018:28;;;;:::i;:::-;19088;;;;:::i;:::-;19158;;;;:::i;:::-;19229;;;;:::i;:::-;19264:30;2126:22032;19299:31;2126:22032;19445:25;2126:22032;19504:9;2126:22032;19499:1264;19515:17;;;;;;;;20874:49;;;;;;;20948:50;20874:49;;21186:65;20874:49;;21109:51;20874:49;;:::i;:::-;20948:50;;:::i;:::-;21109:51;;:::i;:::-;21186:65;;:::i;:::-;21263:9;2126:22032;21303:3;2126:22032;;21274:27;;;;;21318:20;;;;:::i;:::-;2126:22032;21314:971;;21303:3;2126:22032;;21263:9;;21314:971;21351:131;2126:22032;-1:-1:-1;;;;;21373:19:19;21366:27;;21373:19;;;;:::i;:::-;2126:22032;21366:27;;;:::i;:::-;2126:22032;21455:20;;;;:::i;:::-;2126:22032;;;-1:-1:-1;;;21351:131:19;;18834:10;2126:22032;21351:131;;2126:22032;21442:4;2126:22032;;;;;;;;;;;18806:39;;2126:22032;;18806:39;;2126:22032;;;;;;;;;;;;;;21351:131;;;;;;;;;;;21314:971;21549:19;21542:27;;21549:19;;;;:::i;:::-;2126:22032;21542:27;;;:::i;:::-;2126:22032;;-1:-1:-1;;;21504:106:19;;2126:22032;;;;21504:106;;2126:22032;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;;21599:4;2126:22032;;;;;;;;;21504:14;2126:22032;;21504:106;;;;;;;;;2126:22032;21504:106;;;2126:22032;21504:106;;;21314:971;21654:19;;21713:20;21654:19;;21647:27;21654:19;21647:27;21654:19;;:::i;:::-;2126:22032;21647:27;;;:::i;:::-;21713:20;;;;:::i;:::-;2126:22032;21691:13;;;2126:22032;21713:20;;:::i;:::-;2126:22032;21753:18;2126:22032;;21805:197;21832:27;;21839:19;;;;:::i;21832:27::-;21891:20;;;;:::i;:::-;2126:22032;;;21920:74;;18834:10;21920:74;21805:197;:::i;:::-;;21749:530;21314:971;;;;21920:74;21442:4;21920:74;21805:197;:::i;21749:530::-;22047:224;22076:27;;22083:19;;;;:::i;22076:27::-;22160:20;;;;:::i;:::-;2126:22032;;;22189:74;;18834:10;22189:74;22047:224;:::i;:::-;;21749:530;;22189:74;21442:4;22189:74;22047:224;:::i;21504:106::-;21647:27;21504:106;;;21647:27;21504:106;;21713:20;21504:106;;;21654:19;21504:106;;;-1:-1:-1;21504:106:19;;;;;;:::i;:::-;;;;;;;;;;;21351:131;;;;;;;;;;;;;:::i;:::-;;;;;21274:27;;;;;;2126:22032;22340:3;2126:22032;;22310:28;;;;;22355:21;;;;:::i;:::-;2126:22032;22351:1541;;22340:3;2126:22032;;22299:9;;22351:1541;22416:21;;;;:::i;:::-;2126:22032;19829:5;2126:22032;;;;;;;;;;;;;;;;22415:61;;;;:::i;:::-;2126:22032;;-1:-1:-1;;;22530:34:19;;;18834:10;2126:22032;22530:34;;2126:22032;;;18806:39;2126:22032;;;-1:-1:-1;;;;;;;;;;;22530:34:19;;;;;;;2126:22032;22530:34;;;22351:1541;22506:58;;;;:::i;:::-;22573:4;2126:22032;;;;;;22573:4;2126:22032;;;;;;;;22608:13;;;;:77;;;;22351:1541;22597:1289;;;22351:1541;22597:1289;22755:28;;22762:20;;;;:::i;:::-;2126:22032;22755:28;;;:::i;:::-;-1:-1:-1;;;;;2126:22032:19;;;;;;22716:111;;2126:22032;;22716:111;;2126:22032;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;;22815:4;2126:22032;;;;18806:39;22716:14;2126:22032;22716:14;-1:-1:-1;;;;;22716:14:19;2126:22032;22716:111;;;;;;;2126:22032;22716:111;;;22597:1289;22873:20;-1:-1:-1;;;;;22866:28:19;;22873:20;;;;:::i;:::-;2126:22032;22866:28;;;:::i;:::-;22912:13;22935:28;22912:13;;2126:22032;22935:21;;22573:4;22935:21;;;;:::i;:::-;2126:22032;;22935:28;;:::i;:::-;2126:22032;22985:18;2126:22032;;23096:20;;23038:150;23089:28;;23096:20;23296:51;23096:20;;;:::i;23089:28::-;22573:4;23128:21;;;;:::i;:::-;2126:22032;;23174:4;23038:150;;:::i;:::-;18806:39;10148:52;10160:9;2126:22032;10149:34;10160:22;10173:8;2126:22032;10160:22;;:::i;10148:52::-;2126:22032;;-1:-1:-1;;;23296:51:19;;18834:10;2126:22032;23296:51;;2126:22032;2625:58;;;2126:22032;;;;;;;;;2625:58;;;;;23296:51;;;2126:22032;-1:-1:-1;;;;;;;;;;;23296:51:19;;;;;;;2126:22032;23296:51;23358:81;23296:51;;;22981:898;23375:20;;;23358:81;:::i;:::-;22597:1289;;22351:1541;;23296:51;;;18806:39;23296:51;18806:39;23296:51;;;;;;;:::i;:::-;;;;;22981:898;18806:39;-1:-1:-1;;;;;23565:28:19;;23572:20;;;;:::i;:::-;2126:22032;23565:28;;;:::i;:::-;23604:21;2126:22032;;22573:4;23604:21;;;;:::i;:::-;2126:22032;;;-1:-1:-1;;;17951:105:19;;;2126:22032;-1:-1:-1;;;2126:22032:19;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;17951:105;;;2126:22032;;;17951:105;2126:22032;17951:105;:::i;:::-;2126:22032;;;;;;:::i;:::-;;;17904:281;;;23650:4;;2126:22032;;;17904:281;;18108:15;;2126:22032;;17904:281;;2126:22032;;;17904:281;;;2126:22032;;;;;;;;;;;;;;;;18197:32;;;2126:22032;18197:32;;2126:22032;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18197:32;;;;;;;;;2126:22032;18197:32;;;22981:898;2126:22032;23768:51;18806:39;10148:52;10160:9;2126:22032;10149:34;10160:22;10173:8;2126:22032;10160:22;;:::i;:::-;10149:34;;:::i;10148:52::-;2126:22032;;-1:-1:-1;;;23768:51:19;;18834:10;2126:22032;23768:51;;2126:22032;2625:58;;;2126:22032;;;;;;;;;2625:58;;;;;23768:51;;;2126:22032;-1:-1:-1;;;;;;;;;;;23768:51:19;;;;;;;;22981:898;23838:16;;2625:58;;2126:22032;22981:898;;;2625:58;2126:22032;;-1:-1:-1;;;2625:58:19;;18806:39;2126:22032;2625:58;;;;2126:22032;2625:58;;2126:22032;-1:-1:-1;;;2126:22032:19;;;2625:58;2126:22032;;2625:58;23768:51;;;18806:39;23768:51;18806:39;23768:51;;;;;;;:::i;:::-;;;;;18197:32;;;18806:39;18197:32;;18806:39;18197:32;;;;;;18806:39;18197:32;;;:::i;:::-;;;2126:22032;;;;;18197:32;;;;;;-1:-1:-1;18197:32:19;;22716:111;;;;18806:39;22716:111;18806:39;22716:111;;;;;;;:::i;:::-;;;;22608:77;2126:22032;;;;;22644:34;;;18834:10;2126:22032;22644:34;;2126:22032;18806:39;22644:34;2126:22032;22644:34;-1:-1:-1;;;;;;;;;;;22644:34:19;;;;;;;2126:22032;22644:34;;;22608:77;2126:22032;22573:4;2126:22032;;;;;;22573:4;2126:22032;;;;;;;22631:54;;22608:77;;;;2126:22032;;;;;;;;;;;;22644:34;;;;18806:39;22644:34;;18806:39;22644:34;;;;;;18806:39;22644:34;;;:::i;:::-;;;2126:22032;;;;;22644:34;;;;;;;-1:-1:-1;22644:34:19;;22530;;;18806:39;22530:34;;18806:39;22530:34;;;;;;18806:39;22530:34;;;:::i;:::-;;;2126:22032;;;;22506:58;2126:22032;;22530:34;;;;;;-1:-1:-1;22530:34:19;;19534:3;-1:-1:-1;;;;;19570:9:19;;;2126:22032;19570:9;;;;;;18806:39;19570:9;;:::i;:::-;2126:22032;;;;;;;;;;19563:39;;18834:10;2126:22032;19563:39;;2126:22032;19563:39;;;;;;;;;;2126:22032;19563:39;;;19534:3;19642:9;;;2126:22032;19642:9;18806:39;19642:9;-1:-1:-1;;;;;19642:9:19;;:::i;:::-;2126:22032;;;;;;;;;;19627:36;;;;;;;;;;;;;;;;;;;2126:22032;19627:36;;;19534:3;19741:9;;;20066:14;2126:22032;19809:41;19777:10;19741:9;20087;19741;19696:60;20031:71;19741:9;;;;;;;20087;19741;;:::i;:::-;19696:60;;:::i;:::-;19777:10;;:::i;:::-;2126:22032;19829:5;;2126:22032;;;19809:41;:::i;:::-;19869:28;;;;;19923:86;;;;19941:30;;;;:::i;:::-;19923:86;;2126:22032;20066:14;:::i;:::-;20087:9;;:::i;20031:71::-;20108:650;;;;20151:32;;;;:::i;:::-;2126:22032;20241:4;;2126:22032;;;;;;;;;;;;;;;20220:37;20315:60;20220:37;;2126:22032;20220:37;20382:24;20220:37;;:::i;:::-;20264:44;;;;;;:::i;:::-;2126:22032;20315:60;:::i;:::-;2126:22032;20382:24;:::i;:::-;20108:650;;2126:22032;19504:9;;;;;20108:650;20443:38;;;;;;;;;;;:::i;:::-;20604:46;;;;;;:::i;:::-;2126:22032;20657:62;;;;:::i;:::-;2126:22032;20726:25;;;:::i;:::-;20108:650;2126:22032;20108:650;;;19923:86;19979:30;;;:::i;:::-;19923:86;;;19627:36;;;;;;;;;;;;18806:39;19627:36;18806:39;19627:36;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19563:39;;;;;;18806;19563;;18806;19563;;;;;;18806;19563;;;:::i;:::-;;;2126:22032;;;;;;;;-1:-1:-1;2126:22032:19;;19642:9;19563:39;;;;;-1:-1:-1;19563:39:19;;18777:3;18813:9;;;-1:-1:-1;;;;;18813:9:19;;;;;;:::i;:::-;2126:22032;;;;;;;;18806:39;;18834:10;2126:22032;18806:39;;2126:22032;18806:39;2126:22032;18806:39;;;;;;;;;;;2126:22032;18806:39;;;18777:3;18921:9;;2126:22032;18921:9;18876:60;18942:28;18921:9;;;;;;;:::i;18942:28::-;18747:9;;;2126:22032;18747:9;;18806:39;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;;18876:60;18806:39;;;;;;;2126:22032;;;;;;-1:-1:-1;;2126:22032:19;;;;;14850:17;;:::i;2126:22032::-;;;;;;;;;;;;;;;:::i;:::-;;;4448:23;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;;;4448:23;;;;;;:::i;:::-;2126:22032;4438:34;;2126:22032;;;;5441:20;2126:22032;;;5566:61;5524:30;;2126:22032;;;5524:30;2126:22032;5524:30;;;2126:22032;;:::i;:::-;5524:30;;;;;;;;;;2126:22032;;;-1:-1:-1;;;;;2126:22032:19;;;5593:33;;;2126:22032;;;5620:4;2126:22032;;;;5593:33;2126:22032;5593:33;;2126:22032;;;;5593:33;4448:23;;5593:33;;;;;;:::i;:::-;2126:22032;;5566:61;;;2126:22032;5566:61;;;2126:22032;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;5566:61;;;;;;;:::i;:::-;2126:22032;4627:19;;2126:22032;;4554:98;;;;2126:22032;;;;;;5620:4;2126:22032;;;;;;;;;;;;;;;4554:98;;;;;:::i;:::-;2126:22032;4539:118;;2126:22032;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;3952:11:4;2126:22032:19;;;;;735:10:10;2126:22032:19;;;;;;;;10848:17:4;;;10828:37;;10824:310;;2126:22032:19;5249:5:4;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:10;10159:21:4;10155:90;;5249:5;2126:22032:19;;;;;3952:11:4;2126:22032:19;;;;;735:10:10;2126:22032:19;;;;;;;;;10824:310:4;;;10155:90;2126:22032:19;;-1:-1:-1;;;10203:31:4;;2126:22032:19;;10203:31:4;;2126:22032:19;;;10203:31:4;10057:89;2126:22032:19;;-1:-1:-1;;;10103:32:4;;2126:22032:19;;10103:32:4;;2126:22032:19;;;10103:32:4;10881:130;2126:22032:19;;-1:-1:-1;;;10936:60:4;;735:10:10;2126:22032:19;10936:60:4;;2126:22032:19;;;;;;;;;;;;;;;10936:60:4;2126:22032:19;;;;;;-1:-1:-1;;2126:22032:19;;;;;3222:12:4;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;2322:103:11;;:::i;:::-;13434:34:19;3222:12:4;2126:22032:19;13320:55;13328:15;;;13320:55;:::i;:::-;13435:18;13400:17;;:::i;:::-;13435:18;:::i;13434:34::-;2126:22032;;-1:-1:-1;;;15512:84:19;;15547:4;2126:22032;15512:84;;2126:22032;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;;-1:-1:-1;2126:22032:19;;;;-1:-1:-1;;;;;2126:22032:19;15512:84;;;2126:22032;;;15512:6;2126:22032;;15512:84;;;;;;;2126:22032;15512:84;;;2126:22032;15547:4;;2126:22032;;3390:9:4;2126:22032:19;;;;;;;;;;;;;15678:37;;;;15547:4;2126:22032;15678:37;;2126:22032;-1:-1:-1;;;;;;;;;;;15678:37:19;;;2126:22032;15678:37;;;;;;;;;2126:22032;15678:37;;;2126:22032;15740:4;;2126:22032;;;;;;;;;;;;;;;;15726:30;;;;;;2126:22032;;;;;;;;;;;;;;;15786:48;;16289:66;15786:48;10326:4;15786:48;16116:97;15786:48;16273:9;15786:48;;:::i;:::-;2126:22032;15858:27;;;;15854:60;;15722:1439;15960:13;;2126:22032;15976:11;;;;:::i;:::-;16016:94;15547:4;;;16016:94;:::i;:::-;16130:24;;;;;;16116:97;:::i;:::-;15547:4;16273:9;:::i;:::-;15547:4;;;16289:66;:::i;:::-;;2126:22032;;;16375:37;;;;;;15547:4;2126:22032;16375:37;;2126:22032;16375:37;;;;;;;2126:22032;16375:37;;;15722:1439;16375:51;16361:104;16375:51;;;16361:104;:::i;:::-;3390:9:4;2924:21:11;2126:22032:19;;16375:37;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;16361:104;2126:22032;;16375:37;;;;;;;;15854:60;15887:27;-1:-1:-1;15854:60:19;;;15722:1439;16481:30;;;;;;;;;;;16477:684;;15722:1439;;;;;;;16477:684;16960:96;16759:100;16935:13;3390:9:4;16599:13:19;17062:93;16599:13;;2126:22032;16615:12;15547:4;;;16615:12;:::i;:::-;16658:95;15547:4;;;16658:95;:::i;:::-;16773:27;;;;;16759:100;:::i;:::-;16935:13;:::i;:::-;15547:4;;;16960:96;:::i;:::-;;15547:4;2126:22032;;;;;;;17076:40;17062:93;:::i;:::-;16477:684;;;;;;15678:37;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;15678:37;;;;;;;;;15512:84;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;15512:84;;;;;;;;2126:22032;;;;;;-1:-1:-1;;2126:22032:19;;;;;;:::i;:::-;;;735:10:10;;10061:19:4;10057:89;;-1:-1:-1;;;;;2126:22032:19;10159:21:4;;;10155:90;;735:10:10;2126:22032:19;;10254:11:4;2126:22032:19;;;;;;;;;;;;;;;;;;;;10333:31:4;2126:22032:19;735:10:10;10333:31:4;;2126:22032:19;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2126:22032:19;;;;5811:21;2126:22032;;;1500:62:1;;:::i;:::-;2126:22032:19;5783:18;2126:22032;;;;;;5811:21;2126:22032;;;;;;;-1:-1:-1;;2126:22032:19;;;;;13434:34;3222:12:4;2126:22032:19;13320:55;13328:15;;;13320:55;:::i;2126:22032::-;;;;;;;;-1:-1:-1;;2126:22032:19;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2126:22032:19;;;;:::o;:::-;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2126:22032:19;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;2126:22032:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;4448:23;;2126:22032;;;;;;;;;;;;;;;;:::o;:::-;;10326:4;2126:22032;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;4448:23;2126:22032;4448:23;;2126:22032;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;2126:22032:19;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;2126:22032:19;;;;;;;:::o;2625:58::-;;;;:::o;:::-;2126:22032;;-1:-1:-1;;;2625:58:19;;;;;;;;;;;2126:22032;2625:58;2126:22032;;;2625:58;;;;2322:103:11;;;;;:::i;:::-;3443:6:20;;;:::i;:::-;-1:-1:-1;;;;;2126:22032:19;;;;;;;;;;;3472:6:20;2126:22032:19;;;;;;3499:10:20;3491:42;3499:10;;;3491:42;:::i;:::-;2126:22032:19;;3472:6:20;2126:22032:19;;;;;;;;;;-1:-1:-1;;;3561:33:20;;-1:-1:-1;;;;;2126:22032:19;;3561:33:20;;;2126:22032:19;2625:58;;;2126:22032;;;;;2625:58;2126:22032;;3561:11:20;2126:22032:19;;3561:33:20;;;;;;3604:26;3561:33;;;;;;;2322:103:11;2126:22032:19;;;;;;;;3604:26:20;;2126:22032:19;1713:1:11;2924:21;2126:22032:19;2322:103:11:o;3561:33:20:-;;;;;;;;;;;;;:::i;:::-;;;;;;2126:22032:19;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;1796:162:1;-1:-1:-1;;;;;1710:6:1;2126:22032:19;;735:10:10;1855:23:1;1851:101;;1796:162::o;1851:101::-;2126:22032:19;;-1:-1:-1;;;1901:40:1;;735:10:10;1901:40:1;;;2126:22032:19;;;1901:40:1;2431:307:11;1755:1;2558:7;2126:22032:19;2558:18:11;2554:86;;1755:1;2558:7;2126:22032:19;2431:307:11:o;2554:86::-;2126:22032:19;;-1:-1:-1;;;2599:30:11;;;;;18239:360:19;2126:22032;;;-1:-1:-1;;;18399:40:19;;18424:4;18399:40;;;2126:22032;-1:-1:-1;;;;;2126:22032:19;;;;;;18399:40;;-1:-1:-1;;;;;;;;;;;18399:40:19;2126:22032;;;;18399:40;;;;;;;-1:-1:-1;18399:40:19;;;18239:360;18450:26;;;;18446:149;;18239:360;;;;;;;:::o;18446:149::-;18488:21;;18484:67;;18446:149;2126:22032;;-1:-1:-1;;;18558:31:19;;-1:-1:-1;;;;;2126:22032:19;;;18399:40;18558:31;;2126:22032;2625:58;;;2126:22032;;;;;;;-1:-1:-1;2126:22032:19;2625:58;;;18558:31;;;;;;;;;;;;;18446:149;;;;;;;18558:31;;;;;;-1:-1:-1;18558:31:19;;;;;;:::i;:::-;;;;;;;2126:22032;;-1:-1:-1;2126:22032:19;;;;;18484:67;2126:22032;;;;;;;;;18518:26;;-1:-1:-1;;;;;2126:22032:19;;18399:40;18518:26;;2126:22032;-1:-1:-1;2126:22032:19;;;;18518:26;;2126:22032;18518:26;-1:-1:-1;18518:26:19;;;;;;;;;;;18558:31;18518:26;;;;;18484:67;;;;;;18518:26;;;;;;;;;;;;;:::i;:::-;;;;;;2126:22032;;;-1:-1:-1;2126:22032:19;;;;;18399:40;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;18399:40;;;;;;;;;;2126:22032;;;;;;;;;18239:360;2126:22032;;;-1:-1:-1;;;18399:40:19;;18424:4;18399:40;;;2126:22032;-1:-1:-1;;;;;2126:22032:19;;;;;;;18399:40;;2126:22032;;;;;;18399:40;;2126:22032;;;18399:40;2126:22032;;;;18399:40;;;;;;;-1:-1:-1;18399:40:19;;;18239:360;18450:26;;;;18446:149;;18239:360;;;;;;;;:::o;18446:149::-;18488:21;;18484:67;;18446:149;2126:22032;;-1:-1:-1;;;18558:31:19;;-1:-1:-1;;;;;2126:22032:19;;;18399:40;18558:31;;2126:22032;2625:58;;;2126:22032;;;;;;-1:-1:-1;2126:22032:19;;;-1:-1:-1;2126:22032:19;2625:58;;;18558:31;;;;;;;;;;;;;18446:149;;;;;;;;18558:31;;;;;;-1:-1:-1;18558:31:19;;;;;;:::i;:::-;;;;;;18484:67;2126:22032;;;;;;;;;;;;18518:26;;2126:22032;;18399:40;18518:26;;2126:22032;-1:-1:-1;2126:22032:19;;;;18518:26;;2126:22032;18518:26;-1:-1:-1;18518:26:19;;;;;;;;;;;18558:31;18518:26;;;;;18484:67;;;;18518:26;;;;;;;;;;;;;:::i;:::-;;;;;18399:40;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;18399:40;;;;;;;;;17170:514;;2126:22032;;;;;:::i;:::-;-1:-1:-1;;;;;2126:22032:19;;;;;17370:257;;;;;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;17370:257;;2126:22032;17467:4;2126:22032;;17370:257;;;;2126:22032;;;;17370:257;;;17523:15;;2126:22032;;17370:257;;;2126:22032;;;17370:257;;;-1:-1:-1;;;2126:22032:19;;;;;;17370:257;;;;2126:22032;;;;;;;;;;;;;17641:38;;2126:22032;;17641:38;;;2126:22032;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17641:13;2126:22032;17641:38;;;2126:22032;17641:38;17370:257;17641:38;;;;;;;;;;;17634:45;;17170:514;:::o;17641:38::-;;;;17370:257;17641:38;;17370:257;17641:38;;;;;;17370:257;17641:38;;;:::i;:::-;;;2126:22032;;;;;;17170:514;:::o;2126:22032::-;;;17641:38;;;-1:-1:-1;17641:38:19;;;2126:22032;;;;;;;;;;17170:514;;2126:22032;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;2126:22032:19;;17370:257;;;2126:22032;-1:-1:-1;;;;;2126:22032:19;;;;;;;;;17370:257;;2126:22032;17467:4;2126:22032;;17370:257;;;;2126:22032;;;;17370:257;;;17523:15;;2126:22032;;17370:257;;;2126:22032;;;17370:257;;;-1:-1:-1;;;2126:22032:19;;;;;;17370:257;;;;2126:22032;;;;;;;;;;;;;17641:38;;2126:22032;;17641:38;;;2126:22032;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17641:13;2126:22032;17641:38;;;2126:22032;17641:38;17370:257;17641:38;;;;;;;;;;;17634:45;;17170:514;:::o;5656:300:4:-;;-1:-1:-1;;;;;2126:22032:19;;;5739:18:4;;;5735:86;;2126:22032:19;5834:16:4;;;5830:86;;6356:540;2126:22032:19;;;;6570:9:4;2126:22032:19;;;;;;6603:19:4;;;;6599:115;;2126:22032:19;;;;;7346:25:4;2126:22032:19;;;;;6570:9:4;2126:22032:19;;;;;;;;;;;;;;;;;;;;;;7346:25:4;5656:300::o;6599:115::-;2126:22032:19;;-1:-1:-1;;;6649:50:4;;-1:-1:-1;;;;;2126:22032:19;;;;6649:50:4;;;2126:22032:19;;;;;;;;;;;;;;;;10936:60:4;5830:86;2126:22032:19;;-1:-1:-1;;;5873:32:4;;5755:1;5873:32;;;2126:22032:19;;;5873:32:4;5735:86;2126:22032:19;;-1:-1:-1;;;5780:30:4;;5755:1;5780:30;;;2126:22032:19;;;5780:30:4;14877:387:19;2126:22032;;14983:6;2126:22032;14979:19;;;;;;15245:14;;14877:387;:::o;15000:3::-;5016:18:12;;-1:-1:-1;;;;;5016:18:12;;;:::i;:::-;2126:22032:19;;;;;;;;;;;;;15063:38;;15095:4;15063:38;;;2126:22032;15063:38;;;2126:22032;15063:38;;;;;;;;;;2126:22032;15063:38;;;15000:3;15139:56;;;;15201:32;15139:56;2126:22032;15139:56;;:::i;15201:32::-;15000:3;2126:22032;14968:9;;;15063:38;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;-1:-1:-1;2126:22032:19;15139:56;15201:32;15063:38;;;;;;;14170:605;2126:22032;;-1:-1:-1;;;14330:32:19;;;14170:605;;-1:-1:-1;;2126:22032:19;14330:32;;-1:-1:-1;;;;;2126:22032:19;;;;14330:32;2126:22032;14330:32;2126:22032;;14330:32;;;;;;;;;;;14170:605;2126:22032;;;14387:40;;;-1:-1:-1;;;;;;;;;;;14387:40:19;;14330:32;14387:40;;;;;;;;;;;;;14170:605;14438:22;;;14434:48;;2126:22032;;-1:-1:-1;;;14497:59:19;;-1:-1:-1;;;;;2126:22032:19;;;;14330:32;14497:59;;2126:22032;-1:-1:-1;;;;;;;;;;;2126:22032:19;;;;-1:-1:-1;2126:22032:19;;;;;;;;;;;;14505:6;2126:22032;14497:59;;;;;;;;14170:605;-1:-1:-1;;;14489:146:19;;14621:8;;;;-1:-1:-1;14621:8:19;:::o;14489:146::-;14748:4;14590:12;14710:15;14659:34;14666:26;14730:13;14590:12;14709:35;14590:12;14489:146;14666:26;:::i;14659:34::-;14710:15;;;:::i;:::-;14730:13;;:::i;14709:35::-;2126:22032;14170:605;:::o;14497:59::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;;14497:59;;;;;;;;;;;14434:48;14478:4;;;;;;2126:22032;;;;;;;;;;;;;;;14462:20;;:::o;2126:22032::-;-1:-1:-1;;;2126:22032:19;;;14330:32;2126:22032;;;;14387:40;;;;;;;;;;;;;;;:::i;:::-;;;;;14330:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;2126:22032;;;;;;;;;23922:233;;;24054:19;;;:::i;:::-;24083:9;-1:-1:-1;24094:8:19;;;;;;-1:-1:-1;24140:10:19;;-1:-1:-1;;23922:233:19:o;24104:3::-;24124:6;;2126:22032;24124:6;;;:::i;:::-;2126:22032;24115:15;;;;:::i;:::-;2126:22032;;24083:9;;17689:545;;;2126:22032;;17951:105;;2126:22032;;;;;;;;;17951:105;;;2126:22032;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;17951:105;;;;;;:::i;:::-;2126:22032;;;;;;:::i;:::-;;;17904:281;;;2126:22032;;-1:-1:-1;;;;;2126:22032:19;;;;;;;;17904:281;;18108:15;;2126:22032;;;17904:281;;2126:22032;;;17904:281;;;-1:-1:-1;;2126:22032:19;;;;;;;;;;;;;;;;;;18197:32;;;;;;2126:22032;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18197:32;:13;;2126:22032;18197:32;;;;;;;;;;;17689:545;18190:39;;;17689:545;:::o;18197:32::-;;;;;;;;;;;;;;;;;:::i;:::-;;;2126:22032;;;;;;18197:32;;;;;;;;;;;2126:22032;;;;;;;;;;;2120:176:20;-1:-1:-1;;;;;2193:26:20;;;:::i;:::-;2126:22032:19;;;;-1:-1:-1;2126:22032:19;2224:6:20;2126:22032:19;;2224:26:20;2126:22032:19;-1:-1:-1;2126:22032:19;;;;2224:26:20;:::i;:::-;2126:22032:19;;2280:11:20;2126:22032:19;;-1:-1:-1;2126:22032:19;2255:13:20;2126:22032:19;;;-1:-1:-1;2126:22032:19;;2120:176:20:o;7721:208:4:-;-1:-1:-1;;;;;2126:22032:19;7791:21:4;;;7787:91;;7346:25;2126:22032:19;;6496:21:4;6906:425;2126:22032:19;6496:21:4;2126:22032:19;6496:21:4;:::i;:::-;;2126:22032:19;;;;6360:18:4;2126:22032:19;;;;;;;;;;;;;;;;7346:25:4;7721:208::o;13478:687:19:-;;;13648:55;13656:15;;;13648:55;:::i;:::-;13733:2;13716:19;;2126:22032;;13733:2;13810:18;;13733:2;;;;2126:22032;;13733:2;2126:22032;;;;13918:42;14116:26;13933;;14115:45;13933:26;;:::i;14115:45::-;13478:687;:::o;13806:206::-;13978:28;14115:45;13978:28;14116:26;13978:28;13806:206;14116:26;:::i;2126:22032::-;;;-1:-1:-1;;;2126:22032:19;;;;;;;;;;;;;;;;;;;;8247:206:4;;;-1:-1:-1;;;;;2126:22032:19;;8317:21:4;;;8313:89;;2126:22032:19;6356:540:4;2126:22032:19;6570:9:4;2126:22032:19;;;6356:540:4;2126:22032:19;;6603:19:4;;;;6599:115;;2126:22032:19;;;7346:25:4;2126:22032:19;6356:540:4;2126:22032:19;;;;;6570:9:4;2126:22032:19;;;;;;;;7073:21:4;2126:22032:19;;7073:21:4;2126:22032:19;;;;;;7346:25:4;8247:206::o;6599:115::-;2126:22032:19;;-1:-1:-1;;;6649:50:4;;-1:-1:-1;;;;;2126:22032:19;;;;6649:50:4;;;2126:22032:19;;;;;;;;;;;;;;;;10936:60:4;1111:148:20;1172:13;2126:22032:19;1172:17:20;;1168:87;;1111:148;;:::o;1168:87::-;486:4;2126:22032:19;;;;;;;;;;;;;;;1197:52:20;1212:37;;;;:::i;:::-;1197:52;2126:22032:19;1197:52:20;:::i;:::-;;2126:22032:19;1111:148:20:o;1549:412::-;-1:-1:-1;;;;;2126:22032:19;486:4:20;1892:33;-1:-1:-1;2126:22032:19;;;1668:14:20;2126:22032:19;;1892:19:20;1650:41;2126:22032:19;;;;1650:15:20;:41;:::i;:::-;668:8;;;1709:27;;;668:8;;;1709:57;;;;2126:22032:19;;1788:15:20;2126:22032:19;;1839:36:20;2126:22032:19;;;;;;1839:11:20;2126:22032:19;;1853:13:20;2126:22032:19;;;;1839:36:20;;:::i;1892:19::-;:33;:::i;:::-;2126:22032:19;;1549:412:20;:::o;1709:57::-;;;;2126:22032:19;8195:6;2126:22032;;;;;;8195:6;-1:-1:-1;2126:22032:19;;;;-1:-1:-1;2126:22032:19;:::o;2241:406:12:-;-1:-1:-1;2126:22032:19;;;4360:14:12;2126:22032:19;;;;;;;;6325:6;2126:22032;;;;;;;4360:14:12;2126:22032:19;;;6325:6;2126:22032;;;;;;;;;;;;;6325:6;2126:22032;;;;4360:14:12;2126:22032:19;;;;4360:14:12;2576:11;:::o;2126:22032:19:-;-1:-1:-1;;;2126:22032:19;;;;;;;;;-1:-1:-1;;;2126:22032:19;;;;;;;;2320:321:12;2618:12;;;:::o;4625:582:9:-;;;;4797:8;;-1:-1:-1;2126:22032:19;;5874:21:9;:17;;6046:142;;;;;;5870:383;2126:22032:19;;-1:-1:-1;;;6225:17:9;;;;;4793:408;2126:22032:19;;;5045:22:9;:49;;;4793:408;5041:119;;5173:17;:::o;5041:119::-;2126:22032:19;;-1:-1:-1;;;5121:24:9;;-1:-1:-1;;;;;;;;;;;5121:24:9;;;2126:22032:19;;;5121:24:9;5045:49;5071:18;-1:-1:-1;;;;;;;;;;;5071:18:9;:23;5045:49;;4625:582;;4797:8;;-1:-1:-1;2126:22032:19;;5874:21:9;:17;;6046:142;;;;;;4793:408;2126:22032:19;;5045:22:9;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;2126:22032:19;;-1:-1:-1;;;5121:24:9;;-1:-1:-1;;;;;2126:22032:19;;;5121:24:9;;;2126:22032:19;;;5121:24:9;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"4284800","executionCost":"infinite","totalCost":"infinite"},"external":{"USDC()":"906","_BPS_BASE()":"2954","_BPS_FEE()":"3152","_BPS_LIQUIDATE_FEE()":"2690","_MAX_BPS_FEE()":"477","allowance(address,address)":"3517","approve(address,uint256)":"24366","balanceOf(address)":"2885","balanceStakedOf(address)":"3325","burn(uint256)":"infinite","burnTokensAndSwapToUSDC(uint256)":"infinite","calculateRewardsEarned(address)":"infinite","changeBpsFee(uint256)":"25453","changeBpsLiquidateFee(uint256)":"26047","claim()":"infinite","claimTo(address,address)":"infinite","decimals()":"433","execute((address,uint256,bytes)[],address[])":"infinite","getAgentAddress(address)":"infinite","getBpsFee()":"2382","getUSDCShareValue(uint256)":"infinite","getUnitPrice()":"infinite","liquidate(address)":"infinite","listAllTokens()":"infinite","mintERC20(uint256,address)":"infinite","mintUSDC(uint256)":"infinite","name()":"infinite","oracle()":"infinite","owner()":"3060","performArbitrage()":"infinite","rebalance(address[],uint256[])":"infinite","renounceOwnership()":"28552","rewardToken()":"infinite","stake(uint256)":"infinite","stakeTimestamp(address)":"2863","stakingSupply()":"3284","stakingToken()":"infinite","symbol()":"infinite","tokenBalanceMap(address)":"3083","totalSupply()":"2360","totalValuation()":"infinite","transfer(address,uint256)":"51610","transferFrom(address,address,uint256)":"75579","transferOwnership(address)":"29165","uniswapFactory()":"infinite","uniswapRouter()":"infinite","unstake(uint256)":"infinite","updateRewardIndexPublic(uint256)":"infinite","userAgents(address)":"3001"},"internal":{"_calculateBaluniToUsdc(uint256)":"infinite","_calculateTokenShare(uint256,uint256,uint256,uint256)":"infinite","_calculateTokenValuation(uint256,address)":"infinite","_resize(uint256[] memory,uint256)":"infinite","_stakeToContract(address,uint256)":"infinite","_totalValuation()":"infinite","calculateNetAmountAfterFee(uint256)":"infinite","getBytecode(address)":"infinite","getOrCreateAgent(address)":"infinite","isContract(address)":"infinite","multiHopSwap(address,address,address,uint256,address)":"infinite","secureApproval(address,address,uint256)":"infinite","singleSwap(address,address,uint256,address)":"infinite"}},"methodIdentifiers":{"USDC()":"89a30271","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_BPS_LIQUIDATE_FEE()":"65534d52","_MAX_BPS_FEE()":"34decfc9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceStakedOf(address)":"bf9c89bb","burn(uint256)":"42966c68","burnTokensAndSwapToUSDC(uint256)":"cde53358","calculateRewardsEarned(address)":"8b086764","changeBpsFee(uint256)":"06497cb9","changeBpsLiquidateFee(uint256)":"7b848914","claim()":"4e71d92d","claimTo(address,address)":"34a1ca89","decimals()":"313ce567","execute((address,uint256,bytes)[],address[])":"eedc3c50","getAgentAddress(address)":"27d54a92","getBpsFee()":"185fcffe","getUSDCShareValue(uint256)":"71ddcfb8","getUnitPrice()":"012a33aa","liquidate(address)":"2f865568","listAllTokens()":"5e7f8b76","mintERC20(uint256,address)":"50b1b34a","mintUSDC(uint256)":"7d9fc717","name()":"06fdde03","oracle()":"7dc0d1d0","owner()":"8da5cb5b","performArbitrage()":"12f399cf","rebalance(address[],uint256[])":"2be01190","renounceOwnership()":"715018a6","rewardToken()":"f7c618c1","stake(uint256)":"a694fc3a","stakeTimestamp(address)":"70259077","stakingSupply()":"f377e7cf","stakingToken()":"72f702f3","symbol()":"95d89b41","tokenBalanceMap(address)":"833d557f","totalSupply()":"18160ddd","totalValuation()":"295b9300","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7","unstake(uint256)":"2e17de78","updateRewardIndexPublic(uint256)":"ab86c69e","userAgents(address)":"7811a785"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"AgentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ChangeBpsFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ChangeLiquidateFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct BaluniAgent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_LIQUIDATE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceStakedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnTokensAndSwapToUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"calculateRewardsEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsLiquidateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BaluniAgent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBpsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listAllTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"mintERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performArbitrage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"}],\"name\":\"rebalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalanceMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"updateRewardIndexPublic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAgents\",\"outputs\":[{\"internalType\":\"contract BaluniAgent\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaluniRouter.sol\":\"BaluniRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/core/BaluniAgent.sol\":{\"content\":\"pragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\ninterface IRouter {\\r\\n\\tfunction getBpsFee() external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract BaluniAgent {\\r\\n\\tusing SafeERC20 for IERC20Metadata;\\r\\n\\tusing Address for address payable;\\r\\n\\r\\n\\taddress public owner;\\r\\n\\taddress private router;\\r\\n\\taddress internal constant _NATIVE =\\r\\n\\t\\t0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\r\\n\\tuint256 internal constant _DUST = 10;\\r\\n\\tuint256 internal constant _BPS_BASE = 10000;\\r\\n\\r\\n\\tstruct Call {\\r\\n\\t\\taddress to;\\r\\n\\t\\tuint256 value;\\r\\n\\t\\tbytes data;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Initializes a new instance of the Agent contract.\\r\\n\\t * @param _owner The address of the contract owner.\\r\\n\\t * @param _router The address of the router contract.\\r\\n\\t * @notice Only the router contract can deploy this contract.\\r\\n\\t */\\r\\n\\tconstructor(address _owner, address _router) {\\r\\n\\t\\trequire(msg.sender == _router, \\\"Only Router\\\");\\r\\n\\t\\towner = _owner;\\r\\n\\t\\trouter = _router;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyRouter() {\\r\\n\\t\\trequire(msg.sender == router, \\\"Callable only by the router\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Executes a batch of calls and performs token operations.\\r\\n\\t * @param calls An array of Call structs representing the calls to be executed.\\r\\n\\t * @param tokensReturn An array of token addresses to return after the batch call.\\r\\n\\t * @notice Only the router contract is allowed to execute this function.\\r\\n\\t */\\r\\n\\tfunction execute(\\r\\n\\t\\tCall[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external onlyRouter {\\r\\n\\t\\tfor (uint i = 0; i < calls.length; i++) {\\r\\n\\t\\t\\t(bool success, ) = calls[i].to.call{ value: calls[i].value }(\\r\\n\\t\\t\\t\\tcalls[i].data\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(success, \\\"Batch call failed\\\");\\r\\n\\t\\t}\\r\\n\\t\\t_chargeFees(tokensReturn);\\r\\n\\t\\t_returnTokens(tokensReturn);\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the address of the router contract.\\r\\n\\t * @return The address of the router contract.\\r\\n\\t */\\r\\n\\tfunction getRouter() public view returns (address) {\\r\\n\\t\\treturn router;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to charge fees for the tokens returned.\\r\\n\\t * @param tokensReturn The array of tokens to charge fees for.\\r\\n\\t */\\r\\n\\tfunction _chargeFees(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 bpsFee = IRouter(router).getBpsFee();\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t// Use the native balance for amount calculation as wrap will be executed later\\r\\n\\t\\t\\t\\tamount = (address(this).balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\t// send to router\\r\\n\\t\\t\\t\\tpayable(router).sendValue(amount);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\t\\tamount = (balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(router, amount);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to return tokens to the owner.\\r\\n\\t * @param tokensReturn The array of tokens to return.\\r\\n\\t */\\r\\n\\tfunction _returnTokens(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 tokensReturnLength = tokensReturn.length;\\r\\n\\t\\tif (tokensReturnLength > 0) {\\r\\n\\t\\t\\tfor (uint256 i; i < tokensReturnLength; ) {\\r\\n\\t\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t\\tif (address(this).balance > 0) {\\r\\n\\t\\t\\t\\t\\t\\tpayable(owner).sendValue(address(this).balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 balance = IERC20Metadata(token).balanceOf(\\r\\n\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tif (balance > _DUST) {\\r\\n\\t\\t\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(owner, balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tunchecked {\\r\\n\\t\\t\\t\\t\\t++i;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xb82df35b2eddfe85c4c4ee4a1ef7074ebb7571dd986bde80ca8348dcbaee1066\"},\"contracts/core/BaluniRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\r\\n\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\r\\n\\r\\nimport \\\"./BaluniAgent.sol\\\";\\r\\nimport \\\"./BaluniStake.sol\\\";\\r\\n\\r\\ninterface IOracle {\\r\\n\\tfunction getRate(\\r\\n\\t\\tIERC20 srcToken,\\r\\n\\t\\tIERC20 dstToken,\\r\\n\\t\\tbool useWrappers\\r\\n\\t) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\\r\\ncontract BaluniRouter is Ownable, ERC20, BaluniStake {\\r\\n\\tusing SafeERC20 for IERC20;\\r\\n\\r\\n\\tuint256 public constant _MAX_BPS_FEE = 500;\\r\\n\\r\\n\\tuint256 public _BPS_FEE = 30; // 0.3%.\\r\\n\\tuint256 public _BPS_BASE = 10000;\\r\\n\\tuint256 public _BPS_LIQUIDATE_FEE = 30; // 0.3%.\\r\\n\\r\\n\\tusing EnumerableSet for EnumerableSet.AddressSet;\\r\\n\\r\\n\\tEnumerableSet.AddressSet private tokens;\\r\\n\\r\\n\\tIERC20 public constant USDC =\\r\\n\\t\\tIERC20(0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174);\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\tIOracle public immutable oracle =\\r\\n\\t\\tIOracle(0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8); // 1inch Spot Aggregator\\r\\n\\tISwapRouter public immutable uniswapRouter =\\r\\n\\t\\tISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\\r\\n\\tIUniswapV3Factory public immutable uniswapFactory =\\r\\n\\t\\tIUniswapV3Factory(0x1F98431c8aD98523631AE4a59f267346ea31F984);\\r\\n\\r\\n\\tmapping(address => BaluniAgent) public userAgents;\\r\\n\\tmapping(address => uint256) public tokenBalanceMap;\\r\\n\\r\\n\\tevent AgentCreated(address user, address agent);\\r\\n\\tevent Execute(\\r\\n\\t\\taddress user,\\r\\n\\t\\tBaluniAgent.Call[] calls,\\r\\n\\t\\taddress[] tokensReturn\\r\\n\\t);\\r\\n\\tevent Burn(address user, uint256 value);\\r\\n\\tevent Mint(address user, uint256 value);\\r\\n\\tevent ChangeBpsFee(uint256 newFee);\\r\\n\\tevent ChangeLiquidateFee(uint256 newFee);\\r\\n\\r\\n\\tmodifier validTimestamp(uint256 _timestamp) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_timestamp <= block.timestamp,\\r\\n\\t\\t\\t\\\"Timestamp too far in the future\\\"\\r\\n\\t\\t);\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_timestamp >= block.timestamp - 1 days,\\r\\n\\t\\t\\t\\\"Timestamp too far in the past\\\"\\r\\n\\t\\t);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tconstructor()\\r\\n\\t\\tOwnable(msg.sender)\\r\\n\\t\\tERC20(\\\"Baluni\\\", \\\"BALUNI\\\")\\r\\n\\t\\tBaluniStake(address(this), address(this))\\r\\n\\t{\\r\\n\\t\\t_mint(address(this), 1 ether);\\r\\n\\t\\t_stakeToContract(address(this), 1 ether);\\r\\n\\t\\t_updateRewards(address(this));\\r\\n\\r\\n\\t\\tEnumerableSet.add(tokens, address(USDC));\\r\\n\\t}\\r\\n\\r\\n\\tfunction _stakeToContract(address _to, uint256 _amount) internal {\\r\\n\\t\\tbalanceStakedOf[_to] += _amount;\\r\\n\\t\\tstakingSupply += _amount;\\r\\n\\t\\tstakeTimestamp[msg.sender] = block.timestamp;\\r\\n\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\tupdateRewardIndex(_amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction listAllTokens() external view returns (address[] memory) {\\r\\n\\t\\treturn tokens.values();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getAgentAddress(address _user) public view returns (address) {\\r\\n\\t\\tbytes32 salt = keccak256(abi.encodePacked(_user));\\r\\n\\t\\tbytes memory bytecode = getBytecode(_user);\\r\\n\\t\\tbytes32 hash = keccak256(\\r\\n\\t\\t\\tabi.encodePacked(\\r\\n\\t\\t\\t\\tbytes1(0xff),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tsalt,\\r\\n\\t\\t\\t\\tkeccak256(bytecode)\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn address(uint160(uint256(hash)));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOrCreateAgent(address user) private returns (BaluniAgent) {\\r\\n\\t\\tbytes32 salt = keccak256(abi.encodePacked(user));\\r\\n\\r\\n\\t\\tif (address(userAgents[user]) == address(0)) {\\r\\n\\t\\t\\tBaluniAgent agent = new BaluniAgent{ salt: salt }(\\r\\n\\t\\t\\t\\tuser,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tisContract(address(agent)),\\r\\n\\t\\t\\t\\t\\\"Agent creation failed, not a contract\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tuserAgents[user] = agent;\\r\\n\\t\\t\\temit AgentCreated(user, address(agent));\\r\\n\\t\\t}\\r\\n\\t\\treturn userAgents[user];\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address _addr) private view returns (bool) {\\r\\n\\t\\tuint32 size;\\r\\n\\t\\tassembly {\\r\\n\\t\\t\\tsize := extcodesize(_addr)\\r\\n\\t\\t}\\r\\n\\t\\treturn size > 0;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getBytecode(address _owner) internal view returns (bytes memory) {\\r\\n\\t\\trequire(_owner != address(0), \\\"Owner address cannot be zero.\\\");\\r\\n\\t\\tbytes memory bytecode = type(BaluniAgent).creationCode;\\r\\n\\t\\treturn abi.encodePacked(bytecode, abi.encode(_owner, address(this)));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getBpsFee() external view returns (uint256) {\\r\\n\\t\\treturn _BPS_FEE;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeBpsFee(uint256 _newFee) external onlyOwner {\\r\\n\\t\\t_BPS_FEE = _newFee;\\r\\n\\t\\temit ChangeBpsFee(_newFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeBpsLiquidateFee(uint256 _newFee) external onlyOwner {\\r\\n\\t\\t_BPS_LIQUIDATE_FEE = _newFee;\\r\\n\\t\\temit ChangeLiquidateFee(_newFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction execute(\\r\\n\\t\\tBaluniAgent.Call[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external nonReentrant {\\r\\n\\t\\tBaluniAgent agent = getOrCreateAgent(msg.sender);\\r\\n\\t\\tbool[] memory isTokenNew = new bool[](tokensReturn.length);\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\tisTokenNew[i] = !EnumerableSet.contains(tokens, tokensReturn[i]);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tagent.execute(calls, tokensReturn);\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\taddress poolNative3000 = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t3000\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\taddress poolNative500 = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t500\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tbool poolExist = poolNative3000 != address(0) ||\\r\\n\\t\\t\\t\\tpoolNative500 != address(0);\\r\\n\\r\\n\\t\\t\\tif (isTokenNew[i] && poolExist) {\\r\\n\\t\\t\\t\\tEnumerableSet.add(tokens, token);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (!poolExist) {\\r\\n\\t\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\t\\tIERC20(token).transfer(msg.sender, balance);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction liquidate(address token) external nonReentrant {\\r\\n\\t\\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\taddress pool = uniswapFactory.getPool(token, address(USDC), 3000);\\r\\n\\t\\tsecureApproval(token, address(uniswapRouter), totalERC20Balance);\\r\\n\\r\\n\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\tuint256 singleSwapResult = singleSwap(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(singleSwapResult > 0, \\\"Swap Failed, Try Burn()\\\");\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(amountOutHop > 0, \\\"Swap Failed, Try Burn()\\\");\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 reward = claimTo(address(this), msg.sender);\\r\\n\\t\\tuint256 mintAmount = (totalSupply() * _BPS_LIQUIDATE_FEE) / 10000;\\r\\n\\r\\n\\t\\t_mint(address(this), mintAmount);\\r\\n\\t\\t_stakeToContract(address(this), mintAmount);\\r\\n\\r\\n\\t\\temit Mint(address(this), mintAmount);\\r\\n\\t\\temit RewardClaimed(msg.sender, reward);\\r\\n\\t}\\r\\n\\r\\n\\tfunction burn(uint256 burnAmount) external nonReentrant {\\r\\n\\t\\trequire(balanceOf(msg.sender) >= burnAmount, \\\"Insufficient BAL\\\");\\r\\n\\r\\n\\t\\tfor (uint256 i; i < tokens.length(); i++) {\\r\\n\\t\\t\\taddress token = tokens.at(i);\\r\\n\\t\\t\\tuint256 totalBaluni = totalSupply();\\r\\n\\t\\t\\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n\\t\\t\\tif (totalERC20Balance == 0 || token == address(this)) continue;\\r\\n\\r\\n\\t\\t\\tuint256 decimals = IERC20Metadata(token).decimals();\\r\\n\\t\\t\\tuint256 share = _calculateTokenShare(\\r\\n\\t\\t\\t\\ttotalBaluni,\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\tburnAmount,\\r\\n\\t\\t\\t\\tdecimals\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\tIERC20(token).transfer(msg.sender, share);\\r\\n\\t\\t}\\r\\n\\t\\t_burn(msg.sender, burnAmount);\\r\\n\\t\\temit Burn(msg.sender, burnAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction burnTokensAndSwapToUSDC(uint256 burnAmount) external nonReentrant {\\r\\n\\t\\trequire(burnAmount > 0, \\\"Insufficient BAL\\\");\\r\\n\\r\\n\\t\\tfor (uint256 i; i < tokens.length(); i++) {\\r\\n\\t\\t\\taddress token = tokens.at(i);\\r\\n\\t\\t\\tuint256 totalBaluni = totalSupply();\\r\\n\\t\\t\\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n\\t\\t\\tif (totalERC20Balance > 0 == false) continue;\\r\\n\\t\\t\\tif (token == address(this)) continue;\\r\\n\\r\\n\\t\\t\\tuint256 decimals = IERC20Metadata(token).decimals();\\r\\n\\t\\t\\tuint256 burnAmountToken = _calculateTokenShare(\\r\\n\\t\\t\\t\\ttotalBaluni,\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\tburnAmount,\\r\\n\\t\\t\\t\\tdecimals\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\tif (token == address(USDC)) {\\r\\n\\t\\t\\t\\tIERC20(USDC).transfer(msg.sender, burnAmountToken);\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress pool = uniswapFactory.getPool(token, address(USDC), 3000);\\r\\n\\t\\t\\tsecureApproval(token, address(uniswapRouter), burnAmountToken);\\r\\n\\r\\n\\t\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\t\\tsingleSwap(token, address(USDC), burnAmountToken, msg.sender);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\tburnAmountToken,\\r\\n\\t\\t\\t\\t\\tmsg.sender\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\trequire(amountOutHop > 0, \\\"Swap Failed, Try Burn()\\\");\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t_burn(msg.sender, burnAmount);\\r\\n\\r\\n\\t\\temit Burn(msg.sender, burnAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateNetAmountAfterFee(\\r\\n\\t\\tuint256 _amount\\r\\n\\t) internal view returns (uint256) {\\r\\n\\t\\tuint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) /\\r\\n\\t\\t\\t_BPS_BASE;\\r\\n\\t\\treturn amountInWithFee;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUnitPrice() public view returns (uint256) {\\r\\n\\t\\treturn _calculateBaluniToUsdc(1e18);\\r\\n\\t}\\r\\n\\r\\n\\tfunction mintUSDC(\\r\\n\\t\\tuint256 balAmountToMint\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\tuint256 totalUSDValuation = _totalValuation();\\r\\n\\t\\tuint256 totalBalSupply = totalSupply();\\r\\n\\t\\tuint256 usdcRequired = (balAmountToMint * totalUSDValuation) /\\r\\n\\t\\t\\ttotalBalSupply;\\r\\n\\t\\tuint256 balance = IERC20(USDC).balanceOf(msg.sender);\\r\\n\\t\\trequire(totalBalSupply > 0, \\\"Total BALUNI supply cannot be zero\\\");\\r\\n\\t\\trequire(balance >= usdcRequired / 1e12, \\\"USDC balance is insufficient\\\");\\r\\n\\r\\n\\t\\tuint256 allowed = USDC.allowance(msg.sender, address(this));\\r\\n\\t\\trequire(allowed >= usdcRequired / 1e12, \\\"Check the token allowance\\\");\\r\\n\\r\\n\\t\\tUSDC.safeTransferFrom(msg.sender, address(this), usdcRequired / 1e12);\\r\\n\\r\\n\\t\\tuint256 amountAfterFee = calculateNetAmountAfterFee(balAmountToMint);\\r\\n\\t\\tuint256 netBalAmountToMint = balAmountToMint - amountAfterFee;\\r\\n\\r\\n\\t\\t_mint(address(this), netBalAmountToMint);\\r\\n\\t\\temit Mint(address(this), netBalAmountToMint);\\r\\n\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\tupdateRewardIndex(netBalAmountToMint);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_mint(msg.sender, amountAfterFee);\\r\\n\\t\\temit Mint(msg.sender, amountAfterFee);\\r\\n\\r\\n\\t\\treturn netBalAmountToMint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mintERC20(\\r\\n\\t\\tuint256 balAmountToMint,\\r\\n\\t\\taddress asset\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\tuint256 totalUSDValuation = _totalValuation();\\r\\n\\t\\tuint256 totalBalSupply = totalSupply();\\r\\n\\t\\trequire(totalBalSupply > 0, \\\"Total BALUNI supply cannot be zero\\\");\\r\\n\\r\\n\\t\\tuint256 usdcRequired = (balAmountToMint * totalUSDValuation) /\\r\\n\\t\\t\\ttotalBalSupply;\\r\\n\\r\\n\\t\\tuint8 decimalA = IERC20Metadata(address(USDC)).decimals();\\r\\n\\t\\tuint8 decimalB = IERC20Metadata(asset).decimals();\\r\\n\\r\\n\\t\\tuint256 assetRate = oracle.getRate(IERC20(USDC), IERC20(asset), false);\\r\\n\\t\\tuint256 required;\\r\\n\\r\\n\\t\\tif (decimalB > decimalA) {\\r\\n\\t\\t\\tuint256 rate = assetRate / 10 ** (decimalB - decimalA);\\r\\n\\t\\t\\trequired = (usdcRequired / rate) * 1e18;\\r\\n\\t\\t\\trequired = required / 10 ** (decimalB - decimalA);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tuint256 rate = assetRate * 10 ** (decimalA - decimalB);\\r\\n\\t\\t\\trequired = (usdcRequired / rate) * 1e18;\\r\\n\\t\\t\\trequired = required / 10 ** (decimalA - decimalB);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 balance = IERC20(asset).balanceOf(msg.sender);\\r\\n\\r\\n\\t\\trequire(balance >= required, \\\"Balance is insufficient\\\");\\r\\n\\r\\n\\t\\tuint256 allowed = IERC20(asset).allowance(msg.sender, address(this));\\r\\n\\r\\n\\t\\trequire(allowed >= required, \\\"Check the token allowance\\\");\\r\\n\\r\\n\\t\\tIERC20(asset).safeTransferFrom(msg.sender, address(this), required);\\r\\n\\r\\n\\t\\tuint256 amountAfterFee = calculateNetAmountAfterFee(balAmountToMint);\\r\\n\\t\\tuint256 netBalAmountToMint = balAmountToMint - amountAfterFee;\\r\\n\\r\\n\\t\\t_mint(address(this), netBalAmountToMint);\\r\\n\\t\\temit Mint(address(this), netBalAmountToMint);\\r\\n\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\tupdateRewardIndex(netBalAmountToMint);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_mint(msg.sender, amountAfterFee);\\r\\n\\t\\temit Mint(msg.sender, amountAfterFee);\\r\\n\\r\\n\\t\\treturn amountAfterFee;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateBaluniToUsdc(\\r\\n\\t\\tuint256 amount\\r\\n\\t) internal view returns (uint256 shareUSDC) {\\r\\n\\t\\tuint256 totalBaluni = totalSupply();\\r\\n\\t\\trequire(totalBaluni > 0, \\\"Total supply cannot be zero\\\");\\r\\n\\t\\tuint256 totalUSDC = _totalValuation();\\r\\n\\t\\tshareUSDC = (amount * totalUSDC) / totalBaluni;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateTokenShare(\\r\\n\\t\\tuint256 totalBaluni,\\r\\n\\t\\tuint256 totalERC20Balance,\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\tuint256 tokenDecimals\\r\\n\\t) internal pure returns (uint256) {\\r\\n\\t\\trequire(totalBaluni > 0, \\\"Total supply cannot be zero\\\");\\r\\n\\t\\trequire(tokenDecimals <= 18, \\\"Token decimals should be <= 18\\\");\\r\\n\\r\\n\\t\\tuint256 baluniAdjusted;\\r\\n\\r\\n\\t\\tif (tokenDecimals < 18) {\\r\\n\\t\\t\\t// Adjust totalBaluni to the same scale as totalERC20Balance\\r\\n\\t\\t\\tbaluniAdjusted = totalBaluni * (10 ** (18 - tokenDecimals));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tbaluniAdjusted = totalBaluni;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Now both baluniAdjusted and totalERC20Balance are aligned to the same decimal scale\\r\\n\\t\\treturn (amount * totalERC20Balance) / baluniAdjusted;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateTokenValuation(\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\taddress token\\r\\n\\t) internal view returns (uint256 valuation) {\\r\\n\\t\\tuint256 rate;\\r\\n\\t\\tuint8 tokenDecimal = IERC20Metadata(token).decimals();\\r\\n\\t\\tuint8 usdcDecimal = IERC20Metadata(address(USDC)).decimals();\\r\\n\\r\\n\\t\\tif (token == address(USDC)) return amount * 1e12;\\r\\n\\r\\n\\t\\ttry\\r\\n\\t\\t\\tIOracle(oracle).getRate(IERC20(token), IERC20(USDC), false)\\r\\n\\t\\treturns (uint256 _rate) {\\r\\n\\t\\t\\trate = _rate;\\r\\n\\t\\t} catch {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 factor = (10 ** (tokenDecimal - usdcDecimal));\\r\\n\\r\\n\\t\\trate = ((amount * factor) * (rate * factor)) / 1e18;\\r\\n\\r\\n\\t\\treturn rate;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalValuation() external view returns (uint256) {\\r\\n\\t\\treturn _totalValuation();\\r\\n\\t}\\r\\n\\r\\n\\tfunction _totalValuation() internal view returns (uint256) {\\r\\n\\t\\tuint256 _totalV;\\r\\n\\r\\n\\t\\tfor (uint256 i; i < tokens.length(); i++) {\\r\\n\\t\\t\\taddress token = tokens.at(i);\\r\\n\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\tuint256 tokenBalanceValuation = _calculateTokenValuation(\\r\\n\\t\\t\\t\\tbalance,\\r\\n\\t\\t\\t\\ttoken\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\t_totalV += tokenBalanceValuation;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn _totalV;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUSDCShareValue(uint256 amount) external view returns (uint256) {\\r\\n\\t\\treturn _calculateBaluniToUsdc(amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction performArbitrage() external nonReentrant {\\r\\n\\t\\tuint256 unitPrice = getUnitPrice();\\r\\n\\t\\tuint256 marketPrice = oracle.getRate(\\r\\n\\t\\t\\tIERC20(address(this)),\\r\\n\\t\\t\\tIERC20(address(USDC)),\\r\\n\\t\\t\\tfalse\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tuint256 baluniBalance = balanceOf(address(this));\\r\\n\\t\\tuint256 usdcBalance = IERC20(USDC).balanceOf(address(this));\\r\\n\\r\\n\\t\\tif (marketPrice * 1e12 < unitPrice) {\\r\\n\\t\\t\\tuint256 amountToBuy = (usdcBalance * 1e12) /\\r\\n\\t\\t\\t\\t(marketPrice * 1e12) /\\r\\n\\t\\t\\t\\t1e18;\\r\\n\\r\\n\\t\\t\\tif (amountToBuy > baluniBalance) amountToBuy = baluniBalance;\\r\\n\\r\\n\\t\\t\\tsecureApproval(address(USDC), address(uniswapRouter), usdcBalance);\\r\\n\\r\\n\\t\\t\\tuint256 amountOut = singleSwap(\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tusdcBalance,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tamountOut >= amountToBuy,\\r\\n\\t\\t\\t\\t\\\"Arbitrage failed: insufficient output amount\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tsecureApproval(address(this), address(uniswapRouter), amountOut);\\r\\n\\t\\t\\tsingleSwap(address(this), address(USDC), amountOut, address(this));\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tIERC20(USDC).balanceOf(address(this)) > usdcBalance,\\r\\n\\t\\t\\t\\t\\\"Arbitrage did not profit\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t} else if (marketPrice * 1e12 > unitPrice) {\\r\\n\\t\\t\\tuint256 amountToSell = baluniBalance;\\r\\n\\t\\t\\tsecureApproval(address(this), address(uniswapRouter), amountToSell);\\r\\n\\t\\t\\tuint256 amountOutUSDC = singleSwap(\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\tamountToSell,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tamountOutUSDC > usdcBalance,\\r\\n\\t\\t\\t\\t\\\"Arbitrage failed: insufficient output amount\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tsecureApproval(\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\taddress(uniswapRouter),\\r\\n\\t\\t\\t\\tamountOutUSDC\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tsingleSwap(\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tamountOutUSDC,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tbalanceOf(address(this)) > baluniBalance,\\r\\n\\t\\t\\t\\t\\\"Arbitrage did not profit\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction singleSwap(\\r\\n\\t\\taddress token0,\\r\\n\\t\\taddress token1,\\r\\n\\t\\tuint256 tokenBalance,\\r\\n\\t\\taddress receiver\\r\\n\\t) private returns (uint256 amountOut) {\\r\\n\\t\\tISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputSingleParams({\\r\\n\\t\\t\\t\\ttokenIn: token0,\\r\\n\\t\\t\\t\\ttokenOut: token1,\\r\\n\\t\\t\\t\\tfee: 3000,\\r\\n\\t\\t\\t\\trecipient: address(receiver),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: tokenBalance,\\r\\n\\t\\t\\t\\tamountOutMinimum: 0,\\r\\n\\t\\t\\t\\tsqrtPriceLimitX96: 0\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\treturn uniswapRouter.exactInputSingle(params);\\r\\n\\t}\\r\\n\\r\\n\\tfunction multiHopSwap(\\r\\n\\t\\taddress token0,\\r\\n\\t\\taddress token1,\\r\\n\\t\\taddress token2,\\r\\n\\t\\tuint256 tokenBalance,\\r\\n\\t\\taddress receiver\\r\\n\\t) private returns (uint256 amountOut) {\\r\\n\\t\\tISwapRouter.ExactInputParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputParams({\\r\\n\\t\\t\\t\\tpath: abi.encodePacked(\\r\\n\\t\\t\\t\\t\\ttoken0,\\r\\n\\t\\t\\t\\t\\tuint24(3000),\\r\\n\\t\\t\\t\\t\\ttoken1,\\r\\n\\t\\t\\t\\t\\tuint24(3000),\\r\\n\\t\\t\\t\\t\\ttoken2\\r\\n\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\trecipient: address(receiver),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: tokenBalance,\\r\\n\\t\\t\\t\\tamountOutMinimum: 0\\r\\n\\t\\t\\t});\\r\\n\\t\\treturn uniswapRouter.exactInput(params);\\r\\n\\t}\\r\\n\\r\\n\\tfunction secureApproval(\\r\\n\\t\\taddress token,\\r\\n\\t\\taddress spender,\\r\\n\\t\\tuint256 amount\\r\\n\\t) internal {\\r\\n\\t\\tIERC20 _token = IERC20(token);\\r\\n\\t\\tuint256 currentAllowance = _token.allowance(address(this), spender);\\r\\n\\r\\n\\t\\tif (currentAllowance != amount) {\\r\\n\\t\\t\\tif (currentAllowance != 0) {\\r\\n\\t\\t\\t\\t_token.approve(spender, 0);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t_token.approve(spender, amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction rebalance(\\r\\n\\t\\taddress[] calldata assets,\\r\\n\\t\\tuint256[] calldata weights\\r\\n\\t) external returns (bool) {\\r\\n\\t\\tuint256 totalValue;\\r\\n\\r\\n\\t\\tfor (uint256 i; i < assets.length; i++) {\\r\\n\\t\\t\\tuint256 balance = IERC20(assets[i]).balanceOf(msg.sender);\\r\\n\\t\\t\\tuint256 tokenValuation = _calculateTokenValuation(\\r\\n\\t\\t\\t\\tbalance,\\r\\n\\t\\t\\t\\tassets[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\ttotalValue += tokenValuation;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256[] memory overweightVaults = new uint256[](assets.length);\\r\\n\\t\\tuint256[] memory overweightAmounts = new uint256[](assets.length);\\r\\n\\t\\tuint256[] memory underweightVaults = new uint256[](assets.length);\\r\\n\\t\\tuint256[] memory underweightAmounts = new uint256[](assets.length);\\r\\n\\r\\n\\t\\tuint256 overweightVaultsLength;\\r\\n\\t\\tuint256 underweightVaultsLength;\\r\\n\\t\\tuint256 overweightAmount;\\r\\n\\t\\tuint256 overweightPercent;\\r\\n\\t\\tuint256 targetWeight;\\r\\n\\t\\tuint256 currentWeight;\\r\\n\\t\\tuint256 totalActiveWeight;\\r\\n\\r\\n\\t\\tbool overweight;\\r\\n\\r\\n\\t\\tfor (uint256 i; i < assets.length; i++) {\\r\\n\\t\\t\\tuint256 balance = IERC20(assets[i]).balanceOf(msg.sender);\\r\\n\\t\\t\\tuint256 decimals = IERC20Metadata(assets[i]).decimals();\\r\\n\\t\\t\\tuint256 tokensTotalValue = _calculateTokenValuation(\\r\\n\\t\\t\\t\\tbalance,\\r\\n\\t\\t\\t\\tassets[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\ttargetWeight = weights[i];\\r\\n\\t\\t\\tcurrentWeight = tokensTotalValue / (10000) / (totalValue);\\r\\n\\t\\t\\toverweight = currentWeight > targetWeight;\\r\\n\\t\\t\\toverweightPercent = overweight\\r\\n\\t\\t\\t\\t? currentWeight - (targetWeight)\\r\\n\\t\\t\\t\\t: targetWeight - (currentWeight);\\r\\n\\t\\t\\tuint256 price = _calculateTokenValuation(\\r\\n\\t\\t\\t\\t1 * 10 ** decimals,\\r\\n\\t\\t\\t\\tassets[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tif (overweight) {\\r\\n\\t\\t\\t\\toverweightAmount = (overweightPercent * (totalValue)) / (10000);\\r\\n\\t\\t\\t\\toverweightAmount = (overweightAmount * (1e18)) / (price);\\r\\n\\t\\t\\t\\toverweightVaults[overweightVaultsLength] = i;\\r\\n\\t\\t\\t\\toverweightAmounts[overweightVaultsLength] = overweightAmount;\\r\\n\\t\\t\\t\\toverweightVaultsLength++;\\r\\n\\t\\t\\t} else if (!overweight) {\\r\\n\\t\\t\\t\\ttotalActiveWeight += overweightPercent;\\r\\n\\t\\t\\t\\toverweightAmount = overweightPercent;\\r\\n\\t\\t\\t\\t// overweightAmount = overweightPercent.mul(totalValue).div(10000);\\r\\n\\t\\t\\t\\tunderweightVaults[underweightVaultsLength] = i;\\r\\n\\t\\t\\t\\tunderweightAmounts[underweightVaultsLength] = overweightAmount;\\r\\n\\t\\t\\t\\tunderweightVaultsLength++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Resize overweightVaults and overweightAmounts to the actual overweighted vaults\\r\\n\\t\\toverweightVaults = _resize(overweightVaults, overweightVaultsLength);\\r\\n\\t\\toverweightAmounts = _resize(overweightAmounts, overweightVaultsLength);\\r\\n\\t\\t// Resize overweightVaults and overweightAmounts to the actual overweighted vaults\\r\\n\\t\\tunderweightVaults = _resize(underweightVaults, underweightVaultsLength);\\r\\n\\t\\tunderweightAmounts = _resize(\\r\\n\\t\\t\\tunderweightAmounts,\\r\\n\\t\\t\\tunderweightVaultsLength\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tfor (uint256 i; i < overweightVaults.length; i++) {\\r\\n\\t\\t\\tif (overweightAmounts[i] > 0) {\\r\\n\\t\\t\\t\\tIERC20(address(assets[overweightVaults[i]])).transferFrom(\\r\\n\\t\\t\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\t\\toverweightAmounts[i]\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\taddress pool = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t3000\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\tsecureApproval(\\r\\n\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\taddress(uniswapRouter),\\r\\n\\t\\t\\t\\t\\toverweightAmounts[i]\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint singleSwapResult = singleSwap(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\toverweightAmounts[i],\\r\\n\\t\\t\\t\\t\\t\\tunderweightVaults.length == 0\\r\\n\\t\\t\\t\\t\\t\\t\\t? msg.sender\\r\\n\\t\\t\\t\\t\\t\\t\\t: address(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\toverweightAmounts[i],\\r\\n\\t\\t\\t\\t\\t\\tunderweightVaults.length == 0\\r\\n\\t\\t\\t\\t\\t\\t\\t? msg.sender\\r\\n\\t\\t\\t\\t\\t\\t\\t: address(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfor (uint256 i; i < underweightVaults.length; i++) {\\r\\n\\t\\t\\tif (underweightAmounts[i] > 0) {\\r\\n\\t\\t\\t\\tuint256 rebaseActiveWgt = (underweightAmounts[i] * (10000)) /\\r\\n\\t\\t\\t\\t\\t(totalActiveWeight);\\r\\n\\r\\n\\t\\t\\t\\tuint256 rebBuyQty = (rebaseActiveWgt *\\r\\n\\t\\t\\t\\t\\tIERC20(USDC).balanceOf(msg.sender) *\\r\\n\\t\\t\\t\\t\\t1e12) / (10000);\\r\\n\\r\\n\\t\\t\\t\\tif (\\r\\n\\t\\t\\t\\t\\trebBuyQty > 0 &&\\r\\n\\t\\t\\t\\t\\trebBuyQty <= IERC20(USDC).balanceOf(msg.sender) * 1e12\\r\\n\\t\\t\\t\\t) {\\r\\n\\t\\t\\t\\t\\taddress pool = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\t3000\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tsecureApproval(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(uniswapRouter),\\r\\n\\t\\t\\t\\t\\t\\tunderweightAmounts[i] / 1e12\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\t\\t\\t\\tuint singleSwapResult = singleSwap(\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\t\\tunderweightAmounts[i] / 1e12,\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuint256 amountToTransfer = calculateNetAmountAfterFee(\\r\\n\\t\\t\\t\\t\\t\\t\\tsingleSwapResult\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\tIERC20(USDC).transfer(msg.sender, amountToTransfer);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\trequire(\\r\\n\\t\\t\\t\\t\\t\\t\\tsingleSwapResult > 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"Swap Failed, Try Burn()\\\"\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\t\\tunderweightAmounts[i] / 1e12,\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuint256 amountToTransfer = calculateNetAmountAfterFee(\\r\\n\\t\\t\\t\\t\\t\\t\\tamountOutHop\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\tIERC20(USDC).transfer(msg.sender, amountToTransfer);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\trequire(amountOutHop > 0, \\\"Swap Failed\\\");\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _resize(\\r\\n\\t\\tuint256[] memory arr,\\r\\n\\t\\tuint256 size\\r\\n\\t) internal pure returns (uint256[] memory) {\\r\\n\\t\\tuint256[] memory ret = new uint256[](size);\\r\\n\\t\\tfor (uint256 i; i < size; i++) {\\r\\n\\t\\t\\tret[i] = arr[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn ret;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x0521a6b1bd6470a9a34b5da61ec488e093fe6f4979e2bc10ea6dc045b1989982\",\"license\":\"MIT\"},\"contracts/core/BaluniStake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\n\\r\\ncontract BaluniStake is ReentrancyGuard {\\r\\n\\tIERC20 public immutable stakingToken;\\r\\n\\tIERC20 public immutable rewardToken;\\r\\n\\r\\n\\tmapping(address => uint256) public balanceStakedOf;\\r\\n\\tmapping(address => uint256) public stakeTimestamp;\\r\\n\\tuint256 public stakingSupply;\\r\\n\\r\\n\\tuint256 private constant MULTIPLIER = 1e18;\\r\\n\\tuint256 private rewardIndex;\\r\\n\\tmapping(address => uint256) private rewardIndexOf;\\r\\n\\tmapping(address => uint256) private earned;\\r\\n\\r\\n\\tuint256 private constant STAKING_PERIOD = 365 days;\\r\\n\\r\\n\\tevent RewardClaimed(address indexed user, uint256 amount);\\r\\n\\tevent Staked(address indexed user, uint256 amount);\\r\\n\\tevent Unstaked(address indexed user, uint256 amount);\\r\\n\\r\\n\\tconstructor(address _stakingToken, address _rewardToken) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_stakingToken != address(0) && _rewardToken != address(0),\\r\\n\\t\\t\\t\\\"Invalid token address\\\"\\r\\n\\t\\t);\\r\\n\\t\\tstakingToken = IERC20(_stakingToken);\\r\\n\\t\\trewardToken = IERC20(_rewardToken);\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRewardIndex(uint256 reward) internal {\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\trewardIndex += (reward * MULTIPLIER) / stakingSupply;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRewardIndexPublic(uint256 reward) public {\\r\\n\\t\\trequire(reward > 0, \\\"Reward must be positive\\\");\\r\\n\\t\\trequire(stakingSupply > 0, \\\"No staking supply to distribute rewards\\\");\\r\\n\\t\\trewardToken.transferFrom(msg.sender, address(this), reward);\\r\\n\\t\\tupdateRewardIndex(reward);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateRewards(address account) private view returns (uint256) {\\r\\n\\t\\tuint256 timeStaked = block.timestamp - stakeTimestamp[account];\\r\\n\\t\\ttimeStaked = timeStaked > STAKING_PERIOD ? STAKING_PERIOD : timeStaked;\\r\\n\\t\\tuint256 shares = balanceStakedOf[account];\\r\\n\\t\\tuint256 rewardDelta = rewardIndex - rewardIndexOf[account];\\r\\n\\t\\treturn\\r\\n\\t\\t\\t(shares * timeStaked * rewardDelta) / MULTIPLIER / STAKING_PERIOD;\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateRewardsEarned(\\r\\n\\t\\taddress account\\r\\n\\t) external view returns (uint256) {\\r\\n\\t\\treturn earned[account] + _calculateRewards(account);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _updateRewards(address account) internal {\\r\\n\\t\\tuint256 rewards = _calculateRewards(account);\\r\\n\\t\\tearned[account] += rewards;\\r\\n\\t\\trewardIndexOf[account] = rewardIndex;\\r\\n\\t}\\r\\n\\r\\n\\tfunction stake(uint256 amount) external nonReentrant {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tbalanceStakedOf[msg.sender] += amount;\\r\\n\\t\\tstakingSupply += amount;\\r\\n\\t\\tstakeTimestamp[msg.sender] = block.timestamp;\\r\\n\\t\\tstakingToken.transferFrom(msg.sender, address(this), amount);\\r\\n\\t\\temit Staked(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction unstake(uint256 amount) external nonReentrant {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tuint256 currentBalance = balanceStakedOf[msg.sender];\\r\\n\\t\\trequire(currentBalance >= amount, \\\"Insufficient balance to unstake\\\");\\r\\n\\t\\tbalanceStakedOf[msg.sender] = currentBalance - amount;\\r\\n\\t\\tstakingSupply -= amount;\\r\\n\\t\\tstakingToken.transfer(msg.sender, amount);\\r\\n\\t\\temit Unstaked(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction claim() external nonReentrant returns (uint256) {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tuint256 reward = earned[msg.sender];\\r\\n\\t\\trequire(reward > 0, \\\"No rewards to claim\\\");\\r\\n\\t\\tearned[msg.sender] = 0;\\r\\n\\t\\trewardToken.transfer(msg.sender, reward);\\r\\n\\t\\temit RewardClaimed(msg.sender, reward);\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n\\r\\n\\tfunction claimTo(\\r\\n\\t\\taddress staker,\\r\\n\\t\\taddress _to\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\t_updateRewards(staker);\\r\\n\\t\\tuint256 reward = earned[staker];\\r\\n\\t\\trequire(reward > 0, \\\"No rewards to claim\\\");\\r\\n\\t\\tearned[staker] = 0;\\r\\n\\t\\trewardToken.transfer(_to, reward);\\r\\n\\t\\temit RewardClaimed(_to, reward);\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xc68998647c0e869e5e3a210496994c35c211e97bb654e0510abb0e9f60e936b9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":54,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":357,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":363,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":365,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":367,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":369,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":1573,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_status","offset":0,"slot":"6","type":"t_uint256"},{"astId":7449,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"balanceStakedOf","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":7453,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"stakeTimestamp","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"},{"astId":7455,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"stakingSupply","offset":0,"slot":"9","type":"t_uint256"},{"astId":7460,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"rewardIndex","offset":0,"slot":"10","type":"t_uint256"},{"astId":7464,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"rewardIndexOf","offset":0,"slot":"11","type":"t_mapping(t_address,t_uint256)"},{"astId":7468,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"earned","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"},{"astId":4601,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_BPS_FEE","offset":0,"slot":"13","type":"t_uint256"},{"astId":4604,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_BPS_BASE","offset":0,"slot":"14","type":"t_uint256"},{"astId":4607,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_BPS_LIQUIDATE_FEE","offset":0,"slot":"15","type":"t_uint256"},{"astId":4614,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"tokens","offset":0,"slot":"16","type":"t_struct(AddressSet)1957_storage"},{"astId":4649,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"userAgents","offset":0,"slot":"18","type":"t_mapping(t_address,t_contract(BaluniAgent)4560)"},{"astId":4653,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"tokenBalanceMap","offset":0,"slot":"19","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(BaluniAgent)4560":{"encoding":"inplace","label":"contract BaluniAgent","numberOfBytes":"20"},"t_mapping(t_address,t_contract(BaluniAgent)4560)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract BaluniAgent)","numberOfBytes":"32","value":"t_contract(BaluniAgent)4560"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressSet)1957_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":1956,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1642_storage"}],"numberOfBytes":"64"},"t_struct(Set)1642_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":1637,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1641,"contract":"contracts/core/BaluniRouter.sol:BaluniRouter","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IOracle":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaluniRouter.sol\":\"IOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/core/BaluniAgent.sol\":{\"content\":\"pragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\ninterface IRouter {\\r\\n\\tfunction getBpsFee() external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract BaluniAgent {\\r\\n\\tusing SafeERC20 for IERC20Metadata;\\r\\n\\tusing Address for address payable;\\r\\n\\r\\n\\taddress public owner;\\r\\n\\taddress private router;\\r\\n\\taddress internal constant _NATIVE =\\r\\n\\t\\t0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\r\\n\\tuint256 internal constant _DUST = 10;\\r\\n\\tuint256 internal constant _BPS_BASE = 10000;\\r\\n\\r\\n\\tstruct Call {\\r\\n\\t\\taddress to;\\r\\n\\t\\tuint256 value;\\r\\n\\t\\tbytes data;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Initializes a new instance of the Agent contract.\\r\\n\\t * @param _owner The address of the contract owner.\\r\\n\\t * @param _router The address of the router contract.\\r\\n\\t * @notice Only the router contract can deploy this contract.\\r\\n\\t */\\r\\n\\tconstructor(address _owner, address _router) {\\r\\n\\t\\trequire(msg.sender == _router, \\\"Only Router\\\");\\r\\n\\t\\towner = _owner;\\r\\n\\t\\trouter = _router;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyRouter() {\\r\\n\\t\\trequire(msg.sender == router, \\\"Callable only by the router\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Executes a batch of calls and performs token operations.\\r\\n\\t * @param calls An array of Call structs representing the calls to be executed.\\r\\n\\t * @param tokensReturn An array of token addresses to return after the batch call.\\r\\n\\t * @notice Only the router contract is allowed to execute this function.\\r\\n\\t */\\r\\n\\tfunction execute(\\r\\n\\t\\tCall[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external onlyRouter {\\r\\n\\t\\tfor (uint i = 0; i < calls.length; i++) {\\r\\n\\t\\t\\t(bool success, ) = calls[i].to.call{ value: calls[i].value }(\\r\\n\\t\\t\\t\\tcalls[i].data\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(success, \\\"Batch call failed\\\");\\r\\n\\t\\t}\\r\\n\\t\\t_chargeFees(tokensReturn);\\r\\n\\t\\t_returnTokens(tokensReturn);\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the address of the router contract.\\r\\n\\t * @return The address of the router contract.\\r\\n\\t */\\r\\n\\tfunction getRouter() public view returns (address) {\\r\\n\\t\\treturn router;\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to charge fees for the tokens returned.\\r\\n\\t * @param tokensReturn The array of tokens to charge fees for.\\r\\n\\t */\\r\\n\\tfunction _chargeFees(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 bpsFee = IRouter(router).getBpsFee();\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t// Use the native balance for amount calculation as wrap will be executed later\\r\\n\\t\\t\\t\\tamount = (address(this).balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\t// send to router\\r\\n\\t\\t\\t\\tpayable(router).sendValue(amount);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\t\\tamount = (balance * bpsFee) / _BPS_BASE;\\r\\n\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(router, amount);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Internal function to return tokens to the owner.\\r\\n\\t * @param tokensReturn The array of tokens to return.\\r\\n\\t */\\r\\n\\tfunction _returnTokens(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 tokensReturnLength = tokensReturn.length;\\r\\n\\t\\tif (tokensReturnLength > 0) {\\r\\n\\t\\t\\tfor (uint256 i; i < tokensReturnLength; ) {\\r\\n\\t\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t\\tif (address(this).balance > 0) {\\r\\n\\t\\t\\t\\t\\t\\tpayable(owner).sendValue(address(this).balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 balance = IERC20Metadata(token).balanceOf(\\r\\n\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tif (balance > _DUST) {\\r\\n\\t\\t\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(owner, balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tunchecked {\\r\\n\\t\\t\\t\\t\\t++i;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xb82df35b2eddfe85c4c4ee4a1ef7074ebb7571dd986bde80ca8348dcbaee1066\"},\"contracts/core/BaluniRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\r\\n\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\r\\n\\r\\nimport \\\"./BaluniAgent.sol\\\";\\r\\nimport \\\"./BaluniStake.sol\\\";\\r\\n\\r\\ninterface IOracle {\\r\\n\\tfunction getRate(\\r\\n\\t\\tIERC20 srcToken,\\r\\n\\t\\tIERC20 dstToken,\\r\\n\\t\\tbool useWrappers\\r\\n\\t) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\\r\\ncontract BaluniRouter is Ownable, ERC20, BaluniStake {\\r\\n\\tusing SafeERC20 for IERC20;\\r\\n\\r\\n\\tuint256 public constant _MAX_BPS_FEE = 500;\\r\\n\\r\\n\\tuint256 public _BPS_FEE = 30; // 0.3%.\\r\\n\\tuint256 public _BPS_BASE = 10000;\\r\\n\\tuint256 public _BPS_LIQUIDATE_FEE = 30; // 0.3%.\\r\\n\\r\\n\\tusing EnumerableSet for EnumerableSet.AddressSet;\\r\\n\\r\\n\\tEnumerableSet.AddressSet private tokens;\\r\\n\\r\\n\\tIERC20 public constant USDC =\\r\\n\\t\\tIERC20(0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174);\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\tIOracle public immutable oracle =\\r\\n\\t\\tIOracle(0x0AdDd25a91563696D8567Df78D5A01C9a991F9B8); // 1inch Spot Aggregator\\r\\n\\tISwapRouter public immutable uniswapRouter =\\r\\n\\t\\tISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\\r\\n\\tIUniswapV3Factory public immutable uniswapFactory =\\r\\n\\t\\tIUniswapV3Factory(0x1F98431c8aD98523631AE4a59f267346ea31F984);\\r\\n\\r\\n\\tmapping(address => BaluniAgent) public userAgents;\\r\\n\\tmapping(address => uint256) public tokenBalanceMap;\\r\\n\\r\\n\\tevent AgentCreated(address user, address agent);\\r\\n\\tevent Execute(\\r\\n\\t\\taddress user,\\r\\n\\t\\tBaluniAgent.Call[] calls,\\r\\n\\t\\taddress[] tokensReturn\\r\\n\\t);\\r\\n\\tevent Burn(address user, uint256 value);\\r\\n\\tevent Mint(address user, uint256 value);\\r\\n\\tevent ChangeBpsFee(uint256 newFee);\\r\\n\\tevent ChangeLiquidateFee(uint256 newFee);\\r\\n\\r\\n\\tmodifier validTimestamp(uint256 _timestamp) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_timestamp <= block.timestamp,\\r\\n\\t\\t\\t\\\"Timestamp too far in the future\\\"\\r\\n\\t\\t);\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_timestamp >= block.timestamp - 1 days,\\r\\n\\t\\t\\t\\\"Timestamp too far in the past\\\"\\r\\n\\t\\t);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tconstructor()\\r\\n\\t\\tOwnable(msg.sender)\\r\\n\\t\\tERC20(\\\"Baluni\\\", \\\"BALUNI\\\")\\r\\n\\t\\tBaluniStake(address(this), address(this))\\r\\n\\t{\\r\\n\\t\\t_mint(address(this), 1 ether);\\r\\n\\t\\t_stakeToContract(address(this), 1 ether);\\r\\n\\t\\t_updateRewards(address(this));\\r\\n\\r\\n\\t\\tEnumerableSet.add(tokens, address(USDC));\\r\\n\\t}\\r\\n\\r\\n\\tfunction _stakeToContract(address _to, uint256 _amount) internal {\\r\\n\\t\\tbalanceStakedOf[_to] += _amount;\\r\\n\\t\\tstakingSupply += _amount;\\r\\n\\t\\tstakeTimestamp[msg.sender] = block.timestamp;\\r\\n\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\tupdateRewardIndex(_amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction listAllTokens() external view returns (address[] memory) {\\r\\n\\t\\treturn tokens.values();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getAgentAddress(address _user) public view returns (address) {\\r\\n\\t\\tbytes32 salt = keccak256(abi.encodePacked(_user));\\r\\n\\t\\tbytes memory bytecode = getBytecode(_user);\\r\\n\\t\\tbytes32 hash = keccak256(\\r\\n\\t\\t\\tabi.encodePacked(\\r\\n\\t\\t\\t\\tbytes1(0xff),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tsalt,\\r\\n\\t\\t\\t\\tkeccak256(bytecode)\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\treturn address(uint160(uint256(hash)));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOrCreateAgent(address user) private returns (BaluniAgent) {\\r\\n\\t\\tbytes32 salt = keccak256(abi.encodePacked(user));\\r\\n\\r\\n\\t\\tif (address(userAgents[user]) == address(0)) {\\r\\n\\t\\t\\tBaluniAgent agent = new BaluniAgent{ salt: salt }(\\r\\n\\t\\t\\t\\tuser,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tisContract(address(agent)),\\r\\n\\t\\t\\t\\t\\\"Agent creation failed, not a contract\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tuserAgents[user] = agent;\\r\\n\\t\\t\\temit AgentCreated(user, address(agent));\\r\\n\\t\\t}\\r\\n\\t\\treturn userAgents[user];\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address _addr) private view returns (bool) {\\r\\n\\t\\tuint32 size;\\r\\n\\t\\tassembly {\\r\\n\\t\\t\\tsize := extcodesize(_addr)\\r\\n\\t\\t}\\r\\n\\t\\treturn size > 0;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getBytecode(address _owner) internal view returns (bytes memory) {\\r\\n\\t\\trequire(_owner != address(0), \\\"Owner address cannot be zero.\\\");\\r\\n\\t\\tbytes memory bytecode = type(BaluniAgent).creationCode;\\r\\n\\t\\treturn abi.encodePacked(bytecode, abi.encode(_owner, address(this)));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getBpsFee() external view returns (uint256) {\\r\\n\\t\\treturn _BPS_FEE;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeBpsFee(uint256 _newFee) external onlyOwner {\\r\\n\\t\\t_BPS_FEE = _newFee;\\r\\n\\t\\temit ChangeBpsFee(_newFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeBpsLiquidateFee(uint256 _newFee) external onlyOwner {\\r\\n\\t\\t_BPS_LIQUIDATE_FEE = _newFee;\\r\\n\\t\\temit ChangeLiquidateFee(_newFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction execute(\\r\\n\\t\\tBaluniAgent.Call[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external nonReentrant {\\r\\n\\t\\tBaluniAgent agent = getOrCreateAgent(msg.sender);\\r\\n\\t\\tbool[] memory isTokenNew = new bool[](tokensReturn.length);\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\tisTokenNew[i] = !EnumerableSet.contains(tokens, tokensReturn[i]);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tagent.execute(calls, tokensReturn);\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\taddress poolNative3000 = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t3000\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\taddress poolNative500 = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t500\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tbool poolExist = poolNative3000 != address(0) ||\\r\\n\\t\\t\\t\\tpoolNative500 != address(0);\\r\\n\\r\\n\\t\\t\\tif (isTokenNew[i] && poolExist) {\\r\\n\\t\\t\\t\\tEnumerableSet.add(tokens, token);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (!poolExist) {\\r\\n\\t\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\t\\tIERC20(token).transfer(msg.sender, balance);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction liquidate(address token) external nonReentrant {\\r\\n\\t\\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\taddress pool = uniswapFactory.getPool(token, address(USDC), 3000);\\r\\n\\t\\tsecureApproval(token, address(uniswapRouter), totalERC20Balance);\\r\\n\\r\\n\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\tuint256 singleSwapResult = singleSwap(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(singleSwapResult > 0, \\\"Swap Failed, Try Burn()\\\");\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(amountOutHop > 0, \\\"Swap Failed, Try Burn()\\\");\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 reward = claimTo(address(this), msg.sender);\\r\\n\\t\\tuint256 mintAmount = (totalSupply() * _BPS_LIQUIDATE_FEE) / 10000;\\r\\n\\r\\n\\t\\t_mint(address(this), mintAmount);\\r\\n\\t\\t_stakeToContract(address(this), mintAmount);\\r\\n\\r\\n\\t\\temit Mint(address(this), mintAmount);\\r\\n\\t\\temit RewardClaimed(msg.sender, reward);\\r\\n\\t}\\r\\n\\r\\n\\tfunction burn(uint256 burnAmount) external nonReentrant {\\r\\n\\t\\trequire(balanceOf(msg.sender) >= burnAmount, \\\"Insufficient BAL\\\");\\r\\n\\r\\n\\t\\tfor (uint256 i; i < tokens.length(); i++) {\\r\\n\\t\\t\\taddress token = tokens.at(i);\\r\\n\\t\\t\\tuint256 totalBaluni = totalSupply();\\r\\n\\t\\t\\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n\\t\\t\\tif (totalERC20Balance == 0 || token == address(this)) continue;\\r\\n\\r\\n\\t\\t\\tuint256 decimals = IERC20Metadata(token).decimals();\\r\\n\\t\\t\\tuint256 share = _calculateTokenShare(\\r\\n\\t\\t\\t\\ttotalBaluni,\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\tburnAmount,\\r\\n\\t\\t\\t\\tdecimals\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\tIERC20(token).transfer(msg.sender, share);\\r\\n\\t\\t}\\r\\n\\t\\t_burn(msg.sender, burnAmount);\\r\\n\\t\\temit Burn(msg.sender, burnAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction burnTokensAndSwapToUSDC(uint256 burnAmount) external nonReentrant {\\r\\n\\t\\trequire(burnAmount > 0, \\\"Insufficient BAL\\\");\\r\\n\\r\\n\\t\\tfor (uint256 i; i < tokens.length(); i++) {\\r\\n\\t\\t\\taddress token = tokens.at(i);\\r\\n\\t\\t\\tuint256 totalBaluni = totalSupply();\\r\\n\\t\\t\\tuint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n\\t\\t\\tif (totalERC20Balance > 0 == false) continue;\\r\\n\\t\\t\\tif (token == address(this)) continue;\\r\\n\\r\\n\\t\\t\\tuint256 decimals = IERC20Metadata(token).decimals();\\r\\n\\t\\t\\tuint256 burnAmountToken = _calculateTokenShare(\\r\\n\\t\\t\\t\\ttotalBaluni,\\r\\n\\t\\t\\t\\ttotalERC20Balance,\\r\\n\\t\\t\\t\\tburnAmount,\\r\\n\\t\\t\\t\\tdecimals\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\tif (token == address(USDC)) {\\r\\n\\t\\t\\t\\tIERC20(USDC).transfer(msg.sender, burnAmountToken);\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress pool = uniswapFactory.getPool(token, address(USDC), 3000);\\r\\n\\t\\t\\tsecureApproval(token, address(uniswapRouter), burnAmountToken);\\r\\n\\r\\n\\t\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\t\\tsingleSwap(token, address(USDC), burnAmountToken, msg.sender);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\tburnAmountToken,\\r\\n\\t\\t\\t\\t\\tmsg.sender\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\trequire(amountOutHop > 0, \\\"Swap Failed, Try Burn()\\\");\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t_burn(msg.sender, burnAmount);\\r\\n\\r\\n\\t\\temit Burn(msg.sender, burnAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateNetAmountAfterFee(\\r\\n\\t\\tuint256 _amount\\r\\n\\t) internal view returns (uint256) {\\r\\n\\t\\tuint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) /\\r\\n\\t\\t\\t_BPS_BASE;\\r\\n\\t\\treturn amountInWithFee;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUnitPrice() public view returns (uint256) {\\r\\n\\t\\treturn _calculateBaluniToUsdc(1e18);\\r\\n\\t}\\r\\n\\r\\n\\tfunction mintUSDC(\\r\\n\\t\\tuint256 balAmountToMint\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\tuint256 totalUSDValuation = _totalValuation();\\r\\n\\t\\tuint256 totalBalSupply = totalSupply();\\r\\n\\t\\tuint256 usdcRequired = (balAmountToMint * totalUSDValuation) /\\r\\n\\t\\t\\ttotalBalSupply;\\r\\n\\t\\tuint256 balance = IERC20(USDC).balanceOf(msg.sender);\\r\\n\\t\\trequire(totalBalSupply > 0, \\\"Total BALUNI supply cannot be zero\\\");\\r\\n\\t\\trequire(balance >= usdcRequired / 1e12, \\\"USDC balance is insufficient\\\");\\r\\n\\r\\n\\t\\tuint256 allowed = USDC.allowance(msg.sender, address(this));\\r\\n\\t\\trequire(allowed >= usdcRequired / 1e12, \\\"Check the token allowance\\\");\\r\\n\\r\\n\\t\\tUSDC.safeTransferFrom(msg.sender, address(this), usdcRequired / 1e12);\\r\\n\\r\\n\\t\\tuint256 amountAfterFee = calculateNetAmountAfterFee(balAmountToMint);\\r\\n\\t\\tuint256 netBalAmountToMint = balAmountToMint - amountAfterFee;\\r\\n\\r\\n\\t\\t_mint(address(this), netBalAmountToMint);\\r\\n\\t\\temit Mint(address(this), netBalAmountToMint);\\r\\n\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\tupdateRewardIndex(netBalAmountToMint);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_mint(msg.sender, amountAfterFee);\\r\\n\\t\\temit Mint(msg.sender, amountAfterFee);\\r\\n\\r\\n\\t\\treturn netBalAmountToMint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mintERC20(\\r\\n\\t\\tuint256 balAmountToMint,\\r\\n\\t\\taddress asset\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\tuint256 totalUSDValuation = _totalValuation();\\r\\n\\t\\tuint256 totalBalSupply = totalSupply();\\r\\n\\t\\trequire(totalBalSupply > 0, \\\"Total BALUNI supply cannot be zero\\\");\\r\\n\\r\\n\\t\\tuint256 usdcRequired = (balAmountToMint * totalUSDValuation) /\\r\\n\\t\\t\\ttotalBalSupply;\\r\\n\\r\\n\\t\\tuint8 decimalA = IERC20Metadata(address(USDC)).decimals();\\r\\n\\t\\tuint8 decimalB = IERC20Metadata(asset).decimals();\\r\\n\\r\\n\\t\\tuint256 assetRate = oracle.getRate(IERC20(USDC), IERC20(asset), false);\\r\\n\\t\\tuint256 required;\\r\\n\\r\\n\\t\\tif (decimalB > decimalA) {\\r\\n\\t\\t\\tuint256 rate = assetRate / 10 ** (decimalB - decimalA);\\r\\n\\t\\t\\trequired = (usdcRequired / rate) * 1e18;\\r\\n\\t\\t\\trequired = required / 10 ** (decimalB - decimalA);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tuint256 rate = assetRate * 10 ** (decimalA - decimalB);\\r\\n\\t\\t\\trequired = (usdcRequired / rate) * 1e18;\\r\\n\\t\\t\\trequired = required / 10 ** (decimalA - decimalB);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 balance = IERC20(asset).balanceOf(msg.sender);\\r\\n\\r\\n\\t\\trequire(balance >= required, \\\"Balance is insufficient\\\");\\r\\n\\r\\n\\t\\tuint256 allowed = IERC20(asset).allowance(msg.sender, address(this));\\r\\n\\r\\n\\t\\trequire(allowed >= required, \\\"Check the token allowance\\\");\\r\\n\\r\\n\\t\\tIERC20(asset).safeTransferFrom(msg.sender, address(this), required);\\r\\n\\r\\n\\t\\tuint256 amountAfterFee = calculateNetAmountAfterFee(balAmountToMint);\\r\\n\\t\\tuint256 netBalAmountToMint = balAmountToMint - amountAfterFee;\\r\\n\\r\\n\\t\\t_mint(address(this), netBalAmountToMint);\\r\\n\\t\\temit Mint(address(this), netBalAmountToMint);\\r\\n\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\tupdateRewardIndex(netBalAmountToMint);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t_mint(msg.sender, amountAfterFee);\\r\\n\\t\\temit Mint(msg.sender, amountAfterFee);\\r\\n\\r\\n\\t\\treturn amountAfterFee;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateBaluniToUsdc(\\r\\n\\t\\tuint256 amount\\r\\n\\t) internal view returns (uint256 shareUSDC) {\\r\\n\\t\\tuint256 totalBaluni = totalSupply();\\r\\n\\t\\trequire(totalBaluni > 0, \\\"Total supply cannot be zero\\\");\\r\\n\\t\\tuint256 totalUSDC = _totalValuation();\\r\\n\\t\\tshareUSDC = (amount * totalUSDC) / totalBaluni;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateTokenShare(\\r\\n\\t\\tuint256 totalBaluni,\\r\\n\\t\\tuint256 totalERC20Balance,\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\tuint256 tokenDecimals\\r\\n\\t) internal pure returns (uint256) {\\r\\n\\t\\trequire(totalBaluni > 0, \\\"Total supply cannot be zero\\\");\\r\\n\\t\\trequire(tokenDecimals <= 18, \\\"Token decimals should be <= 18\\\");\\r\\n\\r\\n\\t\\tuint256 baluniAdjusted;\\r\\n\\r\\n\\t\\tif (tokenDecimals < 18) {\\r\\n\\t\\t\\t// Adjust totalBaluni to the same scale as totalERC20Balance\\r\\n\\t\\t\\tbaluniAdjusted = totalBaluni * (10 ** (18 - tokenDecimals));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tbaluniAdjusted = totalBaluni;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Now both baluniAdjusted and totalERC20Balance are aligned to the same decimal scale\\r\\n\\t\\treturn (amount * totalERC20Balance) / baluniAdjusted;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateTokenValuation(\\r\\n\\t\\tuint256 amount,\\r\\n\\t\\taddress token\\r\\n\\t) internal view returns (uint256 valuation) {\\r\\n\\t\\tuint256 rate;\\r\\n\\t\\tuint8 tokenDecimal = IERC20Metadata(token).decimals();\\r\\n\\t\\tuint8 usdcDecimal = IERC20Metadata(address(USDC)).decimals();\\r\\n\\r\\n\\t\\tif (token == address(USDC)) return amount * 1e12;\\r\\n\\r\\n\\t\\ttry\\r\\n\\t\\t\\tIOracle(oracle).getRate(IERC20(token), IERC20(USDC), false)\\r\\n\\t\\treturns (uint256 _rate) {\\r\\n\\t\\t\\trate = _rate;\\r\\n\\t\\t} catch {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 factor = (10 ** (tokenDecimal - usdcDecimal));\\r\\n\\r\\n\\t\\trate = ((amount * factor) * (rate * factor)) / 1e18;\\r\\n\\r\\n\\t\\treturn rate;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalValuation() external view returns (uint256) {\\r\\n\\t\\treturn _totalValuation();\\r\\n\\t}\\r\\n\\r\\n\\tfunction _totalValuation() internal view returns (uint256) {\\r\\n\\t\\tuint256 _totalV;\\r\\n\\r\\n\\t\\tfor (uint256 i; i < tokens.length(); i++) {\\r\\n\\t\\t\\taddress token = tokens.at(i);\\r\\n\\t\\t\\tuint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\t\\tuint256 tokenBalanceValuation = _calculateTokenValuation(\\r\\n\\t\\t\\t\\tbalance,\\r\\n\\t\\t\\t\\ttoken\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\t_totalV += tokenBalanceValuation;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn _totalV;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUSDCShareValue(uint256 amount) external view returns (uint256) {\\r\\n\\t\\treturn _calculateBaluniToUsdc(amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction performArbitrage() external nonReentrant {\\r\\n\\t\\tuint256 unitPrice = getUnitPrice();\\r\\n\\t\\tuint256 marketPrice = oracle.getRate(\\r\\n\\t\\t\\tIERC20(address(this)),\\r\\n\\t\\t\\tIERC20(address(USDC)),\\r\\n\\t\\t\\tfalse\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tuint256 baluniBalance = balanceOf(address(this));\\r\\n\\t\\tuint256 usdcBalance = IERC20(USDC).balanceOf(address(this));\\r\\n\\r\\n\\t\\tif (marketPrice * 1e12 < unitPrice) {\\r\\n\\t\\t\\tuint256 amountToBuy = (usdcBalance * 1e12) /\\r\\n\\t\\t\\t\\t(marketPrice * 1e12) /\\r\\n\\t\\t\\t\\t1e18;\\r\\n\\r\\n\\t\\t\\tif (amountToBuy > baluniBalance) amountToBuy = baluniBalance;\\r\\n\\r\\n\\t\\t\\tsecureApproval(address(USDC), address(uniswapRouter), usdcBalance);\\r\\n\\r\\n\\t\\t\\tuint256 amountOut = singleSwap(\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tusdcBalance,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tamountOut >= amountToBuy,\\r\\n\\t\\t\\t\\t\\\"Arbitrage failed: insufficient output amount\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tsecureApproval(address(this), address(uniswapRouter), amountOut);\\r\\n\\t\\t\\tsingleSwap(address(this), address(USDC), amountOut, address(this));\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tIERC20(USDC).balanceOf(address(this)) > usdcBalance,\\r\\n\\t\\t\\t\\t\\\"Arbitrage did not profit\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t} else if (marketPrice * 1e12 > unitPrice) {\\r\\n\\t\\t\\tuint256 amountToSell = baluniBalance;\\r\\n\\t\\t\\tsecureApproval(address(this), address(uniswapRouter), amountToSell);\\r\\n\\t\\t\\tuint256 amountOutUSDC = singleSwap(\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\tamountToSell,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tamountOutUSDC > usdcBalance,\\r\\n\\t\\t\\t\\t\\\"Arbitrage failed: insufficient output amount\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tsecureApproval(\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\taddress(uniswapRouter),\\r\\n\\t\\t\\t\\tamountOutUSDC\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tsingleSwap(\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tamountOutUSDC,\\r\\n\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(\\r\\n\\t\\t\\t\\tbalanceOf(address(this)) > baluniBalance,\\r\\n\\t\\t\\t\\t\\\"Arbitrage did not profit\\\"\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction singleSwap(\\r\\n\\t\\taddress token0,\\r\\n\\t\\taddress token1,\\r\\n\\t\\tuint256 tokenBalance,\\r\\n\\t\\taddress receiver\\r\\n\\t) private returns (uint256 amountOut) {\\r\\n\\t\\tISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputSingleParams({\\r\\n\\t\\t\\t\\ttokenIn: token0,\\r\\n\\t\\t\\t\\ttokenOut: token1,\\r\\n\\t\\t\\t\\tfee: 3000,\\r\\n\\t\\t\\t\\trecipient: address(receiver),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: tokenBalance,\\r\\n\\t\\t\\t\\tamountOutMinimum: 0,\\r\\n\\t\\t\\t\\tsqrtPriceLimitX96: 0\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\treturn uniswapRouter.exactInputSingle(params);\\r\\n\\t}\\r\\n\\r\\n\\tfunction multiHopSwap(\\r\\n\\t\\taddress token0,\\r\\n\\t\\taddress token1,\\r\\n\\t\\taddress token2,\\r\\n\\t\\tuint256 tokenBalance,\\r\\n\\t\\taddress receiver\\r\\n\\t) private returns (uint256 amountOut) {\\r\\n\\t\\tISwapRouter.ExactInputParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputParams({\\r\\n\\t\\t\\t\\tpath: abi.encodePacked(\\r\\n\\t\\t\\t\\t\\ttoken0,\\r\\n\\t\\t\\t\\t\\tuint24(3000),\\r\\n\\t\\t\\t\\t\\ttoken1,\\r\\n\\t\\t\\t\\t\\tuint24(3000),\\r\\n\\t\\t\\t\\t\\ttoken2\\r\\n\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\trecipient: address(receiver),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: tokenBalance,\\r\\n\\t\\t\\t\\tamountOutMinimum: 0\\r\\n\\t\\t\\t});\\r\\n\\t\\treturn uniswapRouter.exactInput(params);\\r\\n\\t}\\r\\n\\r\\n\\tfunction secureApproval(\\r\\n\\t\\taddress token,\\r\\n\\t\\taddress spender,\\r\\n\\t\\tuint256 amount\\r\\n\\t) internal {\\r\\n\\t\\tIERC20 _token = IERC20(token);\\r\\n\\t\\tuint256 currentAllowance = _token.allowance(address(this), spender);\\r\\n\\r\\n\\t\\tif (currentAllowance != amount) {\\r\\n\\t\\t\\tif (currentAllowance != 0) {\\r\\n\\t\\t\\t\\t_token.approve(spender, 0);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t_token.approve(spender, amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction rebalance(\\r\\n\\t\\taddress[] calldata assets,\\r\\n\\t\\tuint256[] calldata weights\\r\\n\\t) external returns (bool) {\\r\\n\\t\\tuint256 totalValue;\\r\\n\\r\\n\\t\\tfor (uint256 i; i < assets.length; i++) {\\r\\n\\t\\t\\tuint256 balance = IERC20(assets[i]).balanceOf(msg.sender);\\r\\n\\t\\t\\tuint256 tokenValuation = _calculateTokenValuation(\\r\\n\\t\\t\\t\\tbalance,\\r\\n\\t\\t\\t\\tassets[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\ttotalValue += tokenValuation;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256[] memory overweightVaults = new uint256[](assets.length);\\r\\n\\t\\tuint256[] memory overweightAmounts = new uint256[](assets.length);\\r\\n\\t\\tuint256[] memory underweightVaults = new uint256[](assets.length);\\r\\n\\t\\tuint256[] memory underweightAmounts = new uint256[](assets.length);\\r\\n\\r\\n\\t\\tuint256 overweightVaultsLength;\\r\\n\\t\\tuint256 underweightVaultsLength;\\r\\n\\t\\tuint256 overweightAmount;\\r\\n\\t\\tuint256 overweightPercent;\\r\\n\\t\\tuint256 targetWeight;\\r\\n\\t\\tuint256 currentWeight;\\r\\n\\t\\tuint256 totalActiveWeight;\\r\\n\\r\\n\\t\\tbool overweight;\\r\\n\\r\\n\\t\\tfor (uint256 i; i < assets.length; i++) {\\r\\n\\t\\t\\tuint256 balance = IERC20(assets[i]).balanceOf(msg.sender);\\r\\n\\t\\t\\tuint256 decimals = IERC20Metadata(assets[i]).decimals();\\r\\n\\t\\t\\tuint256 tokensTotalValue = _calculateTokenValuation(\\r\\n\\t\\t\\t\\tbalance,\\r\\n\\t\\t\\t\\tassets[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\ttargetWeight = weights[i];\\r\\n\\t\\t\\tcurrentWeight = tokensTotalValue / (10000) / (totalValue);\\r\\n\\t\\t\\toverweight = currentWeight > targetWeight;\\r\\n\\t\\t\\toverweightPercent = overweight\\r\\n\\t\\t\\t\\t? currentWeight - (targetWeight)\\r\\n\\t\\t\\t\\t: targetWeight - (currentWeight);\\r\\n\\t\\t\\tuint256 price = _calculateTokenValuation(\\r\\n\\t\\t\\t\\t1 * 10 ** decimals,\\r\\n\\t\\t\\t\\tassets[i]\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tif (overweight) {\\r\\n\\t\\t\\t\\toverweightAmount = (overweightPercent * (totalValue)) / (10000);\\r\\n\\t\\t\\t\\toverweightAmount = (overweightAmount * (1e18)) / (price);\\r\\n\\t\\t\\t\\toverweightVaults[overweightVaultsLength] = i;\\r\\n\\t\\t\\t\\toverweightAmounts[overweightVaultsLength] = overweightAmount;\\r\\n\\t\\t\\t\\toverweightVaultsLength++;\\r\\n\\t\\t\\t} else if (!overweight) {\\r\\n\\t\\t\\t\\ttotalActiveWeight += overweightPercent;\\r\\n\\t\\t\\t\\toverweightAmount = overweightPercent;\\r\\n\\t\\t\\t\\t// overweightAmount = overweightPercent.mul(totalValue).div(10000);\\r\\n\\t\\t\\t\\tunderweightVaults[underweightVaultsLength] = i;\\r\\n\\t\\t\\t\\tunderweightAmounts[underweightVaultsLength] = overweightAmount;\\r\\n\\t\\t\\t\\tunderweightVaultsLength++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Resize overweightVaults and overweightAmounts to the actual overweighted vaults\\r\\n\\t\\toverweightVaults = _resize(overweightVaults, overweightVaultsLength);\\r\\n\\t\\toverweightAmounts = _resize(overweightAmounts, overweightVaultsLength);\\r\\n\\t\\t// Resize overweightVaults and overweightAmounts to the actual overweighted vaults\\r\\n\\t\\tunderweightVaults = _resize(underweightVaults, underweightVaultsLength);\\r\\n\\t\\tunderweightAmounts = _resize(\\r\\n\\t\\t\\tunderweightAmounts,\\r\\n\\t\\t\\tunderweightVaultsLength\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tfor (uint256 i; i < overweightVaults.length; i++) {\\r\\n\\t\\t\\tif (overweightAmounts[i] > 0) {\\r\\n\\t\\t\\t\\tIERC20(address(assets[overweightVaults[i]])).transferFrom(\\r\\n\\t\\t\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\t\\toverweightAmounts[i]\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\taddress pool = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t3000\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\tsecureApproval(\\r\\n\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\taddress(uniswapRouter),\\r\\n\\t\\t\\t\\t\\toverweightAmounts[i]\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint singleSwapResult = singleSwap(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\toverweightAmounts[i],\\r\\n\\t\\t\\t\\t\\t\\tunderweightVaults.length == 0\\r\\n\\t\\t\\t\\t\\t\\t\\t? msg.sender\\r\\n\\t\\t\\t\\t\\t\\t\\t: address(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[overweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\toverweightAmounts[i],\\r\\n\\t\\t\\t\\t\\t\\tunderweightVaults.length == 0\\r\\n\\t\\t\\t\\t\\t\\t\\t? msg.sender\\r\\n\\t\\t\\t\\t\\t\\t\\t: address(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfor (uint256 i; i < underweightVaults.length; i++) {\\r\\n\\t\\t\\tif (underweightAmounts[i] > 0) {\\r\\n\\t\\t\\t\\tuint256 rebaseActiveWgt = (underweightAmounts[i] * (10000)) /\\r\\n\\t\\t\\t\\t\\t(totalActiveWeight);\\r\\n\\r\\n\\t\\t\\t\\tuint256 rebBuyQty = (rebaseActiveWgt *\\r\\n\\t\\t\\t\\t\\tIERC20(USDC).balanceOf(msg.sender) *\\r\\n\\t\\t\\t\\t\\t1e12) / (10000);\\r\\n\\r\\n\\t\\t\\t\\tif (\\r\\n\\t\\t\\t\\t\\trebBuyQty > 0 &&\\r\\n\\t\\t\\t\\t\\trebBuyQty <= IERC20(USDC).balanceOf(msg.sender) * 1e12\\r\\n\\t\\t\\t\\t) {\\r\\n\\t\\t\\t\\t\\taddress pool = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\t3000\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tsecureApproval(\\r\\n\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\taddress(uniswapRouter),\\r\\n\\t\\t\\t\\t\\t\\tunderweightAmounts[i] / 1e12\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\tif (pool != address(0)) {\\r\\n\\t\\t\\t\\t\\t\\tuint singleSwapResult = singleSwap(\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\t\\tunderweightAmounts[i] / 1e12,\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuint256 amountToTransfer = calculateNetAmountAfterFee(\\r\\n\\t\\t\\t\\t\\t\\t\\tsingleSwapResult\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\tIERC20(USDC).transfer(msg.sender, amountToTransfer);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\trequire(\\r\\n\\t\\t\\t\\t\\t\\t\\tsingleSwapResult > 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"Swap Failed, Try Burn()\\\"\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tuint256 amountOutHop = multiHopSwap(\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(assets[underweightVaults[i]]),\\r\\n\\t\\t\\t\\t\\t\\t\\tunderweightAmounts[i] / 1e12,\\r\\n\\t\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tuint256 amountToTransfer = calculateNetAmountAfterFee(\\r\\n\\t\\t\\t\\t\\t\\t\\tamountOutHop\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\tIERC20(USDC).transfer(msg.sender, amountToTransfer);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\trequire(amountOutHop > 0, \\\"Swap Failed\\\");\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _resize(\\r\\n\\t\\tuint256[] memory arr,\\r\\n\\t\\tuint256 size\\r\\n\\t) internal pure returns (uint256[] memory) {\\r\\n\\t\\tuint256[] memory ret = new uint256[](size);\\r\\n\\t\\tfor (uint256 i; i < size; i++) {\\r\\n\\t\\t\\tret[i] = arr[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn ret;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x0521a6b1bd6470a9a34b5da61ec488e093fe6f4979e2bc10ea6dc045b1989982\",\"license\":\"MIT\"},\"contracts/core/BaluniStake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\n\\r\\ncontract BaluniStake is ReentrancyGuard {\\r\\n\\tIERC20 public immutable stakingToken;\\r\\n\\tIERC20 public immutable rewardToken;\\r\\n\\r\\n\\tmapping(address => uint256) public balanceStakedOf;\\r\\n\\tmapping(address => uint256) public stakeTimestamp;\\r\\n\\tuint256 public stakingSupply;\\r\\n\\r\\n\\tuint256 private constant MULTIPLIER = 1e18;\\r\\n\\tuint256 private rewardIndex;\\r\\n\\tmapping(address => uint256) private rewardIndexOf;\\r\\n\\tmapping(address => uint256) private earned;\\r\\n\\r\\n\\tuint256 private constant STAKING_PERIOD = 365 days;\\r\\n\\r\\n\\tevent RewardClaimed(address indexed user, uint256 amount);\\r\\n\\tevent Staked(address indexed user, uint256 amount);\\r\\n\\tevent Unstaked(address indexed user, uint256 amount);\\r\\n\\r\\n\\tconstructor(address _stakingToken, address _rewardToken) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_stakingToken != address(0) && _rewardToken != address(0),\\r\\n\\t\\t\\t\\\"Invalid token address\\\"\\r\\n\\t\\t);\\r\\n\\t\\tstakingToken = IERC20(_stakingToken);\\r\\n\\t\\trewardToken = IERC20(_rewardToken);\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRewardIndex(uint256 reward) internal {\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\trewardIndex += (reward * MULTIPLIER) / stakingSupply;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRewardIndexPublic(uint256 reward) public {\\r\\n\\t\\trequire(reward > 0, \\\"Reward must be positive\\\");\\r\\n\\t\\trequire(stakingSupply > 0, \\\"No staking supply to distribute rewards\\\");\\r\\n\\t\\trewardToken.transferFrom(msg.sender, address(this), reward);\\r\\n\\t\\tupdateRewardIndex(reward);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateRewards(address account) private view returns (uint256) {\\r\\n\\t\\tuint256 timeStaked = block.timestamp - stakeTimestamp[account];\\r\\n\\t\\ttimeStaked = timeStaked > STAKING_PERIOD ? STAKING_PERIOD : timeStaked;\\r\\n\\t\\tuint256 shares = balanceStakedOf[account];\\r\\n\\t\\tuint256 rewardDelta = rewardIndex - rewardIndexOf[account];\\r\\n\\t\\treturn\\r\\n\\t\\t\\t(shares * timeStaked * rewardDelta) / MULTIPLIER / STAKING_PERIOD;\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateRewardsEarned(\\r\\n\\t\\taddress account\\r\\n\\t) external view returns (uint256) {\\r\\n\\t\\treturn earned[account] + _calculateRewards(account);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _updateRewards(address account) internal {\\r\\n\\t\\tuint256 rewards = _calculateRewards(account);\\r\\n\\t\\tearned[account] += rewards;\\r\\n\\t\\trewardIndexOf[account] = rewardIndex;\\r\\n\\t}\\r\\n\\r\\n\\tfunction stake(uint256 amount) external nonReentrant {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tbalanceStakedOf[msg.sender] += amount;\\r\\n\\t\\tstakingSupply += amount;\\r\\n\\t\\tstakeTimestamp[msg.sender] = block.timestamp;\\r\\n\\t\\tstakingToken.transferFrom(msg.sender, address(this), amount);\\r\\n\\t\\temit Staked(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction unstake(uint256 amount) external nonReentrant {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tuint256 currentBalance = balanceStakedOf[msg.sender];\\r\\n\\t\\trequire(currentBalance >= amount, \\\"Insufficient balance to unstake\\\");\\r\\n\\t\\tbalanceStakedOf[msg.sender] = currentBalance - amount;\\r\\n\\t\\tstakingSupply -= amount;\\r\\n\\t\\tstakingToken.transfer(msg.sender, amount);\\r\\n\\t\\temit Unstaked(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction claim() external nonReentrant returns (uint256) {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tuint256 reward = earned[msg.sender];\\r\\n\\t\\trequire(reward > 0, \\\"No rewards to claim\\\");\\r\\n\\t\\tearned[msg.sender] = 0;\\r\\n\\t\\trewardToken.transfer(msg.sender, reward);\\r\\n\\t\\temit RewardClaimed(msg.sender, reward);\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n\\r\\n\\tfunction claimTo(\\r\\n\\t\\taddress staker,\\r\\n\\t\\taddress _to\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\t_updateRewards(staker);\\r\\n\\t\\tuint256 reward = earned[staker];\\r\\n\\t\\trequire(reward > 0, \\\"No rewards to claim\\\");\\r\\n\\t\\tearned[staker] = 0;\\r\\n\\t\\trewardToken.transfer(_to, reward);\\r\\n\\t\\temit RewardClaimed(_to, reward);\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xc68998647c0e869e5e3a210496994c35c211e97bb654e0510abb0e9f60e936b9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/core/BaluniStake.sol":{"BaluniStake":{"abi":[{"inputs":[{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceStakedOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"calculateRewardsEarned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"claimTo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakeTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"updateRewardIndexPublic","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":293,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c03461010a57601f610bb438819003918201601f19168301916001600160401b0383118484101761010f57808492604094855283398101031261010a57610052602061004b83610125565b9201610125565b60016000556001600160a01b03918216801515806100ff575b156100ba576080521660a052604051610a7a908161013a82396080518181816103980152818161048a01526107c7015260a05181818160ba015281816101950152818161056a015261069e0152f35b60405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b50828216151561006b565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361010a5756fe6040608081526004908136101561001557600080fd5b600091823560e01c9081632e17de781461072857816334a1ca89146105f55781634e71d92d146104e557816370259077146104ae57816372f702f31461046a5781638b0867641461041f578163a694fc3a146102fc578163ab86c69e1461013657508063bf9c89bb14610100578063f377e7cf146100e25763f7c618c11461009c57600080fd5b346100de57816003193601126100de57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346100de57816003193601126100de576020906003549051908152f35b50346100de5760203660031901126100de57806020926001600160a01b03610126610868565b1681526001845220549051908152f35b919050346102f8576020806003193601126102f45782359182156102b357600354156102625780516323b872dd60e01b815233858201908152306020820152604081018590529091908390839081906060010381896001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115610259575061022b575b505060035490811580156101d6578480f35b670de0b6b3a7640000808302928304036102185761020557906101fb91048254610942565b9055388080808480f35b634e487b7160e01b845260128352602484fd5b634e487b7160e01b855260118452602485fd5b8161024a92903d10610252575b61024281836108a6565b8101906108de565b5038806101c4565b503d610238565b513d87823e3d90fd5b5162461bcd60e51b81529283015250602760248201527f4e6f207374616b696e6720737570706c7920746f2064697374726962757465206044820152667265776172647360c81b6064820152608490fd5b5162461bcd60e51b81529283015250601760248201527f526577617264206d75737420626520706f7369746976650000000000000000006044820152606490fd5b8380fd5b8280fd5b9050346102f8576020806003193601126102f45761038b92818335809461032161094f565b61032a33610972565b3388526001835283882061033f838254610942565b905561034d82600354610942565b600355338089526002845284892042905584516323b872dd60e01b815291820190815230602082015260408101929092529586918291606090910190565b0381886001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1938415610415577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d93946103f8575b50519283523392a26001815580f35b61040e90833d85116102525761024281836108a6565b50386103e9565b81513d87823e3d90fd5b5050346100de5760203660031901126100de5761046360209261045d83610444610868565b926001600160a01b0384168152600687522054916109c8565b90610942565b9051908152f35b5050346100de57816003193601126100de57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346100de5760203660031901126100de57806020926001600160a01b036104d5610868565b1681526002845220549051908152f35b919050346102f857826003193601126102f85761050061094f565b61050933610972565b3383526020926006845261055d848383205480956105288215156108f6565b3380865260068452868620869055865163a9059cbb60e01b815291820190815260208101929092529283918291604090910190565b0381856001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156105eb5790600192916105ce575b5082518481527f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241863392a25551908152f35b6105e490863d88116102525761024281836108a6565b503861059c565b83513d84823e3d90fd5b919050346102f857806003193601126102f857610610610868565b6001600160a01b039390602435858116918282036102f457908661069a9261063661094f565b61063f81610972565b168085526020978892600684528688812054998a9461065f8615156108f6565b825260068652818a81205589519687958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1801561071e57906001939291610701575b507f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241868551878152a25551908152f35b61071790873d89116102525761024281836108a6565b50386106d1565b84513d85823e3d90fd5b919050346102f857602090816003193601126102f45782359261074961094f565b61075233610972565b3385526001835281852054848110610826579284819392610777826107ba9897610883565b338952600184528489205561078e82600354610883565b600355835163a9059cbb60e01b8152339181019182526020820192909252909586918291604090910190565b0381886001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1938415610415577f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7593946103f85750519283523392a26001815580f35b5082606492519162461bcd60e51b8352820152601f60248201527f496e73756666696369656e742062616c616e636520746f20756e7374616b65006044820152fd5b600435906001600160a01b038216820361087e57565b600080fd5b9190820391821161089057565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176108c857604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261087e5751801515810361087e5790565b156108fd57565b60405162461bcd60e51b815260206004820152601360248201527f4e6f207265776172647320746f20636c61696d000000000000000000000000006044820152606490fd5b9190820180921161089057565b600260005414610960576002600055565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b03610983826109c8565b91169081600052600660205261099f6040600020918254610942565b9055600454906000526005602052604060002055565b8181029291811591840414171561089057565b6001600160a01b0316670de0b6b3a7640000610a3960008381526002602052610a346109f8604083205442610883565b6301e13380959086811115610a3e575085905b83526001602052610a2e6040842054936040600454916005602052205490610883565b926109b5565b6109b5565b040490565b90610a0b56fea26469706673582212200eb56b0ececfdcc71b314431b0045f0dac3c6ffd3b5e865683dd6b31318d96f164736f6c63430008190033","opcodes":"PUSH1 0xC0 CALLVALUE PUSH2 0x10A JUMPI PUSH1 0x1F PUSH2 0xBB4 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x10A JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x125 JUMP JUMPDEST SWAP3 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 ISZERO ISZERO DUP1 PUSH2 0xFF JUMPI JUMPDEST ISZERO PUSH2 0xBA JUMPI PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP1 DUP2 PUSH2 0x13A DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x398 ADD MSTORE DUP2 DUP2 PUSH2 0x48A ADD MSTORE PUSH2 0x7C7 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH1 0xBA ADD MSTORE DUP2 DUP2 PUSH2 0x195 ADD MSTORE DUP2 DUP2 PUSH2 0x56A ADD MSTORE PUSH2 0x69E ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 DUP3 AND ISZERO ISZERO PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10A JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2E17DE78 EQ PUSH2 0x728 JUMPI DUP2 PUSH4 0x34A1CA89 EQ PUSH2 0x5F5 JUMPI DUP2 PUSH4 0x4E71D92D EQ PUSH2 0x4E5 JUMPI DUP2 PUSH4 0x70259077 EQ PUSH2 0x4AE JUMPI DUP2 PUSH4 0x72F702F3 EQ PUSH2 0x46A JUMPI DUP2 PUSH4 0x8B086764 EQ PUSH2 0x41F JUMPI DUP2 PUSH4 0xA694FC3A EQ PUSH2 0x2FC JUMPI DUP2 PUSH4 0xAB86C69E EQ PUSH2 0x136 JUMPI POP DUP1 PUSH4 0xBF9C89BB EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF377E7CF EQ PUSH2 0xE2 JUMPI PUSH4 0xF7C618C1 EQ PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x126 PUSH2 0x868 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F4 JUMPI DUP3 CALLDATALOAD SWAP2 DUP3 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x3 SLOAD ISZERO PUSH2 0x262 JUMPI DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x259 JUMPI POP PUSH2 0x22B JUMPI JUMPDEST POP POP PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI DUP5 DUP1 RETURN JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x218 JUMPI PUSH2 0x205 JUMPI SWAP1 PUSH2 0x1FB SWAP2 DIV DUP3 SLOAD PUSH2 0x942 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 DUP5 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP2 PUSH2 0x24A SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x252 JUMPI JUMPDEST PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x8DE JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x1C4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x238 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B696E6720737570706C7920746F206469737472696275746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x72657761726473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F4 JUMPI PUSH2 0x38B SWAP3 DUP2 DUP4 CALLDATALOAD DUP1 SWAP5 PUSH2 0x321 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x32A CALLER PUSH2 0x972 JUMP JUMPDEST CALLER DUP9 MSTORE PUSH1 0x1 DUP4 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0x33F DUP4 DUP3 SLOAD PUSH2 0x942 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x34D DUP3 PUSH1 0x3 SLOAD PUSH2 0x942 JUMP JUMPDEST PUSH1 0x3 SSTORE CALLER DUP1 DUP10 MSTORE PUSH1 0x2 DUP5 MSTORE DUP5 DUP10 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x415 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP4 SWAP5 PUSH2 0x3F8 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x40E SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x252 JUMPI PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST POP CODESIZE PUSH2 0x3E9 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x463 PUSH1 0x20 SWAP3 PUSH2 0x45D DUP4 PUSH2 0x444 PUSH2 0x868 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP8 MSTORE KECCAK256 SLOAD SWAP2 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 PUSH2 0x942 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xDE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4D5 PUSH2 0x868 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F8 JUMPI PUSH2 0x500 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x509 CALLER PUSH2 0x972 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x6 DUP5 MSTORE PUSH2 0x55D DUP5 DUP4 DUP4 KECCAK256 SLOAD DUP1 SWAP6 PUSH2 0x528 DUP3 ISZERO ISZERO PUSH2 0x8F6 JUMP JUMPDEST CALLER DUP1 DUP7 MSTORE PUSH1 0x6 DUP5 MSTORE DUP7 DUP7 KECCAK256 DUP7 SWAP1 SSTORE DUP7 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x5EB JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x5CE JUMPI JUMPDEST POP DUP3 MLOAD DUP5 DUP2 MSTORE PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP7 CALLER SWAP3 LOG2 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5E4 SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x252 JUMPI PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST POP CODESIZE PUSH2 0x59C JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F8 JUMPI PUSH2 0x610 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 PUSH1 0x24 CALLDATALOAD DUP6 DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x2F4 JUMPI SWAP1 DUP7 PUSH2 0x69A SWAP3 PUSH2 0x636 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x63F DUP2 PUSH2 0x972 JUMP JUMPDEST AND DUP1 DUP6 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 PUSH1 0x6 DUP5 MSTORE DUP7 DUP9 DUP2 KECCAK256 SLOAD SWAP10 DUP11 SWAP5 PUSH2 0x65F DUP7 ISZERO ISZERO PUSH2 0x8F6 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP2 DUP11 DUP2 KECCAK256 SSTORE DUP10 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x71E JUMPI SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 PUSH2 0x701 JUMPI JUMPDEST POP PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP7 DUP6 MLOAD DUP8 DUP2 MSTORE LOG2 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x717 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x252 JUMPI PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST POP CODESIZE PUSH2 0x6D1 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F4 JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0x749 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x752 CALLER PUSH2 0x972 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x1 DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD DUP5 DUP2 LT PUSH2 0x826 JUMPI SWAP3 DUP5 DUP2 SWAP4 SWAP3 PUSH2 0x777 DUP3 PUSH2 0x7BA SWAP9 SWAP8 PUSH2 0x883 JUMP JUMPDEST CALLER DUP10 MSTORE PUSH1 0x1 DUP5 MSTORE DUP5 DUP10 KECCAK256 SSTORE PUSH2 0x78E DUP3 PUSH1 0x3 SLOAD PUSH2 0x883 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x415 JUMPI PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP4 SWAP5 PUSH2 0x3F8 JUMPI POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F20756E7374616B6500 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x87E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x87E JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x87E JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8FD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x960 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x983 DUP3 PUSH2 0x9C8 JUMP JUMPDEST SWAP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x99F PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x942 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x4 SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH8 0xDE0B6B3A7640000 PUSH2 0xA39 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xA34 PUSH2 0x9F8 PUSH1 0x40 DUP4 KECCAK256 SLOAD TIMESTAMP PUSH2 0x883 JUMP JUMPDEST PUSH4 0x1E13380 SWAP6 SWAP1 DUP7 DUP2 GT ISZERO PUSH2 0xA3E JUMPI POP DUP6 SWAP1 JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xA2E PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP4 PUSH1 0x40 PUSH1 0x4 SLOAD SWAP2 PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x883 JUMP JUMPDEST SWAP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST DIV DIV SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA0B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xB5 PUSH12 0xECECFDCC71B314431B0045F 0xD 0xAC EXTCODECOPY PUSH16 0xFD3B5E865683DD6B31318D96F164736F PUSH13 0x63430008190033000000000000 ","sourceMap":"182:3474:20:-:0;;;;;;;;;;;;;-1:-1:-1;;182:3474:20;;;;-1:-1:-1;;;;;182:3474:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1713:1:11;-1:-1:-1;1713:1:11;-1:-1:-1;;;;;182:3474:20;;;930:27;;;;:57;;-1:-1:-1;182:3474:20;;;1026:36;;182:3474;1067:34;;182:3474;;;;;;;;1026:36;182:3474;;;;;;;;;;;;;;;1067:34;182:3474;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;182:3474:20;;;;;;;;;;;;;;;;;;;;930:57;182:3474;;;;961:26;;930:57;;182:3474;-1:-1:-1;182:3474:20;;;;;;-1:-1:-1;182:3474:20;;;;;-1:-1:-1;182:3474:20;;;;-1:-1:-1;;;;;182:3474:20;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2152,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":2270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":2370,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":2485,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":2179,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2214,"id":null,"parameterSlots":2,"returnSlots":0},"fun_calculateRewards":{"entryPoint":2504,"id":7633,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":2383,"id":1611,"parameterSlots":0,"returnSlots":0},"fun_updateRewards":{"entryPoint":2418,"id":7673,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_584c":{"entryPoint":2294,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"7442":[{"length":32,"start":920},{"length":32,"start":1162},{"length":32,"start":1991}],"7445":[{"length":32,"start":186},{"length":32,"start":405},{"length":32,"start":1386},{"length":32,"start":1694}]},"linkReferences":{},"object":"6040608081526004908136101561001557600080fd5b600091823560e01c9081632e17de781461072857816334a1ca89146105f55781634e71d92d146104e557816370259077146104ae57816372f702f31461046a5781638b0867641461041f578163a694fc3a146102fc578163ab86c69e1461013657508063bf9c89bb14610100578063f377e7cf146100e25763f7c618c11461009c57600080fd5b346100de57816003193601126100de57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346100de57816003193601126100de576020906003549051908152f35b50346100de5760203660031901126100de57806020926001600160a01b03610126610868565b1681526001845220549051908152f35b919050346102f8576020806003193601126102f45782359182156102b357600354156102625780516323b872dd60e01b815233858201908152306020820152604081018590529091908390839081906060010381896001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115610259575061022b575b505060035490811580156101d6578480f35b670de0b6b3a7640000808302928304036102185761020557906101fb91048254610942565b9055388080808480f35b634e487b7160e01b845260128352602484fd5b634e487b7160e01b855260118452602485fd5b8161024a92903d10610252575b61024281836108a6565b8101906108de565b5038806101c4565b503d610238565b513d87823e3d90fd5b5162461bcd60e51b81529283015250602760248201527f4e6f207374616b696e6720737570706c7920746f2064697374726962757465206044820152667265776172647360c81b6064820152608490fd5b5162461bcd60e51b81529283015250601760248201527f526577617264206d75737420626520706f7369746976650000000000000000006044820152606490fd5b8380fd5b8280fd5b9050346102f8576020806003193601126102f45761038b92818335809461032161094f565b61032a33610972565b3388526001835283882061033f838254610942565b905561034d82600354610942565b600355338089526002845284892042905584516323b872dd60e01b815291820190815230602082015260408101929092529586918291606090910190565b0381886001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1938415610415577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d93946103f8575b50519283523392a26001815580f35b61040e90833d85116102525761024281836108a6565b50386103e9565b81513d87823e3d90fd5b5050346100de5760203660031901126100de5761046360209261045d83610444610868565b926001600160a01b0384168152600687522054916109c8565b90610942565b9051908152f35b5050346100de57816003193601126100de57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346100de5760203660031901126100de57806020926001600160a01b036104d5610868565b1681526002845220549051908152f35b919050346102f857826003193601126102f85761050061094f565b61050933610972565b3383526020926006845261055d848383205480956105288215156108f6565b3380865260068452868620869055865163a9059cbb60e01b815291820190815260208101929092529283918291604090910190565b0381856001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156105eb5790600192916105ce575b5082518481527f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241863392a25551908152f35b6105e490863d88116102525761024281836108a6565b503861059c565b83513d84823e3d90fd5b919050346102f857806003193601126102f857610610610868565b6001600160a01b039390602435858116918282036102f457908661069a9261063661094f565b61063f81610972565b168085526020978892600684528688812054998a9461065f8615156108f6565b825260068652818a81205589519687958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1801561071e57906001939291610701575b507f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241868551878152a25551908152f35b61071790873d89116102525761024281836108a6565b50386106d1565b84513d85823e3d90fd5b919050346102f857602090816003193601126102f45782359261074961094f565b61075233610972565b3385526001835281852054848110610826579284819392610777826107ba9897610883565b338952600184528489205561078e82600354610883565b600355835163a9059cbb60e01b8152339181019182526020820192909252909586918291604090910190565b0381886001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1938415610415577f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7593946103f85750519283523392a26001815580f35b5082606492519162461bcd60e51b8352820152601f60248201527f496e73756666696369656e742062616c616e636520746f20756e7374616b65006044820152fd5b600435906001600160a01b038216820361087e57565b600080fd5b9190820391821161089057565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176108c857604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261087e5751801515810361087e5790565b156108fd57565b60405162461bcd60e51b815260206004820152601360248201527f4e6f207265776172647320746f20636c61696d000000000000000000000000006044820152606490fd5b9190820180921161089057565b600260005414610960576002600055565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b03610983826109c8565b91169081600052600660205261099f6040600020918254610942565b9055600454906000526005602052604060002055565b8181029291811591840414171561089057565b6001600160a01b0316670de0b6b3a7640000610a3960008381526002602052610a346109f8604083205442610883565b6301e13380959086811115610a3e575085905b83526001602052610a2e6040842054936040600454916005602052205490610883565b926109b5565b6109b5565b040490565b90610a0b56fea26469706673582212200eb56b0ececfdcc71b314431b0045f0dac3c6ffd3b5e865683dd6b31318d96f164736f6c63430008190033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2E17DE78 EQ PUSH2 0x728 JUMPI DUP2 PUSH4 0x34A1CA89 EQ PUSH2 0x5F5 JUMPI DUP2 PUSH4 0x4E71D92D EQ PUSH2 0x4E5 JUMPI DUP2 PUSH4 0x70259077 EQ PUSH2 0x4AE JUMPI DUP2 PUSH4 0x72F702F3 EQ PUSH2 0x46A JUMPI DUP2 PUSH4 0x8B086764 EQ PUSH2 0x41F JUMPI DUP2 PUSH4 0xA694FC3A EQ PUSH2 0x2FC JUMPI DUP2 PUSH4 0xAB86C69E EQ PUSH2 0x136 JUMPI POP DUP1 PUSH4 0xBF9C89BB EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF377E7CF EQ PUSH2 0xE2 JUMPI PUSH4 0xF7C618C1 EQ PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x126 PUSH2 0x868 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F4 JUMPI DUP3 CALLDATALOAD SWAP2 DUP3 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x3 SLOAD ISZERO PUSH2 0x262 JUMPI DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x259 JUMPI POP PUSH2 0x22B JUMPI JUMPDEST POP POP PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI DUP5 DUP1 RETURN JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x218 JUMPI PUSH2 0x205 JUMPI SWAP1 PUSH2 0x1FB SWAP2 DIV DUP3 SLOAD PUSH2 0x942 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 DUP5 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP2 PUSH2 0x24A SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x252 JUMPI JUMPDEST PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x8DE JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x1C4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x238 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B696E6720737570706C7920746F206469737472696275746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x72657761726473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F4 JUMPI PUSH2 0x38B SWAP3 DUP2 DUP4 CALLDATALOAD DUP1 SWAP5 PUSH2 0x321 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x32A CALLER PUSH2 0x972 JUMP JUMPDEST CALLER DUP9 MSTORE PUSH1 0x1 DUP4 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0x33F DUP4 DUP3 SLOAD PUSH2 0x942 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x34D DUP3 PUSH1 0x3 SLOAD PUSH2 0x942 JUMP JUMPDEST PUSH1 0x3 SSTORE CALLER DUP1 DUP10 MSTORE PUSH1 0x2 DUP5 MSTORE DUP5 DUP10 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x415 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP4 SWAP5 PUSH2 0x3F8 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x40E SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x252 JUMPI PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST POP CODESIZE PUSH2 0x3E9 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x463 PUSH1 0x20 SWAP3 PUSH2 0x45D DUP4 PUSH2 0x444 PUSH2 0x868 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP8 MSTORE KECCAK256 SLOAD SWAP2 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 PUSH2 0x942 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xDE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4D5 PUSH2 0x868 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F8 JUMPI PUSH2 0x500 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x509 CALLER PUSH2 0x972 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x6 DUP5 MSTORE PUSH2 0x55D DUP5 DUP4 DUP4 KECCAK256 SLOAD DUP1 SWAP6 PUSH2 0x528 DUP3 ISZERO ISZERO PUSH2 0x8F6 JUMP JUMPDEST CALLER DUP1 DUP7 MSTORE PUSH1 0x6 DUP5 MSTORE DUP7 DUP7 KECCAK256 DUP7 SWAP1 SSTORE DUP7 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x5EB JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x5CE JUMPI JUMPDEST POP DUP3 MLOAD DUP5 DUP2 MSTORE PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP7 CALLER SWAP3 LOG2 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5E4 SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x252 JUMPI PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST POP CODESIZE PUSH2 0x59C JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F8 JUMPI PUSH2 0x610 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 PUSH1 0x24 CALLDATALOAD DUP6 DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x2F4 JUMPI SWAP1 DUP7 PUSH2 0x69A SWAP3 PUSH2 0x636 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x63F DUP2 PUSH2 0x972 JUMP JUMPDEST AND DUP1 DUP6 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 PUSH1 0x6 DUP5 MSTORE DUP7 DUP9 DUP2 KECCAK256 SLOAD SWAP10 DUP11 SWAP5 PUSH2 0x65F DUP7 ISZERO ISZERO PUSH2 0x8F6 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP2 DUP11 DUP2 KECCAK256 SSTORE DUP10 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL DUP1 ISZERO PUSH2 0x71E JUMPI SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 PUSH2 0x701 JUMPI JUMPDEST POP PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP7 DUP6 MLOAD DUP8 DUP2 MSTORE LOG2 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x717 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x252 JUMPI PUSH2 0x242 DUP2 DUP4 PUSH2 0x8A6 JUMP JUMPDEST POP CODESIZE PUSH2 0x6D1 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2F8 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2F4 JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0x749 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x752 CALLER PUSH2 0x972 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x1 DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD DUP5 DUP2 LT PUSH2 0x826 JUMPI SWAP3 DUP5 DUP2 SWAP4 SWAP3 PUSH2 0x777 DUP3 PUSH2 0x7BA SWAP9 SWAP8 PUSH2 0x883 JUMP JUMPDEST CALLER DUP10 MSTORE PUSH1 0x1 DUP5 MSTORE DUP5 DUP10 KECCAK256 SSTORE PUSH2 0x78E DUP3 PUSH1 0x3 SLOAD PUSH2 0x883 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x415 JUMPI PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP4 SWAP5 PUSH2 0x3F8 JUMPI POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F20756E7374616B6500 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x87E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x87E JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x87E JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8FD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x960 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x983 DUP3 PUSH2 0x9C8 JUMP JUMPDEST SWAP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x99F PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x942 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x4 SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH8 0xDE0B6B3A7640000 PUSH2 0xA39 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xA34 PUSH2 0x9F8 PUSH1 0x40 DUP4 KECCAK256 SLOAD TIMESTAMP PUSH2 0x883 JUMP JUMPDEST PUSH4 0x1E13380 SWAP6 SWAP1 DUP7 DUP2 GT ISZERO PUSH2 0xA3E JUMPI POP DUP6 SWAP1 JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xA2E PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP4 PUSH1 0x40 PUSH1 0x4 SLOAD SWAP2 PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x883 JUMP JUMPDEST SWAP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST DIV DIV SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA0B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xB5 PUSH12 0xECECFDCC71B314431B0045F 0xD 0xAC EXTCODECOPY PUSH16 0xFD3B5E865683DD6B31318D96F164736F PUSH13 0x63430008190033000000000000 ","sourceMap":"182:3474:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;266:35:20;182:3474;;;;;;;;;;;;;;;;;;;;;;;414:28;182:3474;;;;;;;;;;;;;;-1:-1:-1;;182:3474:20;;;;;;;-1:-1:-1;;;;;182:3474:20;;:::i;:::-;;;;307:50;182:3474;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:10;;;182:3474;;1384:13;182:3474;1384:17;182:3474;;;;-1:-1:-1;;;1450:59:20;;1475:10;1450:59;;;182:3474;;;1495:4;182:3474;;;;;;;;;;;;;1495:4;;182:3474;;;;;;1450:59;:11;;-1:-1:-1;;;;;1450:11:20;182:3474;1450:59;;;;;;;;;;182:3474;;;1384:13;182:3474;1172:17;;;;;1168:87;;182:3474;;;1168:87;486:4;668:8;;;;;;;;;486:4;;;1197:52;486:4;;182:3474;;1197:52;:::i;:::-;182:3474;;1168:87;;;;182:3474;;;486:4;-1:-1:-1;;;486:4:20;;;;;;182:3474;486:4;668:8;-1:-1:-1;;;182:3474:20;;;;;;;;1450:59;;;;;;-1:-1:-1;1450:59:20;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;182:3474;;;;;;;;;;-1:-1:-1;;;182:3474:20;;;;;;-1:-1:-1;182:3474:20;;;;;;;;;;-1:-1:-1;;;182:3474:20;;;;;;;;;-1:-1:-1;;;182:3474:20;;;;;;-1:-1:-1;182:3474:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2509:60;182:3474;;;;2322:103:11;;;;:::i;:::-;2374:10:20;;;:::i;:::-;;182:3474;;;;;;;;2390:37;182:3474;;;2390:37;:::i;:::-;182:3474;;2432:23;182:3474;2432:23;182:3474;2432:23;:::i;:::-;;182:3474;2374:10;182:3474;;;2460:14;182:3474;;;;;2489:15;182:3474;;;;-1:-1:-1;;;2509:60:20;;;;;182:3474;;;2555:4;182:3474;;;;;;;;;;;;;;;;;;;;;;2509:60;;:12;;-1:-1:-1;;;;;2509:12:20;182:3474;2509:60;;;;;;;2579:26;2509:60;;;;182:3474;;;;;;2374:10;2579:26;;182:3474;;;;;2509:60;;;;;;;;;;;;;:::i;:::-;;;;;;182:3474;;;;;;;;;;;;;;;;;-1:-1:-1;;182:3474:20;;;;2066:44;182:3474;;2084:26;182:3474;;;:::i;:::-;;-1:-1:-1;;;;;182:3474:20;;;;2066:6;182:3474;;;;2084:26;;:::i;:::-;2066:44;;:::i;:::-;182:3474;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;226:36:20;182:3474;;;;;;;;;;;;-1:-1:-1;;182:3474:20;;;;;;;-1:-1:-1;;;;;182:3474:20;;:::i;:::-;;;;361:49;182:3474;;;;;;;;;;;;;;;;;;;;;;;;;2322:103:11;;:::i;:::-;3088:10:20;;;:::i;:::-;;182:3474;;;;3121:6;182:3474;;3218:40;182:3474;;;;;3152:10;;3144:42;3152:10;;;3144:42;:::i;:::-;3088:10;182:3474;;;3121:6;182:3474;;;;;;;;;;-1:-1:-1;;;3218:40:20;;;;;182:3474;;;;;;;;;;;;;;;;;;;;;3218:40;;:11;;-1:-1:-1;;;;;3218:11:20;182:3474;3218:40;;;;;;;1713:1:11;3218:40:20;;;;182:3474;;;;;;;3268:33;3088:10;;3268:33;;182:3474;;;;;;3218:40;;;;;;;;;;;;;:::i;:::-;;;;;;182:3474;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;182:3474:20;;;;;;;;;;;;;2322:103:11;;3561:33:20;2322:103:11;;;:::i;:::-;3443:6:20;;;:::i;:::-;182:3474;;;;;;;;3472:6;182:3474;;;;;;;3499:10;;;3491:42;3499:10;;;3491:42;:::i;:::-;182:3474;;3472:6;182:3474;;;;;;;;;;;;;;;;;;;3561:33;;;;182:3474;;;;;;-1:-1:-1;;;;;182:3474:20;;;;;;;;;;3561:33;;:11;;182:3474;3561:33;;;;;;;1713:1:11;3561:33:20;;;;;182:3474;;3604:26;182:3474;;;;;;3604:26;182:3474;;;;;;3561:33;;;;;;;;;;;;;:::i;:::-;;;;;;182:3474;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:103:11;;;:::i;:::-;2690:10:20;;;:::i;:::-;;182:3474;;;;;;;;;2771:24;;;182:3474;;2866:23;;;;;;;2922:41;2866:23;;;:::i;:::-;2690:10;182:3474;;;;;;;;;2894:23;182:3474;2894:23;182:3474;2894:23;:::i;:::-;;182:3474;;;-1:-1:-1;;;2922:41:20;;2690:10;2922:41;;;182:3474;;;;;;;;;;;;;;;;;;;;;;2922:41;;:12;;-1:-1:-1;;;;;2922:12:20;182:3474;2922:41;;;;;;;2973:28;2922:41;;;;182:3474;;;;;2690:10;2973:28;;182:3474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;182:3474:20;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;182:3474:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2431:307:11:-;1755:1;2558:7;182:3474:20;2558:18:11;2554:86;;1755:1;2558:7;182:3474:20;2431:307:11:o;2554:86::-;182:3474:20;;-1:-1:-1;;;2599:30:11;;;;;2120:176:20;-1:-1:-1;;;;;2193:26:20;;;:::i;:::-;182:3474;;;;-1:-1:-1;182:3474:20;2224:6;182:3474;;2224:26;182:3474;-1:-1:-1;182:3474:20;;;;2224:26;:::i;:::-;182:3474;;2280:11;182:3474;;-1:-1:-1;182:3474:20;2255:13;182:3474;;;-1:-1:-1;182:3474:20;;2120:176::o;668:8::-;;;;;;;;;;;;;;;;:::o;1549:412::-;-1:-1:-1;;;;;182:3474:20;486:4;1892:33;-1:-1:-1;182:3474:20;;;1668:14;182:3474;;1892:19;1650:41;182:3474;;;;1650:15;:41;:::i;:::-;668:8;;;1709:27;;;668:8;;;1709:57;;;;182:3474;;1788:15;182:3474;;1839:36;182:3474;;;;;;1839:11;182:3474;;1853:13;182:3474;;;;1839:36;;:::i;:::-;1892:19;;:::i;:::-;:33;:::i;:::-;486:4;;1549:412;:::o;1709:57::-;;;"},"gasEstimates":{"creation":{"codeDepositCost":"536400","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceStakedOf(address)":"2599","calculateRewardsEarned(address)":"infinite","claim()":"infinite","claimTo(address,address)":"infinite","rewardToken()":"infinite","stake(uint256)":"infinite","stakeTimestamp(address)":"2489","stakingSupply()":"2473","stakingToken()":"infinite","unstake(uint256)":"infinite","updateRewardIndexPublic(uint256)":"infinite"},"internal":{"_calculateRewards(address)":"infinite","_updateRewards(address)":"infinite","updateRewardIndex(uint256)":"infinite"}},"methodIdentifiers":{"balanceStakedOf(address)":"bf9c89bb","calculateRewardsEarned(address)":"8b086764","claim()":"4e71d92d","claimTo(address,address)":"34a1ca89","rewardToken()":"f7c618c1","stake(uint256)":"a694fc3a","stakeTimestamp(address)":"70259077","stakingSupply()":"f377e7cf","stakingToken()":"72f702f3","unstake(uint256)":"2e17de78","updateRewardIndexPublic(uint256)":"ab86c69e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceStakedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"calculateRewardsEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"updateRewardIndexPublic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaluniStake.sol\":\"BaluniStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/core/BaluniStake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\n\\r\\ncontract BaluniStake is ReentrancyGuard {\\r\\n\\tIERC20 public immutable stakingToken;\\r\\n\\tIERC20 public immutable rewardToken;\\r\\n\\r\\n\\tmapping(address => uint256) public balanceStakedOf;\\r\\n\\tmapping(address => uint256) public stakeTimestamp;\\r\\n\\tuint256 public stakingSupply;\\r\\n\\r\\n\\tuint256 private constant MULTIPLIER = 1e18;\\r\\n\\tuint256 private rewardIndex;\\r\\n\\tmapping(address => uint256) private rewardIndexOf;\\r\\n\\tmapping(address => uint256) private earned;\\r\\n\\r\\n\\tuint256 private constant STAKING_PERIOD = 365 days;\\r\\n\\r\\n\\tevent RewardClaimed(address indexed user, uint256 amount);\\r\\n\\tevent Staked(address indexed user, uint256 amount);\\r\\n\\tevent Unstaked(address indexed user, uint256 amount);\\r\\n\\r\\n\\tconstructor(address _stakingToken, address _rewardToken) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_stakingToken != address(0) && _rewardToken != address(0),\\r\\n\\t\\t\\t\\\"Invalid token address\\\"\\r\\n\\t\\t);\\r\\n\\t\\tstakingToken = IERC20(_stakingToken);\\r\\n\\t\\trewardToken = IERC20(_rewardToken);\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRewardIndex(uint256 reward) internal {\\r\\n\\t\\tif (stakingSupply > 0) {\\r\\n\\t\\t\\trewardIndex += (reward * MULTIPLIER) / stakingSupply;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateRewardIndexPublic(uint256 reward) public {\\r\\n\\t\\trequire(reward > 0, \\\"Reward must be positive\\\");\\r\\n\\t\\trequire(stakingSupply > 0, \\\"No staking supply to distribute rewards\\\");\\r\\n\\t\\trewardToken.transferFrom(msg.sender, address(this), reward);\\r\\n\\t\\tupdateRewardIndex(reward);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateRewards(address account) private view returns (uint256) {\\r\\n\\t\\tuint256 timeStaked = block.timestamp - stakeTimestamp[account];\\r\\n\\t\\ttimeStaked = timeStaked > STAKING_PERIOD ? STAKING_PERIOD : timeStaked;\\r\\n\\t\\tuint256 shares = balanceStakedOf[account];\\r\\n\\t\\tuint256 rewardDelta = rewardIndex - rewardIndexOf[account];\\r\\n\\t\\treturn\\r\\n\\t\\t\\t(shares * timeStaked * rewardDelta) / MULTIPLIER / STAKING_PERIOD;\\r\\n\\t}\\r\\n\\r\\n\\tfunction calculateRewardsEarned(\\r\\n\\t\\taddress account\\r\\n\\t) external view returns (uint256) {\\r\\n\\t\\treturn earned[account] + _calculateRewards(account);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _updateRewards(address account) internal {\\r\\n\\t\\tuint256 rewards = _calculateRewards(account);\\r\\n\\t\\tearned[account] += rewards;\\r\\n\\t\\trewardIndexOf[account] = rewardIndex;\\r\\n\\t}\\r\\n\\r\\n\\tfunction stake(uint256 amount) external nonReentrant {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tbalanceStakedOf[msg.sender] += amount;\\r\\n\\t\\tstakingSupply += amount;\\r\\n\\t\\tstakeTimestamp[msg.sender] = block.timestamp;\\r\\n\\t\\tstakingToken.transferFrom(msg.sender, address(this), amount);\\r\\n\\t\\temit Staked(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction unstake(uint256 amount) external nonReentrant {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tuint256 currentBalance = balanceStakedOf[msg.sender];\\r\\n\\t\\trequire(currentBalance >= amount, \\\"Insufficient balance to unstake\\\");\\r\\n\\t\\tbalanceStakedOf[msg.sender] = currentBalance - amount;\\r\\n\\t\\tstakingSupply -= amount;\\r\\n\\t\\tstakingToken.transfer(msg.sender, amount);\\r\\n\\t\\temit Unstaked(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction claim() external nonReentrant returns (uint256) {\\r\\n\\t\\t_updateRewards(msg.sender);\\r\\n\\t\\tuint256 reward = earned[msg.sender];\\r\\n\\t\\trequire(reward > 0, \\\"No rewards to claim\\\");\\r\\n\\t\\tearned[msg.sender] = 0;\\r\\n\\t\\trewardToken.transfer(msg.sender, reward);\\r\\n\\t\\temit RewardClaimed(msg.sender, reward);\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n\\r\\n\\tfunction claimTo(\\r\\n\\t\\taddress staker,\\r\\n\\t\\taddress _to\\r\\n\\t) public nonReentrant returns (uint256) {\\r\\n\\t\\t_updateRewards(staker);\\r\\n\\t\\tuint256 reward = earned[staker];\\r\\n\\t\\trequire(reward > 0, \\\"No rewards to claim\\\");\\r\\n\\t\\tearned[staker] = 0;\\r\\n\\t\\trewardToken.transfer(_to, reward);\\r\\n\\t\\temit RewardClaimed(_to, reward);\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xc68998647c0e869e5e3a210496994c35c211e97bb654e0510abb0e9f60e936b9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1573,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":7449,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"balanceStakedOf","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":7453,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"stakeTimestamp","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":7455,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"stakingSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":7460,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"rewardIndex","offset":0,"slot":"4","type":"t_uint256"},{"astId":7464,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"rewardIndexOf","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":7468,"contract":"contracts/core/BaluniStake.sol:BaluniStake","label":"earned","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/helpers/Oracle.sol":{"Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"_priceFeedAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608034607057601f6101e438819003918201601f19168301916001600160401b03831184841017607557808492602094604052833981010312607057516001600160a01b03811690819003607057600080546001600160a01b031916919091179055604051610158908161008c8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c638e15f4731461002a57600080fd5b346100dc57816003193601126100dc5760a08160048173ffffffffffffffffffffffffffffffffffffffff865416633fabe5a360e21b82525afa9081156100fb57829161007d575b602082604051908152f35b905060a03d60a0116100f4575b601f8101601f1916820167ffffffffffffffff8111838210176100e05760a0918391604052810103126100dc57602091506100c481610106565b506100d56080838301519201610106565b5038610072565b5080fd5b634e487b7160e01b84526041600452602484fd5b503d61008a565b6040513d84823e3d90fd5b519069ffffffffffffffffffff8216820361011d57565b600080fdfea2646970667358221220e887e4f4fe25c8c520c8829e327374b104e790ed6534b912ab86b62a2cbaeb3f64736f6c63430008190033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0x70 JUMPI PUSH1 0x1F PUSH2 0x1E4 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x75 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x70 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0x70 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x158 SWAP1 DUP2 PUSH2 0x8C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x8E15F473 EQ PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDC JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDC JUMPI PUSH1 0xA0 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 SLOAD AND PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFB JUMPI DUP3 SWAP2 PUSH2 0x7D JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0xA0 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE0 JUMPI PUSH1 0xA0 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0xDC JUMPI PUSH1 0x20 SWAP2 POP PUSH2 0xC4 DUP2 PUSH2 0x106 JUMP JUMPDEST POP PUSH2 0xD5 PUSH1 0x80 DUP4 DUP4 ADD MLOAD SWAP3 ADD PUSH2 0x106 JUMP JUMPDEST POP CODESIZE PUSH2 0x72 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x11D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DUP8 0xE4 DELEGATECALL INVALID 0x25 0xC8 0xC5 KECCAK256 0xC8 DUP3 SWAP15 ORIGIN PUSH20 0x74B104E790ED6534B912AB86B62A2CBAEB3F6473 PUSH16 0x6C634300081900330000000000000000 ","sourceMap":"80:430:21:-:0;;;;;;;;;;;;;-1:-1:-1;;80:430:21;;;;-1:-1:-1;;;;;80:430:21;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;80:430:21;;;;;;;;-1:-1:-1;80:430:21;;-1:-1:-1;;;;;;80:430:21;;;;;;;;;;;;;;;;;-1:-1:-1;80:430:21;;;;;;-1:-1:-1;80:430:21;;;;;-1:-1:-1;80:430:21"},"deployedBytecode":{"functionDebugData":{"abi_decode_uint80_fromMemory":{"entryPoint":262,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c638e15f4731461002a57600080fd5b346100dc57816003193601126100dc5760a08160048173ffffffffffffffffffffffffffffffffffffffff865416633fabe5a360e21b82525afa9081156100fb57829161007d575b602082604051908152f35b905060a03d60a0116100f4575b601f8101601f1916820167ffffffffffffffff8111838210176100e05760a0918391604052810103126100dc57602091506100c481610106565b506100d56080838301519201610106565b5038610072565b5080fd5b634e487b7160e01b84526041600452602484fd5b503d61008a565b6040513d84823e3d90fd5b519069ffffffffffffffffffff8216820361011d57565b600080fdfea2646970667358221220e887e4f4fe25c8c520c8829e327374b104e790ed6534b912ab86b62a2cbaeb3f64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x8E15F473 EQ PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDC JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDC JUMPI PUSH1 0xA0 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 SLOAD AND PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFB JUMPI DUP3 SWAP2 PUSH2 0x7D JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0xA0 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE0 JUMPI PUSH1 0xA0 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0xDC JUMPI PUSH1 0x20 SWAP2 POP PUSH2 0xC4 DUP2 PUSH2 0x106 JUMP JUMPDEST POP PUSH2 0xD5 PUSH1 0x80 DUP4 DUP4 ADD MLOAD SWAP3 ADD PUSH2 0x106 JUMP JUMPDEST POP CODESIZE PUSH2 0x72 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x11D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DUP8 0xE4 DELEGATECALL INVALID 0x25 0xC8 0xC5 KECCAK256 0xC8 DUP3 SWAP15 ORIGIN PUSH20 0x74B104E790ED6534B912AB86B62A2CBAEB3F6473 PUSH16 0x6C634300081900330000000000000000 ","sourceMap":"80:430:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;338:27;80:430;;;;;;;;;;338:27;;;;;;;;;80:430;338:27;;;80:430;;;;;;;;;338:27;;;;;;;;;;80:430;;;-1:-1:-1;;80:430:21;;;;;;;;;;;;338:27;80:430;;;;;338:27;;80:430;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;338:27;;;80:430;;;;;-1:-1:-1;;;80:430:21;;;;;;;;338:27;;;;;;80:430;;;;;;;;;;;;;;;;;;;:::o;:::-;;;"},"gasEstimates":{"creation":{"codeDepositCost":"68800","executionCost":"infinite","totalCost":"infinite"},"external":{"getLatestPrice()":"infinite"}},"methodIdentifiers":{"getLatestPrice()":"8e15f473"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/helpers/Oracle.sol\":{\"content\":\"import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract Oracle {\\r\\n\\tAggregatorV3Interface internal priceFeed;\\r\\n\\r\\n\\tconstructor(address _priceFeedAddress) {\\r\\n\\t\\tpriceFeed = AggregatorV3Interface(_priceFeedAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getLatestPrice() public view returns (uint256) {\\r\\n\\t\\t(, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n\\t\\t// Assumiamo che il prezzo sia sempre positivo\\r\\n\\t\\treturn uint256(price); // Adatta questa moltiplicazione in base alla tua necessit\\u00e0\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x3d71c8afb17be59e107fc8f69d49dc6bffef1ad3570441adebc01f187337135b\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7882,"contract":"contracts/helpers/Oracle.sol:Oracle","label":"priceFeed","offset":0,"slot":"0","type":"t_contract(AggregatorV3Interface)45"}],"types":{"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IVault.sol":{"IVault":{"abi":[{"inputs":[],"name":"controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getPricePerFullShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"underlying","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"controller()":"f77c4791","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","depositAll()":"de5f6268","getPricePerFullShare()":"77c7b8fc","governance()":"5aa6e675","name()":"06fdde03","symbol()":"95d89b41","token()":"fc0c546a","underlying()":"6f307dc3","withdraw(uint256,address,address,uint256)":"a318c1a4","withdrawAll()":"853828b6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IVault {\\r\\n\\tfunction token() external view returns (address);\\r\\n\\r\\n\\tfunction underlying() external view returns (address);\\r\\n\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\tfunction controller() external view returns (address);\\r\\n\\r\\n\\tfunction governance() external view returns (address);\\r\\n\\r\\n\\tfunction getPricePerFullShare() external view returns (uint256);\\r\\n\\r\\n\\tfunction deposit(uint256, address) external;\\r\\n\\r\\n\\tfunction depositAll() external;\\r\\n\\r\\n\\tfunction withdraw(uint256, address, address, uint256) external;\\r\\n\\r\\n\\tfunction withdrawAll() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x05b2afc937219e9aad25bf263f5b5da8394dac5710ba1dd491b3b4fa47334067\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IWETH {\\r\\n\\tfunction deposit() external payable;\\r\\n\\r\\n\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n\\tfunction withdraw(uint) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5b82f6fc97f0d5252790b4251cec7311b0f159f15014d156c27a44e34c89ea21\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libs/FullMath.sol":{"FullMath":{"abi":[],"devdoc":{"details":"Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits","kind":"dev","methods":{},"title":"Contains 512-bit math functions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220de457671b388ee13172fa558de39f0627717be180b64e5497f037c39009e99df64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE GASLIMIT PUSH23 0x71B388EE13172FA558DE39F0627717BE180B64E5497F03 PUSH29 0x39009E99DF64736F6C6343000819003300000000000000000000000000 ","sourceMap":"361:4320:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220de457671b388ee13172fa558de39f0627717be180b64e5497f037c39009e99df64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE GASLIMIT PUSH23 0x71B388EE13172FA558DE39F0627717BE180B64E5497F03 PUSH29 0x39009E99DF64736F6C6343000819003300000000000000000000000000 ","sourceMap":"361:4320:24:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"mulDiv(uint256,uint256,uint256)":"infinite","mulDivRoundingUp(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libs/FullMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\n/// @title Contains 512-bit math functions\\r\\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\\r\\n/// @dev Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\\r\\nlibrary FullMath {\\r\\n\\t/// @notice Calculates floor(a\\u00d7b\\u00f7denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\r\\n\\t/// @param a The multiplicand\\r\\n\\t/// @param b The multiplier\\r\\n\\t/// @param denominator The divisor\\r\\n\\t/// @return result The 256-bit result\\r\\n\\t/// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\\r\\n\\tfunction mulDiv(\\r\\n\\t\\tuint256 a,\\r\\n\\t\\tuint256 b,\\r\\n\\t\\tuint256 denominator\\r\\n\\t) internal pure returns (uint256 result) {\\r\\n\\t\\tunchecked {\\r\\n\\t\\t\\t// 512-bit multiply [prod1 prod0] = a * b\\r\\n\\t\\t\\t// Compute the product mod 2**256 and mod 2**256 - 1\\r\\n\\t\\t\\t// then use the Chinese Remainder Theorem to reconstruct\\r\\n\\t\\t\\t// the 512 bit result. The result is stored in two 256\\r\\n\\t\\t\\t// variables such that product = prod1 * 2**256 + prod0\\r\\n\\t\\t\\tuint256 prod0 = a * b; // Least significant 256 bits of the product\\r\\n\\t\\t\\tuint256 prod1; // Most significant 256 bits of the product\\r\\n\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\tlet mm := mulmod(a, b, not(0))\\r\\n\\t\\t\\t\\tprod1 := sub(sub(mm, prod0), lt(mm, prod0))\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Make sure the result is less than 2**256.\\r\\n\\t\\t\\t// Also prevents denominator == 0\\r\\n\\t\\t\\trequire(denominator > prod1);\\r\\n\\r\\n\\t\\t\\t// Handle non-overflow cases, 256 by 256 division\\r\\n\\t\\t\\tif (prod1 == 0) {\\r\\n\\t\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\t\\tresult := div(prod0, denominator)\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn result;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t///////////////////////////////////////////////\\r\\n\\t\\t\\t// 512 by 256 division.\\r\\n\\t\\t\\t///////////////////////////////////////////////\\r\\n\\r\\n\\t\\t\\t// Make division exact by subtracting the remainder from [prod1 prod0]\\r\\n\\t\\t\\t// Compute remainder using mulmod\\r\\n\\t\\t\\tuint256 remainder;\\r\\n\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\tremainder := mulmod(a, b, denominator)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// Subtract 256 bit number from 512 bit number\\r\\n\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\tprod1 := sub(prod1, gt(remainder, prod0))\\r\\n\\t\\t\\t\\tprod0 := sub(prod0, remainder)\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Factor powers of two out of denominator\\r\\n\\t\\t\\t// Compute largest power of two divisor of denominator.\\r\\n\\t\\t\\t// Always >= 1.\\r\\n\\t\\t\\tuint256 twos = (0 - denominator) & denominator;\\r\\n\\t\\t\\t// Divide denominator by power of two\\r\\n\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\tdenominator := div(denominator, twos)\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Divide [prod1 prod0] by the factors of two\\r\\n\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\tprod0 := div(prod0, twos)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// Shift in bits from prod1 into prod0. For this we need\\r\\n\\t\\t\\t// to flip `twos` such that it is 2**256 / twos.\\r\\n\\t\\t\\t// If twos is zero, then it becomes one\\r\\n\\t\\t\\tassembly {\\r\\n\\t\\t\\t\\ttwos := add(div(sub(0, twos), twos), 1)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tprod0 |= prod1 * twos;\\r\\n\\r\\n\\t\\t\\t// Invert denominator mod 2**256\\r\\n\\t\\t\\t// Now that denominator is an odd number, it has an inverse\\r\\n\\t\\t\\t// modulo 2**256 such that denominator * inv = 1 mod 2**256.\\r\\n\\t\\t\\t// Compute the inverse by starting with a seed that is correct\\r\\n\\t\\t\\t// correct for four bits. That is, denominator * inv = 1 mod 2**4\\r\\n\\t\\t\\tuint256 inv = (3 * denominator) ^ 2;\\r\\n\\t\\t\\t// Now use Newton-Raphson iteration to improve the precision.\\r\\n\\t\\t\\t// Thanks to Hensel's lifting lemma, this also works in modular\\r\\n\\t\\t\\t// arithmetic, doubling the correct bits in each step.\\r\\n\\t\\t\\tinv *= 2 - denominator * inv; // inverse mod 2**8\\r\\n\\t\\t\\tinv *= 2 - denominator * inv; // inverse mod 2**16\\r\\n\\t\\t\\tinv *= 2 - denominator * inv; // inverse mod 2**32\\r\\n\\t\\t\\tinv *= 2 - denominator * inv; // inverse mod 2**64\\r\\n\\t\\t\\tinv *= 2 - denominator * inv; // inverse mod 2**128\\r\\n\\t\\t\\tinv *= 2 - denominator * inv; // inverse mod 2**256\\r\\n\\r\\n\\t\\t\\t// Because the division is now exact we can divide by multiplying\\r\\n\\t\\t\\t// with the modular inverse of denominator. This will give us the\\r\\n\\t\\t\\t// correct result modulo 2**256. Since the preconditions guarantee\\r\\n\\t\\t\\t// that the outcome is less than 2**256, this is the final result.\\r\\n\\t\\t\\t// We don't need to compute the high bits of the result and prod1\\r\\n\\t\\t\\t// is no longer required.\\r\\n\\t\\t\\tresult = prod0 * inv;\\r\\n\\t\\t\\treturn result;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/// @notice Calculates ceil(a\\u00d7b\\u00f7denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\r\\n\\t/// @param a The multiplicand\\r\\n\\t/// @param b The multiplier\\r\\n\\t/// @param denominator The divisor\\r\\n\\t/// @return result The 256-bit result\\r\\n\\tfunction mulDivRoundingUp(\\r\\n\\t\\tuint256 a,\\r\\n\\t\\tuint256 b,\\r\\n\\t\\tuint256 denominator\\r\\n\\t) internal pure returns (uint256 result) {\\r\\n\\t\\tunchecked {\\r\\n\\t\\t\\tresult = mulDiv(a, b, denominator);\\r\\n\\t\\t\\tif (mulmod(a, b, denominator) > 0) {\\r\\n\\t\\t\\t\\trequire(result < type(uint256).max);\\r\\n\\t\\t\\t\\tresult++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x5c429d8bd5d680089b6f8b1d511b8d3e358ccca19e36d2f2fcc55cff66928b09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision","version":1}}}}}}